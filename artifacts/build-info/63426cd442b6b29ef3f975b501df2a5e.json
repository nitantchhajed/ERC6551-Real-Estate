{
	"id": "63426cd442b6b29ef3f975b501df2a5e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC6551Account.sol": {
				"content": "pragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC1271.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\";\nimport \"./Bytecode.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./IERC6551Account.sol\";\n\ncontract ExampleERC6551Account is IERC165, IERC1271, IERC6551Account {\n    receive() external payable {}\n\n    function executeCall(\n        address to,\n        uint256 value,\n        bytes calldata data\n    ) external payable returns (bytes memory result) {\n        require(tx.origin == owner(), \"Not token owner\");\n\n        bool success;\n        (success, result) = to.call{value: value}(data);\n\n        if (!success) {\n            assembly {\n                revert(add(result, 32), mload(result))\n            }\n        }\n    }\n\n    function token()\n        external\n        view\n        returns (\n            uint256 chainId,\n            address tokenContract,\n            uint256 tokenId\n        )\n    {\n        uint256 length = address(this).code.length;\n        return\n            abi.decode(\n                Bytecode.codeAt(address(this), length - 0x60, length),\n                (uint256, address, uint256)\n            );\n    }\n\n    function executeCallTransferToken(\n        address _to,\n        address _tokenAddr,\n        uint256 _amount\n    ) external returns (bool) {\n        require(msg.sender == owner(), \"not owner\");\n        bool success;\n        success = IERC20(_tokenAddr).transfer(_to, _amount);\n        if (!success) {\n            return false;\n        }\n        return true;\n    }\n\n    function owner() public view returns (address) {\n        (uint256 chainId, address tokenContract, uint256 tokenId) = this\n            .token();\n        if (chainId != block.chainid) return address(0);\n\n        return IERC721(tokenContract).ownerOf(tokenId);\n    }\n\n    function supportsInterface(bytes4 interfaceId) public pure returns (bool) {\n        return (interfaceId == type(IERC165).interfaceId ||\n            interfaceId == type(IERC6551Account).interfaceId);\n    }\n\n    function isValidSignature(bytes32 hash, bytes memory signature)\n        external\n        view\n        returns (bytes4 magicValue)\n    {\n        bool isValid = SignatureChecker.isValidSignatureNow(\n            owner(),\n            hash,\n            signature\n        );\n\n        if (isValid) {\n            return IERC1271.isValidSignature.selector;\n        }\n\n        return \"\";\n    }\n}\n"
			},
			"IERC6551Account.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.21;\n/// @dev the ERC-165 identifier for this interface is `0x400a0398`\ninterface IERC6551Account {\n    /// @dev Token bound accounts MUST implement a `receive` function.\n    ///\n    /// Token bound accounts MAY perform arbitrary logic to restrict conditions\n    /// under which Ether can be received.\n    receive() external payable;\n\n    /// @dev Executes `call` on address `to`, with value `value` and calldata\n    /// `data`.\n    ///\n    /// MUST revert and bubble up errors if call fails.\n    ///\n    /// By default, token bound accounts MUST allow the owner of the ERC-721 token\n    /// which owns the account to execute arbitrary calls using `executeCall`.\n    ///\n    /// Token bound accounts MAY implement additional authorization mechanisms\n    /// which limit the ability of the ERC-721 token holder to execute calls.\n    ///\n    /// Token bound accounts MAY implement additional execution functions which\n    /// grant execution permissions to other non-owner accounts.\n    ///\n    /// @return The result of the call\n    function executeCall(\n        address to,\n        uint256 value,\n        bytes calldata data\n    ) external payable returns (bytes memory);\n\n    /// @dev Returns identifier of the ERC-721 token which owns the\n    /// account\n    ///\n    /// The return value of this function MUST be constant - it MUST NOT change\n    /// over time.\n    ///\n    /// @return chainId The EIP-155 ID of the chain the ERC-721 token exists on\n    /// @return tokenContract The contract address of the ERC-721 token\n    /// @return tokenId The ID of the ERC-721 token\n    function token()\n        external\n        view\n        returns (\n            uint256 chainId,\n            address tokenContract,\n            uint256 tokenId\n        );\n\n    /// @dev Returns the owner of the ERC-721 token which controls the account\n    /// if the token exists.\n    ///\n    /// This is value is obtained by calling `ownerOf` on the ERC-721 contract.\n    ///\n    /// @return Address of the owner of the ERC-721 token which owns the account\n    function owner() external view returns (address);\n\n    /// @dev Returns a nonce value that is updated on every successful transaction\n    ///\n    /// @return The current account nonce\n  //  function nonce() external view returns (uint256);\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"Bytecode.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n\nlibrary Bytecode {\n  error InvalidCodeAtRange(uint256 _size, uint256 _start, uint256 _end);\n\n  /**\n    @notice Generate a creation code that results on a contract with `_code` as bytecode\n    @param _code The returning value of the resulting `creationCode`\n    @return creationCode (constructor) for new contract\n  */\n  function creationCodeFor(bytes memory _code) internal pure returns (bytes memory) {\n    /*\n      0x00    0x63         0x63XXXXXX  PUSH4 _code.length  size\n      0x01    0x80         0x80        DUP1                size size\n      0x02    0x60         0x600e      PUSH1 14            14 size size\n      0x03    0x60         0x6000      PUSH1 00            0 14 size size\n      0x04    0x39         0x39        CODECOPY            size\n      0x05    0x60         0x6000      PUSH1 00            0 size\n      0x06    0xf3         0xf3        RETURN\n      <CODE>\n    */\n\n    return abi.encodePacked(\n      hex\"63\",\n      uint32(_code.length),\n      hex\"80_60_0E_60_00_39_60_00_F3\",\n      _code\n    );\n  }\n\n  /**\n    @notice Returns the size of the code on a given address\n    @param _addr Address that may or may not contain code\n    @return size of the code on the given `_addr`\n  */\n  function codeSize(address _addr) internal view returns (uint256 size) {\n    assembly { size := extcodesize(_addr) }\n  }\n\n  /**\n    @notice Returns the code of a given address\n    @dev It will fail if `_end < _start`\n    @param _addr Address that may or may not contain code\n    @param _start number of bytes of code to skip on read\n    @param _end index before which to end extraction\n    @return oCode read from `_addr` deployed bytecode\n\n    Forked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd\n  */\n  function codeAt(address _addr, uint256 _start, uint256 _end) internal view returns (bytes memory oCode) {\n    uint256 csize = codeSize(_addr);\n    if (csize == 0) return bytes(\"\");\n\n    if (_start > csize) return bytes(\"\");\n    if (_end < _start) revert InvalidCodeAtRange(csize, _start, _end); \n\n    unchecked {\n      uint256 reqSize = _end - _start;\n      uint256 maxSize = csize - _start;\n\n      uint256 size = maxSize < reqSize ? maxSize : reqSize;\n\n      assembly {\n        // allocate output byte array - this could also be done without assembly\n        // by using o_code = new bytes(size)\n        oCode := mload(0x40)\n        // new \"memory end\" including padding\n        mstore(0x40, add(oCode, and(add(add(size, 0x20), 0x1f), not(0x1f))))\n        // store length in memory\n        mstore(oCode, size)\n        // actually retrieve the code, this needs assembly\n        extcodecopy(_addr, add(oCode, 0x20), _start, size)\n      }\n    }\n  }\n}"
			},
			"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/SignatureChecker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\nimport \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n * signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n * Argent and Gnosis Safe.\n *\n * _Available since v4.1._\n */\nlibrary SignatureChecker {\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n     * signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\n        (address recovered, ECDSA.RecoverError error) = ECDSA.tryRecover(hash, signature);\n        return\n            (error == ECDSA.RecoverError.NoError && recovered == signer) ||\n            isValidERC1271SignatureNow(signer, hash, signature);\n    }\n\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n     * against the signer smart contract using ERC1271.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidERC1271SignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) internal view returns (bool) {\n        (bool success, bytes memory result) = signer.staticcall(\n            abi.encodeWithSelector(IERC1271.isValidSignature.selector, hash, signature)\n        );\n        return (success &&\n            result.length >= 32 &&\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n *\n * _Available since v4.1._\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.custodian\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"IERC1271": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes32,bytes)": {
								"details": "Should return whether the signature provided is valid for the provided data",
								"params": {
									"hash": "Hash of the data to be signed",
									"signature": "Signature byte array associated with _data"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isValidSignature(bytes32,bytes)": "1626ba7e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token.custodian Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token.custodian Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf26647553721236b84a0687ea322ccaeb4241141408442fdc471a1c0a26118c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1acb6443850848b6003fb94e9435305cbb33bb5fd55e2f201b8e9fecf5efd07\",\"dweb:/ipfs/QmRei3tvaveDPEYG6EaLYaUTX5Be7AYUuC81MhF4xZtyEX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207c7230239fca73d394a84fcfce140afd03c22c4c7b2a2d46b91abb9d943b39e264736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c7230239fca73d394a84fcfce140afd03c22c4c7b2a2d46b91abb9d943b39e264736f6c63430008150033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x7230239FCA73D394A84FCFCE140AFD03C22C4C7B2A2D46B91ABB9D943B CODECOPY 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "220:2559:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c7230239fca73d394a84fcfce140afd03c22c4c7b2a2d46b91abb9d943b39e264736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x7230239FCA73D394A84FCFCE140AFD03C22C4C7B2A2D46B91ABB9D943B CODECOPY 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "220:2559:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207c7230239fca73d394a84fcfce140afd03c22c4c7b2a2d46b91abb9d943b39e264736f6c63430008150033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"Bytecode.sol",
								"ERC6551Account.sol",
								"IERC6551Account.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":369:9130  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":369:9130  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122058731654275fbc65a3e4410c523ca79581685a24a3d9a5df54ea8814f2415c2b64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122058731654275fbc65a3e4410c523ca79581685a24a3d9a5df54ea8814f2415c2b64736f6c63430008150033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC PUSH20 0x1654275FBC65A3E4410C523CA79581685A24A3D9 0xA5 0xDF SLOAD 0xEA DUP9 EQ CALLCODE COINBASE 0x5C 0x2B PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "369:8761:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122058731654275fbc65a3e4410c523ca79581685a24a3d9a5df54ea8814f2415c2b64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC PUSH20 0x1654275FBC65A3E4410C523CA79581685A24A3D9 0xA5 0xDF SLOAD 0xEA DUP9 EQ CALLCODE COINBASE 0x5C 0x2B PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "369:8761:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122058731654275fbc65a3e4410c523ca79581685a24a3d9a5df54ea8814f2415c2b64736f6c63430008150033",
									".code": [
										{
											"begin": 369,
											"end": 9130,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"Bytecode.sol",
								"ERC6551Account.sol",
								"IERC6551Account.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
				"SignatureChecker": {
					"abi": [],
					"devdoc": {
						"details": "Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like Argent and Gnosis Safe. _Available since v4.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":506:2261  library SignatureChecker {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":506:2261  library SignatureChecker {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203a063afa5ebaa9b9cbb2e184c6866f264058e66f38549d6135011b42fcbd278b64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a063afa5ebaa9b9cbb2e184c6866f264058e66f38549d6135011b42fcbd278b64736f6c63430008150033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE MOD GASPRICE STATICCALL 0x5E 0xBA 0xA9 0xB9 0xCB 0xB2 0xE1 DUP5 0xC6 DUP7 PUSH16 0x264058E66F38549D6135011B42FCBD27 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "506:1755:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a063afa5ebaa9b9cbb2e184c6866f264058e66f38549d6135011b42fcbd278b64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE MOD GASPRICE STATICCALL 0x5E 0xBA 0xA9 0xB9 0xCB 0xB2 0xE1 DUP5 0xC6 DUP7 PUSH16 0x264058E66F38549D6135011B42FCBD27 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "506:1755:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"isValidERC1271SignatureNow(address,bytes32,bytes memory)": "infinite",
								"isValidSignatureNow(address,bytes32,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a063afa5ebaa9b9cbb2e184c6866f264058e66f38549d6135011b42fcbd278b64736f6c63430008150033",
									".code": [
										{
											"begin": 506,
											"end": 2261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 506,
											"end": 2261,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 506,
											"end": 2261,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 506,
											"end": 2261,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 506,
											"end": 2261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 2261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 506,
											"end": 2261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 2261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 506,
											"end": 2261,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"Bytecode.sol",
								"ERC6551Account.sol",
								"IERC6551Account.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like Argent and Gnosis Safe. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202f3819478d397fe414c8d55a279fbba486b9749616c9f1e78a0035e3f17ebc5764736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f3819478d397fe414c8d55a279fbba486b9749616c9f1e78a0035e3f17ebc5764736f6c63430008150033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F CODESIZE NOT SELFBALANCE DUP14 CODECOPY PUSH32 0xE414C8D55A279FBBA486B9749616C9F1E78A0035E3F17EBC5764736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "202:12582:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f3819478d397fe414c8d55a279fbba486b9749616c9f1e78a0035e3f17ebc5764736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F CODESIZE NOT SELFBALANCE DUP14 CODECOPY PUSH32 0xE414C8D55A279FBBA486B9749616C9F1E78A0035E3F17EBC5764736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "202:12582:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f3819478d397fe414c8d55a279fbba486b9749616c9f1e78a0035e3f17ebc5764736f6c63430008150033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"Bytecode.sol",
								"ERC6551Account.sol",
								"IERC6551Account.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201a90ef62b2d5dbbf9fa49b40c2d071c95cd491b5930694250f9fd570f757cf6264736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201a90ef62b2d5dbbf9fa49b40c2d071c95cd491b5930694250f9fd570f757cf6264736f6c63430008150033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE SWAP1 0xEF PUSH3 0xB2D5DB 0xBF SWAP16 LOG4 SWAP12 BLOCKHASH 0xC2 0xD0 PUSH18 0xC95CD491B5930694250F9FD570F757CF6264 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "215:1047:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201a90ef62b2d5dbbf9fa49b40c2d071c95cd491b5930694250f9fd570f757cf6264736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE SWAP1 0xEF PUSH3 0xB2D5DB 0xBF SWAP16 LOG4 SWAP12 BLOCKHASH 0xC2 0xD0 PUSH18 0xC95CD491B5930694250F9FD570F757CF6264 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "215:1047:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201a90ef62b2d5dbbf9fa49b40c2d071c95cd491b5930694250f9fd570f757cf6264736f6c63430008150033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"Bytecode.sol",
								"ERC6551Account.sol",
								"IERC6551Account.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Bytecode.sol": {
				"Bytecode": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_size",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_end",
									"type": "uint256"
								}
							],
							"name": "InvalidCodeAtRange",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Bytecode.sol\":58:2741  library Bytecode {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Bytecode.sol\":58:2741  library Bytecode {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ac274b2740d65be5f6ec83792eb05a55210f12b0e6037cd45bdbe596742bbbef64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ac274b2740d65be5f6ec83792eb05a55210f12b0e6037cd45bdbe596742bbbef64736f6c63430008150033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0x27 0x4B 0x27 BLOCKHASH 0xD6 JUMPDEST 0xE5 0xF6 0xEC DUP4 PUSH26 0x2EB05A55210F12B0E6037CD45BDBE596742BBBEF64736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "58:2683:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ac274b2740d65be5f6ec83792eb05a55210f12b0e6037cd45bdbe596742bbbef64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0x27 0x4B 0x27 BLOCKHASH 0xD6 JUMPDEST 0xE5 0xF6 0xEC DUP4 PUSH26 0x2EB05A55210F12B0E6037CD45BDBE596742BBBEF64736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "58:2683:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"codeAt(address,uint256,uint256)": "infinite",
								"codeSize(address)": "infinite",
								"creationCodeFor(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 58,
									"end": 2741,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ac274b2740d65be5f6ec83792eb05a55210f12b0e6037cd45bdbe596742bbbef64736f6c63430008150033",
									".code": [
										{
											"begin": 58,
											"end": 2741,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 58,
											"end": 2741,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 58,
											"end": 2741,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 58,
											"end": 2741,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 2741,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 2741,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 58,
											"end": 2741,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 2741,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 58,
											"end": 2741,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"Bytecode.sol",
								"ERC6551Account.sol",
								"IERC6551Account.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"InvalidCodeAtRange\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Bytecode.sol\":\"Bytecode\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Bytecode.sol\":{\"keccak256\":\"0x0088e4b682739d435694d1e9586706cd933c17a8d2b471c999308b7e50cd2f7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://751b131ee7d1b49e97dd5d8f12b19a956fb0e259c18aa9445ec78d6bcf5848e4\",\"dweb:/ipfs/QmcNooimfYnZh3xvDi6bANzCHuZBGxQybwv3xsVZi4XLM2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC6551Account.sol": {
				"ExampleERC6551Account": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_size",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_end",
									"type": "uint256"
								}
							],
							"name": "InvalidCodeAtRange",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "executeCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "executeCallTransferToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"executeCall(address,uint256,bytes)": {
								"details": "Executes `call` on address `to`, with value `value` and calldata `data`. MUST revert and bubble up errors if call fails. By default, token bound accounts MUST allow the owner of the ERC-721 token which owns the account to execute arbitrary calls using `executeCall`. Token bound accounts MAY implement additional authorization mechanisms which limit the ability of the ERC-721 token holder to execute calls. Token bound accounts MAY implement additional execution functions which grant execution permissions to other non-owner accounts.",
								"returns": {
									"result": "The result of the call"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "Should return whether the signature provided is valid for the provided data",
								"params": {
									"hash": "Hash of the data to be signed",
									"signature": "Signature byte array associated with _data"
								}
							},
							"owner()": {
								"details": "Returns the owner of the ERC-721 token which controls the account if the token exists. This is value is obtained by calling `ownerOf` on the ERC-721 contract.",
								"returns": {
									"_0": "Address of the owner of the ERC-721 token which owns the account"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"token()": {
								"details": "Returns identifier of the ERC-721 token which owns the account The return value of this function MUST be constant - it MUST NOT change over time.",
								"returns": {
									"chainId": "The EIP-155 ID of the chain the ERC-721 token exists on",
									"tokenContract": "The contract address of the ERC-721 token",
									"tokenId": "The ID of the ERC-721 token"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC6551Account.sol\":398:2569  contract ExampleERC6551Account is IERC165, IERC1271, IERC6551Account {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC6551Account.sol\":398:2569  contract ExampleERC6551Account is IERC165, IERC1271, IERC6551Account {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1626ba7e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7d6ad95d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9e5d4c49\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC6551Account.sol\":1974:2178  function supportsInterface(bytes4 interfaceId) public pure returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC6551Account.sol\":2184:2567  function isValidSignature(bytes32 hash, bytes memory signature)... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC6551Account.sol\":1337:1699  function executeCallTransferToken(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC6551Account.sol\":1705:1968  function owner() public view returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC6551Account.sol\":508:926  function executeCall(... */\n    tag_7:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC6551Account.sol\":932:1331  function token()... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC6551Account.sol\":1974:2178  function supportsInterface(bytes4 interfaceId) public pure returns (bool) {... */\n    tag_15:\n        /* \"ERC6551Account.sol\":2042:2046  bool */\n      0x00\n        /* \"ERC6551Account.sol\":2081:2106  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"ERC6551Account.sol\":2066:2106  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC6551Account.sol\":2066:2077  interfaceId */\n      dup3\n        /* \"ERC6551Account.sol\":2066:2106  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC6551Account.sol\":2066:2170  interfaceId == type(IERC165).interfaceId ||... */\n      dup1\n      tag_48\n      jumpi\n      pop\n        /* \"ERC6551Account.sol\":2137:2170  type(IERC6551Account).interfaceId */\n      0xeff4d37800000000000000000000000000000000000000000000000000000000\n        /* \"ERC6551Account.sol\":2122:2170  interfaceId == type(IERC6551Account).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC6551Account.sol\":2122:2133  interfaceId */\n      dup3\n        /* \"ERC6551Account.sol\":2122:2170  interfaceId == type(IERC6551Account).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC6551Account.sol\":2066:2170  interfaceId == type(IERC165).interfaceId ||... */\n    tag_48:\n        /* \"ERC6551Account.sol\":2058:2171  return (interfaceId == type(IERC165).interfaceId ||... */\n      swap1\n      pop\n        /* \"ERC6551Account.sol\":1974:2178  function supportsInterface(bytes4 interfaceId) public pure returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC6551Account.sol\":2184:2567  function isValidSignature(bytes32 hash, bytes memory signature)... */\n    tag_22:\n        /* \"ERC6551Account.sol\":2295:2312  bytes4 magicValue */\n      0x00\n        /* \"ERC6551Account.sol\":2328:2340  bool isValid */\n      dup1\n        /* \"ERC6551Account.sol\":2343:2451  SignatureChecker.isValidSignatureNow(... */\n      tag_50\n        /* \"ERC6551Account.sol\":2393:2400  owner() */\n      tag_51\n        /* \"ERC6551Account.sol\":2393:2398  owner */\n      tag_33\n        /* \"ERC6551Account.sol\":2393:2400  owner() */\n      jump\t// in\n    tag_51:\n        /* \"ERC6551Account.sol\":2414:2418  hash */\n      dup6\n        /* \"ERC6551Account.sol\":2432:2441  signature */\n      dup6\n        /* \"ERC6551Account.sol\":2343:2379  SignatureChecker.isValidSignatureNow */\n      tag_52\n        /* \"ERC6551Account.sol\":2343:2451  SignatureChecker.isValidSignatureNow(... */\n      jump\t// in\n    tag_50:\n        /* \"ERC6551Account.sol\":2328:2451  bool isValid = SignatureChecker.isValidSignatureNow(... */\n      swap1\n      pop\n        /* \"ERC6551Account.sol\":2466:2473  isValid */\n      dup1\n        /* \"ERC6551Account.sol\":2462:2541  if (isValid) {... */\n      iszero\n      tag_53\n      jumpi\n        /* \"ERC6551Account.sol\":2496:2530  IERC1271.isValidSignature.selector */\n      shl(0xe0, 0x1626ba7e)\n        /* \"ERC6551Account.sol\":2489:2530  return IERC1271.isValidSignature.selector */\n      swap2\n      pop\n      pop\n      jump(tag_49)\n        /* \"ERC6551Account.sol\":2462:2541  if (isValid) {... */\n    tag_53:\n        /* \"ERC6551Account.sol\":2551:2560  return \"\" */\n      0x00\n      swap2\n      pop\n      pop\n        /* \"ERC6551Account.sol\":2184:2567  function isValidSignature(bytes32 hash, bytes memory signature)... */\n    tag_49:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC6551Account.sol\":1337:1699  function executeCallTransferToken(... */\n    tag_29:\n        /* \"ERC6551Account.sol\":1469:1473  bool */\n      0x00\n        /* \"ERC6551Account.sol\":1507:1514  owner() */\n      tag_55\n        /* \"ERC6551Account.sol\":1507:1512  owner */\n      tag_33\n        /* \"ERC6551Account.sol\":1507:1514  owner() */\n      jump\t// in\n    tag_55:\n        /* \"ERC6551Account.sol\":1493:1514  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC6551Account.sol\":1493:1503  msg.sender */\n      caller\n        /* \"ERC6551Account.sol\":1493:1514  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC6551Account.sol\":1485:1528  require(msg.sender == owner(), \"not owner\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n        /* \"ERC6551Account.sol\":1538:1550  bool success */\n      0x00\n        /* \"ERC6551Account.sol\":1577:1587  _tokenAddr */\n      dup4\n        /* \"ERC6551Account.sol\":1570:1597  IERC20(_tokenAddr).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"ERC6551Account.sol\":1598:1601  _to */\n      dup7\n        /* \"ERC6551Account.sol\":1603:1610  _amount */\n      dup6\n        /* \"ERC6551Account.sol\":1570:1611  IERC20(_tokenAddr).transfer(_to, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"ERC6551Account.sol\":1560:1611  success = IERC20(_tokenAddr).transfer(_to, _amount) */\n      swap1\n      pop\n        /* \"ERC6551Account.sol\":1626:1633  success */\n      dup1\n        /* \"ERC6551Account.sol\":1621:1672  if (!success) {... */\n      tag_65\n      jumpi\n        /* \"ERC6551Account.sol\":1656:1661  false */\n      0x00\n        /* \"ERC6551Account.sol\":1649:1661  return false */\n      swap2\n      pop\n      pop\n      jump(tag_54)\n        /* \"ERC6551Account.sol\":1621:1672  if (!success) {... */\n    tag_65:\n        /* \"ERC6551Account.sol\":1688:1692  true */\n      0x01\n        /* \"ERC6551Account.sol\":1681:1692  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC6551Account.sol\":1337:1699  function executeCallTransferToken(... */\n    tag_54:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC6551Account.sol\":1705:1968  function owner() public view returns (address) {... */\n    tag_33:\n        /* \"ERC6551Account.sol\":1743:1750  address */\n      0x00\n        /* \"ERC6551Account.sol\":1763:1778  uint256 chainId */\n      dup1\n        /* \"ERC6551Account.sol\":1780:1801  address tokenContract */\n      0x00\n        /* \"ERC6551Account.sol\":1803:1818  uint256 tokenId */\n      dup1\n        /* \"ERC6551Account.sol\":1822:1826  this */\n      address\n        /* \"ERC6551Account.sol\":1822:1845  this... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc0c546a\n        /* \"ERC6551Account.sol\":1822:1847  this... */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"ERC6551Account.sol\":1762:1847  (uint256 chainId, address tokenContract, uint256 tokenId) = this... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"ERC6551Account.sol\":1872:1885  block.chainid */\n      chainid\n        /* \"ERC6551Account.sol\":1861:1868  chainId */\n      dup4\n        /* \"ERC6551Account.sol\":1861:1885  chainId != block.chainid */\n      eq\n        /* \"ERC6551Account.sol\":1857:1904  if (chainId != block.chainid) return address(0) */\n      tag_71\n      jumpi\n        /* \"ERC6551Account.sol\":1902:1903  0 */\n      0x00\n        /* \"ERC6551Account.sol\":1887:1904  return address(0) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_66)\n        /* \"ERC6551Account.sol\":1857:1904  if (chainId != block.chainid) return address(0) */\n    tag_71:\n        /* \"ERC6551Account.sol\":1930:1943  tokenContract */\n      dup2\n        /* \"ERC6551Account.sol\":1922:1952  IERC721(tokenContract).ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"ERC6551Account.sol\":1953:1960  tokenId */\n      dup3\n        /* \"ERC6551Account.sol\":1922:1961  IERC721(tokenContract).ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"ERC6551Account.sol\":1915:1961  return IERC721(tokenContract).ownerOf(tokenId) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"ERC6551Account.sol\":1705:1968  function owner() public view returns (address) {... */\n    tag_66:\n      swap1\n      jump\t// out\n        /* \"ERC6551Account.sol\":508:926  function executeCall(... */\n    tag_39:\n        /* \"ERC6551Account.sol\":633:652  bytes memory result */\n      0x60\n        /* \"ERC6551Account.sol\":685:692  owner() */\n      tag_79\n        /* \"ERC6551Account.sol\":685:690  owner */\n      tag_33\n        /* \"ERC6551Account.sol\":685:692  owner() */\n      jump\t// in\n    tag_79:\n        /* \"ERC6551Account.sol\":672:692  tx.origin == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC6551Account.sol\":672:681  tx.origin */\n      origin\n        /* \"ERC6551Account.sol\":672:692  tx.origin == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC6551Account.sol\":664:712  require(tx.origin == owner(), \"Not token owner\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"ERC6551Account.sol\":723:735  bool success */\n      0x00\n        /* \"ERC6551Account.sol\":765:767  to */\n      dup6\n        /* \"ERC6551Account.sol\":765:772  to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC6551Account.sol\":780:785  value */\n      dup6\n        /* \"ERC6551Account.sol\":787:791  data */\n      dup6\n      dup6\n        /* \"ERC6551Account.sol\":765:792  to.call{value: value}(data) */\n      mload(0x40)\n      tag_83\n      swap3\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_87\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_86)\n    tag_87:\n      0x60\n      swap2\n      pop\n    tag_86:\n      pop\n        /* \"ERC6551Account.sol\":745:792  (success, result) = to.call{value: value}(data) */\n      dup1\n      swap4\n      pop\n      dup2\n      swap3\n      pop\n      pop\n      pop\n        /* \"ERC6551Account.sol\":808:815  success */\n      dup1\n        /* \"ERC6551Account.sol\":803:920  if (!success) {... */\n      tag_88\n      jumpi\n        /* \"ERC6551Account.sol\":888:894  result */\n      dup2\n        /* \"ERC6551Account.sol\":882:895  mload(result) */\n      mload\n        /* \"ERC6551Account.sol\":877:879  32 */\n      0x20\n        /* \"ERC6551Account.sol\":869:875  result */\n      dup4\n        /* \"ERC6551Account.sol\":865:880  add(result, 32) */\n      add\n        /* \"ERC6551Account.sol\":858:896  revert(add(result, 32), mload(result)) */\n      revert\n        /* \"ERC6551Account.sol\":803:920  if (!success) {... */\n    tag_88:\n        /* \"ERC6551Account.sol\":654:926  {... */\n      pop\n        /* \"ERC6551Account.sol\":508:926  function executeCall(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC6551Account.sol\":932:1331  function token()... */\n    tag_44:\n        /* \"ERC6551Account.sol\":1009:1024  uint256 chainId */\n      0x00\n        /* \"ERC6551Account.sol\":1038:1059  address tokenContract */\n      dup1\n        /* \"ERC6551Account.sol\":1073:1088  uint256 tokenId */\n      0x00\n        /* \"ERC6551Account.sol\":1113:1127  uint256 length */\n      dup1\n        /* \"ERC6551Account.sol\":1138:1142  this */\n      address\n        /* \"ERC6551Account.sol\":1130:1155  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"ERC6551Account.sol\":1113:1155  uint256 length = address(this).code.length */\n      swap1\n      pop\n        /* \"ERC6551Account.sol\":1212:1265  Bytecode.codeAt(address(this), length - 0x60, length) */\n      tag_90\n        /* \"ERC6551Account.sol\":1236:1240  this */\n      address\n        /* \"ERC6551Account.sol\":1252:1256  0x60 */\n      0x60\n        /* \"ERC6551Account.sol\":1243:1249  length */\n      dup4\n        /* \"ERC6551Account.sol\":1243:1256  length - 0x60 */\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"ERC6551Account.sol\":1258:1264  length */\n      dup4\n        /* \"ERC6551Account.sol\":1212:1227  Bytecode.codeAt */\n      tag_93\n        /* \"ERC6551Account.sol\":1212:1265  Bytecode.codeAt(address(this), length - 0x60, length) */\n      jump\t// in\n    tag_90:\n        /* \"ERC6551Account.sol\":1184:1324  abi.decode(... */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"ERC6551Account.sol\":1165:1324  return... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"ERC6551Account.sol\":932:1331  function token()... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1014:1380  function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1120:1124  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1137:1154  address recovered */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1156:1180  ECDSA.RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1184:1217  ECDSA.tryRecover(hash, signature) */\n      tag_97\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1201:1205  hash */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1207:1216  signature */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1184:1200  ECDSA.tryRecover */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1184:1217  ECDSA.tryRecover(hash, signature) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1136:1217  (address recovered, ECDSA.RecoverError error) = ECDSA.tryRecover(hash, signature) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1256:1282  ECDSA.RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1247:1282  error == ECDSA.RecoverError.NoError */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_99\n      jumpi\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1247:1252  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1247:1282  error == ECDSA.RecoverError.NoError */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_102\n      jumpi\n      tag_103\n      tag_101\n      jump\t// in\n    tag_103:\n    tag_102:\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1247:1305  error == ECDSA.RecoverError.NoError && recovered == signer */\n      dup1\n      iszero\n      tag_104\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1299:1305  signer */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1286:1305  recovered == signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1286:1295  recovered */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1286:1305  recovered == signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1247:1305  error == ECDSA.RecoverError.NoError && recovered == signer */\n    tag_104:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1246:1373  (error == ECDSA.RecoverError.NoError && recovered == signer) ||... */\n      dup1\n      tag_105\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1322:1373  isValidERC1271SignatureNow(signer, hash, signature) */\n      tag_106\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1349:1355  signer */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1357:1361  hash */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1363:1372  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1322:1348  isValidERC1271SignatureNow */\n      tag_107\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1322:1373  isValidERC1271SignatureNow(signer, hash, signature) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1246:1373  (error == ECDSA.RecoverError.NoError && recovered == signer) ||... */\n    tag_105:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1227:1373  return... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1014:1380  function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Bytecode.sol\":1793:2739  function codeAt(address _addr, uint256 _start, uint256 _end) internal view returns (bytes memory oCode) {... */\n    tag_93:\n        /* \"Bytecode.sol\":1877:1895  bytes memory oCode */\n      0x60\n        /* \"Bytecode.sol\":1903:1916  uint256 csize */\n      0x00\n        /* \"Bytecode.sol\":1919:1934  codeSize(_addr) */\n      tag_109\n        /* \"Bytecode.sol\":1928:1933  _addr */\n      dup6\n        /* \"Bytecode.sol\":1919:1927  codeSize */\n      tag_110\n        /* \"Bytecode.sol\":1919:1934  codeSize(_addr) */\n      jump\t// in\n    tag_109:\n        /* \"Bytecode.sol\":1903:1934  uint256 csize = codeSize(_addr) */\n      swap1\n      pop\n        /* \"Bytecode.sol\":1953:1954  0 */\n      0x00\n        /* \"Bytecode.sol\":1944:1949  csize */\n      dup2\n        /* \"Bytecode.sol\":1944:1954  csize == 0 */\n      sub\n        /* \"Bytecode.sol\":1940:1972  if (csize == 0) return bytes(\"\") */\n      tag_111\n      jumpi\n        /* \"Bytecode.sol\":1963:1972  bytes(\"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"Bytecode.sol\":1956:1972  return bytes(\"\") */\n      swap2\n      pop\n      pop\n      jump(tag_108)\n        /* \"Bytecode.sol\":1940:1972  if (csize == 0) return bytes(\"\") */\n    tag_111:\n        /* \"Bytecode.sol\":1992:1997  csize */\n      dup1\n        /* \"Bytecode.sol\":1983:1989  _start */\n      dup5\n        /* \"Bytecode.sol\":1983:1997  _start > csize */\n      gt\n        /* \"Bytecode.sol\":1979:2015  if (_start > csize) return bytes(\"\") */\n      iszero\n      tag_112\n      jumpi\n        /* \"Bytecode.sol\":2006:2015  bytes(\"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"Bytecode.sol\":1999:2015  return bytes(\"\") */\n      swap2\n      pop\n      pop\n      jump(tag_108)\n        /* \"Bytecode.sol\":1979:2015  if (_start > csize) return bytes(\"\") */\n    tag_112:\n        /* \"Bytecode.sol\":2032:2038  _start */\n      dup4\n        /* \"Bytecode.sol\":2025:2029  _end */\n      dup4\n        /* \"Bytecode.sol\":2025:2038  _end < _start */\n      lt\n        /* \"Bytecode.sol\":2021:2086  if (_end < _start) revert InvalidCodeAtRange(csize, _start, _end) */\n      iszero\n      tag_113\n      jumpi\n        /* \"Bytecode.sol\":2066:2071  csize */\n      dup1\n        /* \"Bytecode.sol\":2073:2079  _start */\n      dup5\n        /* \"Bytecode.sol\":2081:2085  _end */\n      dup5\n        /* \"Bytecode.sol\":2047:2086  InvalidCodeAtRange(csize, _start, _end) */\n      mload(0x40)\n      0x2c4a89fa00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Bytecode.sol\":2021:2086  if (_end < _start) revert InvalidCodeAtRange(csize, _start, _end) */\n    tag_113:\n        /* \"Bytecode.sol\":2112:2127  uint256 reqSize */\n      0x00\n        /* \"Bytecode.sol\":2137:2143  _start */\n      dup5\n        /* \"Bytecode.sol\":2130:2134  _end */\n      dup5\n        /* \"Bytecode.sol\":2130:2143  _end - _start */\n      sub\n        /* \"Bytecode.sol\":2112:2143  uint256 reqSize = _end - _start */\n      swap1\n      pop\n        /* \"Bytecode.sol\":2151:2166  uint256 maxSize */\n      0x00\n        /* \"Bytecode.sol\":2177:2183  _start */\n      dup6\n        /* \"Bytecode.sol\":2169:2174  csize */\n      dup4\n        /* \"Bytecode.sol\":2169:2183  csize - _start */\n      sub\n        /* \"Bytecode.sol\":2151:2183  uint256 maxSize = csize - _start */\n      swap1\n      pop\n        /* \"Bytecode.sol\":2192:2204  uint256 size */\n      0x00\n        /* \"Bytecode.sol\":2217:2224  reqSize */\n      dup3\n        /* \"Bytecode.sol\":2207:2214  maxSize */\n      dup3\n        /* \"Bytecode.sol\":2207:2224  maxSize < reqSize */\n      lt\n        /* \"Bytecode.sol\":2207:2244  maxSize < reqSize ? maxSize : reqSize */\n      tag_116\n      jumpi\n        /* \"Bytecode.sol\":2237:2244  reqSize */\n      dup3\n        /* \"Bytecode.sol\":2207:2244  maxSize < reqSize ? maxSize : reqSize */\n      jump(tag_117)\n    tag_116:\n        /* \"Bytecode.sol\":2227:2234  maxSize */\n      dup2\n        /* \"Bytecode.sol\":2207:2244  maxSize < reqSize ? maxSize : reqSize */\n    tag_117:\n        /* \"Bytecode.sol\":2192:2244  uint256 size = maxSize < reqSize ? maxSize : reqSize */\n      swap1\n      pop\n        /* \"Bytecode.sol\":2413:2417  0x40 */\n      0x40\n        /* \"Bytecode.sol\":2407:2418  mload(0x40) */\n      mload\n        /* \"Bytecode.sol\":2398:2418  oCode := mload(0x40) */\n      swap5\n      pop\n        /* \"Bytecode.sol\":2533:2537  0x1f */\n      0x1f\n        /* \"Bytecode.sol\":2529:2538  not(0x1f) */\n      not\n        /* \"Bytecode.sol\":2522:2526  0x1f */\n      0x1f\n        /* \"Bytecode.sol\":2515:2519  0x20 */\n      0x20\n        /* \"Bytecode.sol\":2509:2513  size */\n      dup4\n        /* \"Bytecode.sol\":2505:2520  add(size, 0x20) */\n      add\n        /* \"Bytecode.sol\":2501:2527  add(add(size, 0x20), 0x1f) */\n      add\n        /* \"Bytecode.sol\":2497:2539  and(add(add(size, 0x20), 0x1f), not(0x1f)) */\n      and\n        /* \"Bytecode.sol\":2490:2495  oCode */\n      dup6\n        /* \"Bytecode.sol\":2486:2540  add(oCode, and(add(add(size, 0x20), 0x1f), not(0x1f))) */\n      add\n        /* \"Bytecode.sol\":2480:2484  0x40 */\n      0x40\n        /* \"Bytecode.sol\":2473:2541  mstore(0x40, add(oCode, and(add(add(size, 0x20), 0x1f), not(0x1f)))) */\n      mstore\n        /* \"Bytecode.sol\":2598:2602  size */\n      dup1\n        /* \"Bytecode.sol\":2591:2596  oCode */\n      dup6\n        /* \"Bytecode.sol\":2584:2603  mstore(oCode, size) */\n      mstore\n        /* \"Bytecode.sol\":2716:2720  size */\n      dup1\n        /* \"Bytecode.sol\":2708:2714  _start */\n      dup8\n        /* \"Bytecode.sol\":2701:2705  0x20 */\n      0x20\n        /* \"Bytecode.sol\":2694:2699  oCode */\n      dup8\n        /* \"Bytecode.sol\":2690:2706  add(oCode, 0x20) */\n      add\n        /* \"Bytecode.sol\":2683:2688  _addr */\n      dup11\n        /* \"Bytecode.sol\":2671:2721  extcodecopy(_addr, add(oCode, 0x20), _start, size) */\n      extcodecopy\n        /* \"Bytecode.sol\":2262:2729  {... */\n      pop\n      pop\n      pop\n        /* \"Bytecode.sol\":1897:2739  {... */\n      pop\n        /* \"Bytecode.sol\":1793:2739  function codeAt(address _addr, uint256 _start, uint256 _end) internal view returns (bytes memory oCode) {... */\n    tag_108:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2145:2875  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2226:2233  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2235:2247  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2283:2285  65 */\n      0x41\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2263:2272  signature */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2263:2279  signature.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2263:2285  signature.length == 65 */\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2259:2869  if (signature.length == 65) {... */\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2301:2310  bytes32 r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2324:2333  bytes32 s */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2347:2354  uint8 v */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2599:2603  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2588:2597  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2584:2604  add(signature, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2578:2605  mload(add(signature, 0x20)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2573:2605  r := mload(add(signature, 0x20)) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2648:2652  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2637:2646  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2633:2653  add(signature, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2627:2654  mload(add(signature, 0x40)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2622:2654  s := mload(add(signature, 0x40)) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2705:2709  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2694:2703  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2690:2710  add(signature, 0x60) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2684:2711  mload(add(signature, 0x60)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2681:2682  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2676:2712  byte(0, mload(add(signature, 0x60))) */\n      byte\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2671:2712  v := byte(0, mload(add(signature, 0x60))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2746:2771  tryRecover(hash, v, r, s) */\n      tag_120\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2757:2761  hash */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2763:2764  v */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2766:2767  r */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2769:2770  s */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2746:2756  tryRecover */\n      tag_121\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2746:2771  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2739:2771  return tryRecover(hash, v, r, s) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      jump(tag_118)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2259:2869  if (signature.length == 65) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2818:2819  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2822:2857  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2802:2858  return (address(0), RecoverError.InvalidSignatureLength) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2145:2875  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {... */\n    tag_118:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1786:2259  function isValidERC1271SignatureNow(... */\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1929:1933  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1946:1958  bool success */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1960:1979  bytes memory result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1983:1989  signer */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1983:2000  signer.staticcall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2037:2071  IERC1271.isValidSignature.selector */\n      shl(0xe0, 0x1626ba7e)\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2073:2077  hash */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2079:2088  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2014:2089  abi.encodeWithSelector(IERC1271.isValidSignature.selector, hash, signature) */\n      add(0x24, mload(0x40))\n      tag_124\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1983:2099  signer.staticcall(... */\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_130\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_129)\n    tag_130:\n      0x60\n      swap2\n      pop\n    tag_129:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1945:2099  (bool success, bytes memory result) = signer.staticcall(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2117:2124  success */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2117:2159  success &&... */\n      dup1\n      iszero\n      tag_131\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2157:2159  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2140:2146  result */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2140:2153  result.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2140:2159  result.length >= 32 */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2117:2159  success &&... */\n    tag_131:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2117:2251  success &&... */\n      dup1\n      iszero\n      tag_132\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2216:2250  IERC1271.isValidSignature.selector */\n      shl(0xe0, 0x1626ba7e)\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2208:2251  bytes32(IERC1271.isValidSignature.selector) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2186:2192  result */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2175:2204  abi.decode(result, (bytes32)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2175:2251  abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector) */\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2117:2251  success &&... */\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2109:2252  return (success &&... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1786:2259  function isValidERC1271SignatureNow(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Bytecode.sol\":1261:1380  function codeSize(address _addr) internal view returns (uint256 size) {... */\n    tag_110:\n        /* \"Bytecode.sol\":1317:1329  uint256 size */\n      0x00\n        /* \"Bytecode.sol\":1368:1373  _addr */\n      dup2\n        /* \"Bytecode.sol\":1356:1374  extcodesize(_addr) */\n      extcodesize\n        /* \"Bytecode.sol\":1348:1374  size := extcodesize(_addr) */\n      swap1\n      pop\n        /* \"Bytecode.sol\":1261:1380  function codeSize(address _addr) internal view returns (uint256 size) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5009:6465  function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5097:5104  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5106:5118  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6021:6087  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6016:6017  s */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6008:6018  uint256(s) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6008:6087  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6004:6165  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6119:6120  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6123:6153  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6103:6154  return (address(0), RecoverError.InvalidSignatureS) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_136)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6004:6165  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6259:6273  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6276:6300  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6286:6290  hash */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6292:6293  v */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6295:6296  r */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6298:6299  s */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6276:6300  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_138\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6259:6300  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6332:6333  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6314:6334  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6314:6320  signer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6314:6334  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6310:6411  if (signer == address(0)) {... */\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6366:6367  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6370:6399  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6350:6400  return (address(0), RecoverError.InvalidSignature) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_136)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6310:6411  if (signer == address(0)) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6429:6435  signer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6437:6457  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6421:6458  return (signer, RecoverError.NoError) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5009:6465  function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {... */\n    tag_136:\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_143:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_144:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_145:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_146:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_147:\n        /* \"#utility.yul\":561:584   */\n      tag_207\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_146\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_208:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_148:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_210\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_147\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_14:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_213\n      tag_144\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":833:952   */\n    tag_212:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_214\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_148\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_149:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_150:\n        /* \"#utility.yul\":1268:1289   */\n      tag_217\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_149\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_17:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_219\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_150\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_151:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_152:\n        /* \"#utility.yul\":1674:1698   */\n      tag_222\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_151\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_223:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_153:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_225\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_152\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:1991   */\n    tag_154:\n        /* \"#utility.yul\":1983:1984   */\n      0x00\n        /* \"#utility.yul\":1980:1981   */\n      dup1\n        /* \"#utility.yul\":1973:1985   */\n      revert\n        /* \"#utility.yul\":1997:2114   */\n    tag_155:\n        /* \"#utility.yul\":2106:2107   */\n      0x00\n        /* \"#utility.yul\":2103:2104   */\n      dup1\n        /* \"#utility.yul\":2096:2108   */\n      revert\n        /* \"#utility.yul\":2120:2222   */\n    tag_156:\n        /* \"#utility.yul\":2161:2167   */\n      0x00\n        /* \"#utility.yul\":2212:2214   */\n      0x1f\n        /* \"#utility.yul\":2208:2215   */\n      not\n        /* \"#utility.yul\":2203:2205   */\n      0x1f\n        /* \"#utility.yul\":2196:2201   */\n      dup4\n        /* \"#utility.yul\":2192:2206   */\n      add\n        /* \"#utility.yul\":2188:2216   */\n      and\n        /* \"#utility.yul\":2178:2216   */\n      swap1\n      pop\n        /* \"#utility.yul\":2120:2222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2228:2408   */\n    tag_157:\n        /* \"#utility.yul\":2276:2353   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2273:2274   */\n      0x00\n        /* \"#utility.yul\":2266:2354   */\n      mstore\n        /* \"#utility.yul\":2373:2377   */\n      0x41\n        /* \"#utility.yul\":2370:2371   */\n      0x04\n        /* \"#utility.yul\":2363:2378   */\n      mstore\n        /* \"#utility.yul\":2397:2401   */\n      0x24\n        /* \"#utility.yul\":2394:2395   */\n      0x00\n        /* \"#utility.yul\":2387:2402   */\n      revert\n        /* \"#utility.yul\":2414:2695   */\n    tag_158:\n        /* \"#utility.yul\":2497:2524   */\n      tag_231\n        /* \"#utility.yul\":2519:2523   */\n      dup3\n        /* \"#utility.yul\":2497:2524   */\n      tag_156\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":2489:2495   */\n      dup2\n        /* \"#utility.yul\":2485:2525   */\n      add\n        /* \"#utility.yul\":2627:2633   */\n      dup2\n        /* \"#utility.yul\":2615:2625   */\n      dup2\n        /* \"#utility.yul\":2612:2634   */\n      lt\n        /* \"#utility.yul\":2591:2609   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2579:2589   */\n      dup3\n        /* \"#utility.yul\":2576:2610   */\n      gt\n        /* \"#utility.yul\":2573:2635   */\n      or\n        /* \"#utility.yul\":2570:2658   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":2638:2656   */\n      tag_233\n      tag_157\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":2570:2658   */\n    tag_232:\n        /* \"#utility.yul\":2678:2688   */\n      dup1\n        /* \"#utility.yul\":2674:2676   */\n      0x40\n        /* \"#utility.yul\":2667:2689   */\n      mstore\n        /* \"#utility.yul\":2457:2695   */\n      pop\n        /* \"#utility.yul\":2414:2695   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2701:2830   */\n    tag_159:\n        /* \"#utility.yul\":2735:2741   */\n      0x00\n        /* \"#utility.yul\":2762:2782   */\n      tag_235\n      tag_143\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2752:2782   */\n      swap1\n      pop\n        /* \"#utility.yul\":2791:2824   */\n      tag_236\n        /* \"#utility.yul\":2819:2823   */\n      dup3\n        /* \"#utility.yul\":2811:2817   */\n      dup3\n        /* \"#utility.yul\":2791:2824   */\n      tag_158\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2701:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:3143   */\n    tag_160:\n        /* \"#utility.yul\":2897:2901   */\n      0x00\n        /* \"#utility.yul\":2987:3005   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2976:3006   */\n      gt\n        /* \"#utility.yul\":2973:3029   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":3009:3027   */\n      tag_239\n      tag_157\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2973:3029   */\n    tag_238:\n        /* \"#utility.yul\":3047:3076   */\n      tag_240\n        /* \"#utility.yul\":3069:3075   */\n      dup3\n        /* \"#utility.yul\":3047:3076   */\n      tag_156\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":3039:3076   */\n      swap1\n      pop\n        /* \"#utility.yul\":3131:3135   */\n      0x20\n        /* \"#utility.yul\":3125:3129   */\n      dup2\n        /* \"#utility.yul\":3121:3136   */\n      add\n        /* \"#utility.yul\":3113:3136   */\n      swap1\n      pop\n        /* \"#utility.yul\":2836:3143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3149:3295   */\n    tag_161:\n        /* \"#utility.yul\":3246:3252   */\n      dup3\n        /* \"#utility.yul\":3241:3244   */\n      dup2\n        /* \"#utility.yul\":3236:3239   */\n      dup4\n        /* \"#utility.yul\":3223:3253   */\n      calldatacopy\n        /* \"#utility.yul\":3287:3288   */\n      0x00\n        /* \"#utility.yul\":3278:3284   */\n      dup4\n        /* \"#utility.yul\":3273:3276   */\n      dup4\n        /* \"#utility.yul\":3269:3285   */\n      add\n        /* \"#utility.yul\":3262:3289   */\n      mstore\n        /* \"#utility.yul\":3149:3295   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3301:3724   */\n    tag_162:\n        /* \"#utility.yul\":3378:3383   */\n      0x00\n        /* \"#utility.yul\":3403:3468   */\n      tag_243\n        /* \"#utility.yul\":3419:3467   */\n      tag_244\n        /* \"#utility.yul\":3460:3466   */\n      dup5\n        /* \"#utility.yul\":3419:3467   */\n      tag_160\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":3403:3468   */\n      tag_159\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3394:3468   */\n      swap1\n      pop\n        /* \"#utility.yul\":3491:3497   */\n      dup3\n        /* \"#utility.yul\":3484:3489   */\n      dup2\n        /* \"#utility.yul\":3477:3498   */\n      mstore\n        /* \"#utility.yul\":3529:3533   */\n      0x20\n        /* \"#utility.yul\":3522:3527   */\n      dup2\n        /* \"#utility.yul\":3518:3534   */\n      add\n        /* \"#utility.yul\":3567:3570   */\n      dup5\n        /* \"#utility.yul\":3558:3564   */\n      dup5\n        /* \"#utility.yul\":3553:3556   */\n      dup5\n        /* \"#utility.yul\":3549:3565   */\n      add\n        /* \"#utility.yul\":3546:3571   */\n      gt\n        /* \"#utility.yul\":3543:3655   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":3574:3653   */\n      tag_246\n      tag_155\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3543:3655   */\n    tag_245:\n        /* \"#utility.yul\":3664:3718   */\n      tag_247\n        /* \"#utility.yul\":3711:3717   */\n      dup5\n        /* \"#utility.yul\":3706:3709   */\n      dup3\n        /* \"#utility.yul\":3701:3704   */\n      dup6\n        /* \"#utility.yul\":3664:3718   */\n      tag_161\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3384:3724   */\n      pop\n        /* \"#utility.yul\":3301:3724   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3743:4081   */\n    tag_163:\n        /* \"#utility.yul\":3798:3803   */\n      0x00\n        /* \"#utility.yul\":3847:3850   */\n      dup3\n        /* \"#utility.yul\":3840:3844   */\n      0x1f\n        /* \"#utility.yul\":3832:3838   */\n      dup4\n        /* \"#utility.yul\":3828:3845   */\n      add\n        /* \"#utility.yul\":3824:3851   */\n      slt\n        /* \"#utility.yul\":3814:3936   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":3855:3934   */\n      tag_250\n      tag_154\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3814:3936   */\n    tag_249:\n        /* \"#utility.yul\":3972:3978   */\n      dup2\n        /* \"#utility.yul\":3959:3979   */\n      calldataload\n        /* \"#utility.yul\":3997:4075   */\n      tag_251\n        /* \"#utility.yul\":4071:4074   */\n      dup5\n        /* \"#utility.yul\":4063:4069   */\n      dup3\n        /* \"#utility.yul\":4056:4060   */\n      0x20\n        /* \"#utility.yul\":4048:4054   */\n      dup7\n        /* \"#utility.yul\":4044:4061   */\n      add\n        /* \"#utility.yul\":3997:4075   */\n      tag_162\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3988:4075   */\n      swap2\n      pop\n        /* \"#utility.yul\":3804:4081   */\n      pop\n        /* \"#utility.yul\":3743:4081   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4087:4739   */\n    tag_21:\n        /* \"#utility.yul\":4164:4170   */\n      0x00\n        /* \"#utility.yul\":4172:4178   */\n      dup1\n        /* \"#utility.yul\":4221:4223   */\n      0x40\n        /* \"#utility.yul\":4209:4218   */\n      dup4\n        /* \"#utility.yul\":4200:4207   */\n      dup6\n        /* \"#utility.yul\":4196:4219   */\n      sub\n        /* \"#utility.yul\":4192:4224   */\n      slt\n        /* \"#utility.yul\":4189:4308   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":4227:4306   */\n      tag_254\n      tag_144\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4189:4308   */\n    tag_253:\n        /* \"#utility.yul\":4347:4348   */\n      0x00\n        /* \"#utility.yul\":4372:4425   */\n      tag_255\n        /* \"#utility.yul\":4417:4424   */\n      dup6\n        /* \"#utility.yul\":4408:4414   */\n      dup3\n        /* \"#utility.yul\":4397:4406   */\n      dup7\n        /* \"#utility.yul\":4393:4415   */\n      add\n        /* \"#utility.yul\":4372:4425   */\n      tag_153\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":4362:4425   */\n      swap3\n      pop\n        /* \"#utility.yul\":4318:4435   */\n      pop\n        /* \"#utility.yul\":4502:4504   */\n      0x20\n        /* \"#utility.yul\":4491:4500   */\n      dup4\n        /* \"#utility.yul\":4487:4505   */\n      add\n        /* \"#utility.yul\":4474:4506   */\n      calldataload\n        /* \"#utility.yul\":4533:4551   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4525:4531   */\n      dup2\n        /* \"#utility.yul\":4522:4552   */\n      gt\n        /* \"#utility.yul\":4519:4636   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":4555:4634   */\n      tag_257\n      tag_145\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":4519:4636   */\n    tag_256:\n        /* \"#utility.yul\":4660:4722   */\n      tag_258\n        /* \"#utility.yul\":4714:4721   */\n      dup6\n        /* \"#utility.yul\":4705:4711   */\n      dup3\n        /* \"#utility.yul\":4694:4703   */\n      dup7\n        /* \"#utility.yul\":4690:4712   */\n      add\n        /* \"#utility.yul\":4660:4722   */\n      tag_163\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4650:4722   */\n      swap2\n      pop\n        /* \"#utility.yul\":4445:4732   */\n      pop\n        /* \"#utility.yul\":4087:4739   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4745:4860   */\n    tag_164:\n        /* \"#utility.yul\":4830:4853   */\n      tag_260\n        /* \"#utility.yul\":4847:4852   */\n      dup2\n        /* \"#utility.yul\":4830:4853   */\n      tag_146\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":4825:4828   */\n      dup3\n        /* \"#utility.yul\":4818:4854   */\n      mstore\n        /* \"#utility.yul\":4745:4860   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4866:5084   */\n    tag_24:\n        /* \"#utility.yul\":4957:4961   */\n      0x00\n        /* \"#utility.yul\":4995:4997   */\n      0x20\n        /* \"#utility.yul\":4984:4993   */\n      dup3\n        /* \"#utility.yul\":4980:4998   */\n      add\n        /* \"#utility.yul\":4972:4998   */\n      swap1\n      pop\n        /* \"#utility.yul\":5008:5077   */\n      tag_262\n        /* \"#utility.yul\":5074:5075   */\n      0x00\n        /* \"#utility.yul\":5063:5072   */\n      dup4\n        /* \"#utility.yul\":5059:5076   */\n      add\n        /* \"#utility.yul\":5050:5056   */\n      dup5\n        /* \"#utility.yul\":5008:5077   */\n      tag_164\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":4866:5084   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5090:5216   */\n    tag_165:\n        /* \"#utility.yul\":5127:5134   */\n      0x00\n        /* \"#utility.yul\":5167:5209   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5160:5165   */\n      dup3\n        /* \"#utility.yul\":5156:5210   */\n      and\n        /* \"#utility.yul\":5145:5210   */\n      swap1\n      pop\n        /* \"#utility.yul\":5090:5216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5222:5318   */\n    tag_166:\n        /* \"#utility.yul\":5259:5266   */\n      0x00\n        /* \"#utility.yul\":5288:5312   */\n      tag_265\n        /* \"#utility.yul\":5306:5311   */\n      dup3\n        /* \"#utility.yul\":5288:5312   */\n      tag_165\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":5277:5312   */\n      swap1\n      pop\n        /* \"#utility.yul\":5222:5318   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5324:5446   */\n    tag_167:\n        /* \"#utility.yul\":5397:5421   */\n      tag_267\n        /* \"#utility.yul\":5415:5420   */\n      dup2\n        /* \"#utility.yul\":5397:5421   */\n      tag_166\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":5390:5395   */\n      dup2\n        /* \"#utility.yul\":5387:5422   */\n      eq\n        /* \"#utility.yul\":5377:5440   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":5436:5437   */\n      0x00\n        /* \"#utility.yul\":5433:5434   */\n      dup1\n        /* \"#utility.yul\":5426:5438   */\n      revert\n        /* \"#utility.yul\":5377:5440   */\n    tag_268:\n        /* \"#utility.yul\":5324:5446   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5452:5591   */\n    tag_168:\n        /* \"#utility.yul\":5498:5503   */\n      0x00\n        /* \"#utility.yul\":5536:5542   */\n      dup2\n        /* \"#utility.yul\":5523:5543   */\n      calldataload\n        /* \"#utility.yul\":5514:5543   */\n      swap1\n      pop\n        /* \"#utility.yul\":5552:5585   */\n      tag_270\n        /* \"#utility.yul\":5579:5584   */\n      dup2\n        /* \"#utility.yul\":5552:5585   */\n      tag_167\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5452:5591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5597:5674   */\n    tag_169:\n        /* \"#utility.yul\":5634:5641   */\n      0x00\n        /* \"#utility.yul\":5663:5668   */\n      dup2\n        /* \"#utility.yul\":5652:5668   */\n      swap1\n      pop\n        /* \"#utility.yul\":5597:5674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5680:5802   */\n    tag_170:\n        /* \"#utility.yul\":5753:5777   */\n      tag_273\n        /* \"#utility.yul\":5771:5776   */\n      dup2\n        /* \"#utility.yul\":5753:5777   */\n      tag_169\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":5746:5751   */\n      dup2\n        /* \"#utility.yul\":5743:5778   */\n      eq\n        /* \"#utility.yul\":5733:5796   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":5792:5793   */\n      0x00\n        /* \"#utility.yul\":5789:5790   */\n      dup1\n        /* \"#utility.yul\":5782:5794   */\n      revert\n        /* \"#utility.yul\":5733:5796   */\n    tag_274:\n        /* \"#utility.yul\":5680:5802   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5808:5947   */\n    tag_171:\n        /* \"#utility.yul\":5854:5859   */\n      0x00\n        /* \"#utility.yul\":5892:5898   */\n      dup2\n        /* \"#utility.yul\":5879:5899   */\n      calldataload\n        /* \"#utility.yul\":5870:5899   */\n      swap1\n      pop\n        /* \"#utility.yul\":5908:5941   */\n      tag_276\n        /* \"#utility.yul\":5935:5940   */\n      dup2\n        /* \"#utility.yul\":5908:5941   */\n      tag_170\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":5808:5947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5953:6572   */\n    tag_28:\n        /* \"#utility.yul\":6030:6036   */\n      0x00\n        /* \"#utility.yul\":6038:6044   */\n      dup1\n        /* \"#utility.yul\":6046:6052   */\n      0x00\n        /* \"#utility.yul\":6095:6097   */\n      0x60\n        /* \"#utility.yul\":6083:6092   */\n      dup5\n        /* \"#utility.yul\":6074:6081   */\n      dup7\n        /* \"#utility.yul\":6070:6093   */\n      sub\n        /* \"#utility.yul\":6066:6098   */\n      slt\n        /* \"#utility.yul\":6063:6182   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":6101:6180   */\n      tag_279\n      tag_144\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":6063:6182   */\n    tag_278:\n        /* \"#utility.yul\":6221:6222   */\n      0x00\n        /* \"#utility.yul\":6246:6299   */\n      tag_280\n        /* \"#utility.yul\":6291:6298   */\n      dup7\n        /* \"#utility.yul\":6282:6288   */\n      dup3\n        /* \"#utility.yul\":6271:6280   */\n      dup8\n        /* \"#utility.yul\":6267:6289   */\n      add\n        /* \"#utility.yul\":6246:6299   */\n      tag_168\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":6236:6299   */\n      swap4\n      pop\n        /* \"#utility.yul\":6192:6309   */\n      pop\n        /* \"#utility.yul\":6348:6350   */\n      0x20\n        /* \"#utility.yul\":6374:6427   */\n      tag_281\n        /* \"#utility.yul\":6419:6426   */\n      dup7\n        /* \"#utility.yul\":6410:6416   */\n      dup3\n        /* \"#utility.yul\":6399:6408   */\n      dup8\n        /* \"#utility.yul\":6395:6417   */\n      add\n        /* \"#utility.yul\":6374:6427   */\n      tag_168\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":6364:6427   */\n      swap3\n      pop\n        /* \"#utility.yul\":6319:6437   */\n      pop\n        /* \"#utility.yul\":6476:6478   */\n      0x40\n        /* \"#utility.yul\":6502:6555   */\n      tag_282\n        /* \"#utility.yul\":6547:6554   */\n      dup7\n        /* \"#utility.yul\":6538:6544   */\n      dup3\n        /* \"#utility.yul\":6527:6536   */\n      dup8\n        /* \"#utility.yul\":6523:6545   */\n      add\n        /* \"#utility.yul\":6502:6555   */\n      tag_171\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6492:6555   */\n      swap2\n      pop\n        /* \"#utility.yul\":6447:6565   */\n      pop\n        /* \"#utility.yul\":5953:6572   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6578:6696   */\n    tag_172:\n        /* \"#utility.yul\":6665:6689   */\n      tag_284\n        /* \"#utility.yul\":6683:6688   */\n      dup2\n        /* \"#utility.yul\":6665:6689   */\n      tag_166\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":6660:6663   */\n      dup3\n        /* \"#utility.yul\":6653:6690   */\n      mstore\n        /* \"#utility.yul\":6578:6696   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6702:6924   */\n    tag_35:\n        /* \"#utility.yul\":6795:6799   */\n      0x00\n        /* \"#utility.yul\":6833:6835   */\n      0x20\n        /* \"#utility.yul\":6822:6831   */\n      dup3\n        /* \"#utility.yul\":6818:6836   */\n      add\n        /* \"#utility.yul\":6810:6836   */\n      swap1\n      pop\n        /* \"#utility.yul\":6846:6917   */\n      tag_286\n        /* \"#utility.yul\":6914:6915   */\n      0x00\n        /* \"#utility.yul\":6903:6912   */\n      dup4\n        /* \"#utility.yul\":6899:6916   */\n      add\n        /* \"#utility.yul\":6890:6896   */\n      dup5\n        /* \"#utility.yul\":6846:6917   */\n      tag_172\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":6702:6924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6930:7047   */\n    tag_173:\n        /* \"#utility.yul\":7039:7040   */\n      0x00\n        /* \"#utility.yul\":7036:7037   */\n      dup1\n        /* \"#utility.yul\":7029:7041   */\n      revert\n        /* \"#utility.yul\":7053:7170   */\n    tag_174:\n        /* \"#utility.yul\":7162:7163   */\n      0x00\n        /* \"#utility.yul\":7159:7160   */\n      dup1\n        /* \"#utility.yul\":7152:7164   */\n      revert\n        /* \"#utility.yul\":7189:7741   */\n    tag_175:\n        /* \"#utility.yul\":7246:7254   */\n      0x00\n        /* \"#utility.yul\":7256:7262   */\n      dup1\n        /* \"#utility.yul\":7306:7309   */\n      dup4\n        /* \"#utility.yul\":7299:7303   */\n      0x1f\n        /* \"#utility.yul\":7291:7297   */\n      dup5\n        /* \"#utility.yul\":7287:7304   */\n      add\n        /* \"#utility.yul\":7283:7310   */\n      slt\n        /* \"#utility.yul\":7273:7395   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":7314:7393   */\n      tag_291\n      tag_154\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7273:7395   */\n    tag_290:\n        /* \"#utility.yul\":7427:7433   */\n      dup3\n        /* \"#utility.yul\":7414:7434   */\n      calldataload\n        /* \"#utility.yul\":7404:7434   */\n      swap1\n      pop\n        /* \"#utility.yul\":7457:7475   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7449:7455   */\n      dup2\n        /* \"#utility.yul\":7446:7476   */\n      gt\n        /* \"#utility.yul\":7443:7560   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":7479:7558   */\n      tag_293\n      tag_173\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7443:7560   */\n    tag_292:\n        /* \"#utility.yul\":7593:7597   */\n      0x20\n        /* \"#utility.yul\":7585:7591   */\n      dup4\n        /* \"#utility.yul\":7581:7598   */\n      add\n        /* \"#utility.yul\":7569:7598   */\n      swap2\n      pop\n        /* \"#utility.yul\":7647:7650   */\n      dup4\n        /* \"#utility.yul\":7639:7643   */\n      0x01\n        /* \"#utility.yul\":7631:7637   */\n      dup3\n        /* \"#utility.yul\":7627:7644   */\n      mul\n        /* \"#utility.yul\":7617:7625   */\n      dup4\n        /* \"#utility.yul\":7613:7645   */\n      add\n        /* \"#utility.yul\":7610:7651   */\n      gt\n        /* \"#utility.yul\":7607:7735   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":7654:7733   */\n      tag_295\n      tag_174\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7607:7735   */\n    tag_294:\n        /* \"#utility.yul\":7189:7741   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7747:8564   */\n    tag_38:\n        /* \"#utility.yul\":7835:7841   */\n      0x00\n        /* \"#utility.yul\":7843:7849   */\n      dup1\n        /* \"#utility.yul\":7851:7857   */\n      0x00\n        /* \"#utility.yul\":7859:7865   */\n      dup1\n        /* \"#utility.yul\":7908:7910   */\n      0x60\n        /* \"#utility.yul\":7896:7905   */\n      dup6\n        /* \"#utility.yul\":7887:7894   */\n      dup8\n        /* \"#utility.yul\":7883:7906   */\n      sub\n        /* \"#utility.yul\":7879:7911   */\n      slt\n        /* \"#utility.yul\":7876:7995   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":7914:7993   */\n      tag_298\n      tag_144\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":7876:7995   */\n    tag_297:\n        /* \"#utility.yul\":8034:8035   */\n      0x00\n        /* \"#utility.yul\":8059:8112   */\n      tag_299\n        /* \"#utility.yul\":8104:8111   */\n      dup8\n        /* \"#utility.yul\":8095:8101   */\n      dup3\n        /* \"#utility.yul\":8084:8093   */\n      dup9\n        /* \"#utility.yul\":8080:8102   */\n      add\n        /* \"#utility.yul\":8059:8112   */\n      tag_168\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":8049:8112   */\n      swap5\n      pop\n        /* \"#utility.yul\":8005:8122   */\n      pop\n        /* \"#utility.yul\":8161:8163   */\n      0x20\n        /* \"#utility.yul\":8187:8240   */\n      tag_300\n        /* \"#utility.yul\":8232:8239   */\n      dup8\n        /* \"#utility.yul\":8223:8229   */\n      dup3\n        /* \"#utility.yul\":8212:8221   */\n      dup9\n        /* \"#utility.yul\":8208:8230   */\n      add\n        /* \"#utility.yul\":8187:8240   */\n      tag_171\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":8177:8240   */\n      swap4\n      pop\n        /* \"#utility.yul\":8132:8250   */\n      pop\n        /* \"#utility.yul\":8317:8319   */\n      0x40\n        /* \"#utility.yul\":8306:8315   */\n      dup6\n        /* \"#utility.yul\":8302:8320   */\n      add\n        /* \"#utility.yul\":8289:8321   */\n      calldataload\n        /* \"#utility.yul\":8348:8366   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8340:8346   */\n      dup2\n        /* \"#utility.yul\":8337:8367   */\n      gt\n        /* \"#utility.yul\":8334:8451   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":8370:8449   */\n      tag_302\n      tag_145\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":8334:8451   */\n    tag_301:\n        /* \"#utility.yul\":8483:8547   */\n      tag_303\n        /* \"#utility.yul\":8539:8546   */\n      dup8\n        /* \"#utility.yul\":8530:8536   */\n      dup3\n        /* \"#utility.yul\":8519:8528   */\n      dup9\n        /* \"#utility.yul\":8515:8537   */\n      add\n        /* \"#utility.yul\":8483:8547   */\n      tag_175\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":8465:8547   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":8260:8557   */\n      pop\n        /* \"#utility.yul\":7747:8564   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8570:8668   */\n    tag_176:\n        /* \"#utility.yul\":8621:8627   */\n      0x00\n        /* \"#utility.yul\":8655:8660   */\n      dup2\n        /* \"#utility.yul\":8649:8661   */\n      mload\n        /* \"#utility.yul\":8639:8661   */\n      swap1\n      pop\n        /* \"#utility.yul\":8570:8668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8674:8842   */\n    tag_177:\n        /* \"#utility.yul\":8757:8768   */\n      0x00\n        /* \"#utility.yul\":8791:8797   */\n      dup3\n        /* \"#utility.yul\":8786:8789   */\n      dup3\n        /* \"#utility.yul\":8779:8798   */\n      mstore\n        /* \"#utility.yul\":8831:8835   */\n      0x20\n        /* \"#utility.yul\":8826:8829   */\n      dup3\n        /* \"#utility.yul\":8822:8836   */\n      add\n        /* \"#utility.yul\":8807:8836   */\n      swap1\n      pop\n        /* \"#utility.yul\":8674:8842   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8848:9094   */\n    tag_178:\n        /* \"#utility.yul\":8929:8930   */\n      0x00\n        /* \"#utility.yul\":8939:9052   */\n    tag_307:\n        /* \"#utility.yul\":8953:8959   */\n      dup4\n        /* \"#utility.yul\":8950:8951   */\n      dup2\n        /* \"#utility.yul\":8947:8960   */\n      lt\n        /* \"#utility.yul\":8939:9052   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":9038:9039   */\n      dup1\n        /* \"#utility.yul\":9033:9036   */\n      dup3\n        /* \"#utility.yul\":9029:9040   */\n      add\n        /* \"#utility.yul\":9023:9041   */\n      mload\n        /* \"#utility.yul\":9019:9020   */\n      dup2\n        /* \"#utility.yul\":9014:9017   */\n      dup5\n        /* \"#utility.yul\":9010:9021   */\n      add\n        /* \"#utility.yul\":9003:9042   */\n      mstore\n        /* \"#utility.yul\":8975:8977   */\n      0x20\n        /* \"#utility.yul\":8972:8973   */\n      dup2\n        /* \"#utility.yul\":8968:8978   */\n      add\n        /* \"#utility.yul\":8963:8978   */\n      swap1\n      pop\n        /* \"#utility.yul\":8939:9052   */\n      jump(tag_307)\n    tag_309:\n        /* \"#utility.yul\":9086:9087   */\n      0x00\n        /* \"#utility.yul\":9077:9083   */\n      dup5\n        /* \"#utility.yul\":9072:9075   */\n      dup5\n        /* \"#utility.yul\":9068:9084   */\n      add\n        /* \"#utility.yul\":9061:9088   */\n      mstore\n        /* \"#utility.yul\":8910:9094   */\n      pop\n        /* \"#utility.yul\":8848:9094   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9100:9473   */\n    tag_179:\n        /* \"#utility.yul\":9186:9189   */\n      0x00\n        /* \"#utility.yul\":9214:9252   */\n      tag_311\n        /* \"#utility.yul\":9246:9251   */\n      dup3\n        /* \"#utility.yul\":9214:9252   */\n      tag_176\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":9268:9338   */\n      tag_312\n        /* \"#utility.yul\":9331:9337   */\n      dup2\n        /* \"#utility.yul\":9326:9329   */\n      dup6\n        /* \"#utility.yul\":9268:9338   */\n      tag_177\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":9261:9338   */\n      swap4\n      pop\n        /* \"#utility.yul\":9347:9412   */\n      tag_313\n        /* \"#utility.yul\":9405:9411   */\n      dup2\n        /* \"#utility.yul\":9400:9403   */\n      dup6\n        /* \"#utility.yul\":9393:9397   */\n      0x20\n        /* \"#utility.yul\":9386:9391   */\n      dup7\n        /* \"#utility.yul\":9382:9398   */\n      add\n        /* \"#utility.yul\":9347:9412   */\n      tag_178\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":9437:9466   */\n      tag_314\n        /* \"#utility.yul\":9459:9465   */\n      dup2\n        /* \"#utility.yul\":9437:9466   */\n      tag_156\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":9432:9435   */\n      dup5\n        /* \"#utility.yul\":9428:9467   */\n      add\n        /* \"#utility.yul\":9421:9467   */\n      swap2\n      pop\n        /* \"#utility.yul\":9190:9473   */\n      pop\n        /* \"#utility.yul\":9100:9473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9479:9788   */\n    tag_41:\n        /* \"#utility.yul\":9590:9594   */\n      0x00\n        /* \"#utility.yul\":9628:9630   */\n      0x20\n        /* \"#utility.yul\":9617:9626   */\n      dup3\n        /* \"#utility.yul\":9613:9631   */\n      add\n        /* \"#utility.yul\":9605:9631   */\n      swap1\n      pop\n        /* \"#utility.yul\":9677:9686   */\n      dup2\n        /* \"#utility.yul\":9671:9675   */\n      dup2\n        /* \"#utility.yul\":9667:9687   */\n      sub\n        /* \"#utility.yul\":9663:9664   */\n      0x00\n        /* \"#utility.yul\":9652:9661   */\n      dup4\n        /* \"#utility.yul\":9648:9665   */\n      add\n        /* \"#utility.yul\":9641:9688   */\n      mstore\n        /* \"#utility.yul\":9705:9781   */\n      tag_316\n        /* \"#utility.yul\":9776:9780   */\n      dup2\n        /* \"#utility.yul\":9767:9773   */\n      dup5\n        /* \"#utility.yul\":9705:9781   */\n      tag_179\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":9697:9781   */\n      swap1\n      pop\n        /* \"#utility.yul\":9479:9788   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9794:9912   */\n    tag_180:\n        /* \"#utility.yul\":9881:9905   */\n      tag_318\n        /* \"#utility.yul\":9899:9904   */\n      dup2\n        /* \"#utility.yul\":9881:9905   */\n      tag_169\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":9876:9879   */\n      dup3\n        /* \"#utility.yul\":9869:9906   */\n      mstore\n        /* \"#utility.yul\":9794:9912   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9918:10360   */\n    tag_46:\n        /* \"#utility.yul\":10067:10071   */\n      0x00\n        /* \"#utility.yul\":10105:10107   */\n      0x60\n        /* \"#utility.yul\":10094:10103   */\n      dup3\n        /* \"#utility.yul\":10090:10108   */\n      add\n        /* \"#utility.yul\":10082:10108   */\n      swap1\n      pop\n        /* \"#utility.yul\":10118:10189   */\n      tag_320\n        /* \"#utility.yul\":10186:10187   */\n      0x00\n        /* \"#utility.yul\":10175:10184   */\n      dup4\n        /* \"#utility.yul\":10171:10188   */\n      add\n        /* \"#utility.yul\":10162:10168   */\n      dup7\n        /* \"#utility.yul\":10118:10189   */\n      tag_180\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":10199:10271   */\n      tag_321\n        /* \"#utility.yul\":10267:10269   */\n      0x20\n        /* \"#utility.yul\":10256:10265   */\n      dup4\n        /* \"#utility.yul\":10252:10270   */\n      add\n        /* \"#utility.yul\":10243:10249   */\n      dup6\n        /* \"#utility.yul\":10199:10271   */\n      tag_172\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":10281:10353   */\n      tag_322\n        /* \"#utility.yul\":10349:10351   */\n      0x40\n        /* \"#utility.yul\":10338:10347   */\n      dup4\n        /* \"#utility.yul\":10334:10352   */\n      add\n        /* \"#utility.yul\":10325:10331   */\n      dup5\n        /* \"#utility.yul\":10281:10353   */\n      tag_180\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":9918:10360   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10366:10535   */\n    tag_181:\n        /* \"#utility.yul\":10450:10461   */\n      0x00\n        /* \"#utility.yul\":10484:10490   */\n      dup3\n        /* \"#utility.yul\":10479:10482   */\n      dup3\n        /* \"#utility.yul\":10472:10491   */\n      mstore\n        /* \"#utility.yul\":10524:10528   */\n      0x20\n        /* \"#utility.yul\":10519:10522   */\n      dup3\n        /* \"#utility.yul\":10515:10529   */\n      add\n        /* \"#utility.yul\":10500:10529   */\n      swap1\n      pop\n        /* \"#utility.yul\":10366:10535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10541:10700   */\n    tag_182:\n        /* \"#utility.yul\":10681:10692   */\n      0x6e6f74206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10677:10678   */\n      0x00\n        /* \"#utility.yul\":10669:10675   */\n      dup3\n        /* \"#utility.yul\":10665:10679   */\n      add\n        /* \"#utility.yul\":10658:10693   */\n      mstore\n        /* \"#utility.yul\":10541:10700   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10706:11071   */\n    tag_183:\n        /* \"#utility.yul\":10848:10851   */\n      0x00\n        /* \"#utility.yul\":10869:10935   */\n      tag_326\n        /* \"#utility.yul\":10933:10934   */\n      0x09\n        /* \"#utility.yul\":10928:10931   */\n      dup4\n        /* \"#utility.yul\":10869:10935   */\n      tag_181\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":10862:10935   */\n      swap2\n      pop\n        /* \"#utility.yul\":10944:11037   */\n      tag_327\n        /* \"#utility.yul\":11033:11036   */\n      dup3\n        /* \"#utility.yul\":10944:11037   */\n      tag_182\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":11062:11064   */\n      0x20\n        /* \"#utility.yul\":11057:11060   */\n      dup3\n        /* \"#utility.yul\":11053:11065   */\n      add\n        /* \"#utility.yul\":11046:11065   */\n      swap1\n      pop\n        /* \"#utility.yul\":10706:11071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11077:11496   */\n    tag_58:\n        /* \"#utility.yul\":11243:11247   */\n      0x00\n        /* \"#utility.yul\":11281:11283   */\n      0x20\n        /* \"#utility.yul\":11270:11279   */\n      dup3\n        /* \"#utility.yul\":11266:11284   */\n      add\n        /* \"#utility.yul\":11258:11284   */\n      swap1\n      pop\n        /* \"#utility.yul\":11330:11339   */\n      dup2\n        /* \"#utility.yul\":11324:11328   */\n      dup2\n        /* \"#utility.yul\":11320:11340   */\n      sub\n        /* \"#utility.yul\":11316:11317   */\n      0x00\n        /* \"#utility.yul\":11305:11314   */\n      dup4\n        /* \"#utility.yul\":11301:11318   */\n      add\n        /* \"#utility.yul\":11294:11341   */\n      mstore\n        /* \"#utility.yul\":11358:11489   */\n      tag_329\n        /* \"#utility.yul\":11484:11488   */\n      dup2\n        /* \"#utility.yul\":11358:11489   */\n      tag_183\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":11350:11489   */\n      swap1\n      pop\n        /* \"#utility.yul\":11077:11496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11502:11834   */\n    tag_60:\n        /* \"#utility.yul\":11623:11627   */\n      0x00\n        /* \"#utility.yul\":11661:11663   */\n      0x40\n        /* \"#utility.yul\":11650:11659   */\n      dup3\n        /* \"#utility.yul\":11646:11664   */\n      add\n        /* \"#utility.yul\":11638:11664   */\n      swap1\n      pop\n        /* \"#utility.yul\":11674:11745   */\n      tag_331\n        /* \"#utility.yul\":11742:11743   */\n      0x00\n        /* \"#utility.yul\":11731:11740   */\n      dup4\n        /* \"#utility.yul\":11727:11744   */\n      add\n        /* \"#utility.yul\":11718:11724   */\n      dup6\n        /* \"#utility.yul\":11674:11745   */\n      tag_172\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":11755:11827   */\n      tag_332\n        /* \"#utility.yul\":11823:11825   */\n      0x20\n        /* \"#utility.yul\":11812:11821   */\n      dup4\n        /* \"#utility.yul\":11808:11826   */\n      add\n        /* \"#utility.yul\":11799:11805   */\n      dup5\n        /* \"#utility.yul\":11755:11827   */\n      tag_180\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":11502:11834   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11840:11956   */\n    tag_184:\n        /* \"#utility.yul\":11910:11931   */\n      tag_334\n        /* \"#utility.yul\":11925:11930   */\n      dup2\n        /* \"#utility.yul\":11910:11931   */\n      tag_149\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":11903:11908   */\n      dup2\n        /* \"#utility.yul\":11900:11932   */\n      eq\n        /* \"#utility.yul\":11890:11950   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":11946:11947   */\n      0x00\n        /* \"#utility.yul\":11943:11944   */\n      dup1\n        /* \"#utility.yul\":11936:11948   */\n      revert\n        /* \"#utility.yul\":11890:11950   */\n    tag_335:\n        /* \"#utility.yul\":11840:11956   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11962:12099   */\n    tag_185:\n        /* \"#utility.yul\":12016:12021   */\n      0x00\n        /* \"#utility.yul\":12047:12053   */\n      dup2\n        /* \"#utility.yul\":12041:12054   */\n      mload\n        /* \"#utility.yul\":12032:12054   */\n      swap1\n      pop\n        /* \"#utility.yul\":12063:12093   */\n      tag_337\n        /* \"#utility.yul\":12087:12092   */\n      dup2\n        /* \"#utility.yul\":12063:12093   */\n      tag_184\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":11962:12099   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12105:12450   */\n    tag_64:\n        /* \"#utility.yul\":12172:12178   */\n      0x00\n        /* \"#utility.yul\":12221:12223   */\n      0x20\n        /* \"#utility.yul\":12209:12218   */\n      dup3\n        /* \"#utility.yul\":12200:12207   */\n      dup5\n        /* \"#utility.yul\":12196:12219   */\n      sub\n        /* \"#utility.yul\":12192:12224   */\n      slt\n        /* \"#utility.yul\":12189:12308   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":12227:12306   */\n      tag_340\n      tag_144\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":12189:12308   */\n    tag_339:\n        /* \"#utility.yul\":12347:12348   */\n      0x00\n        /* \"#utility.yul\":12372:12433   */\n      tag_341\n        /* \"#utility.yul\":12425:12432   */\n      dup5\n        /* \"#utility.yul\":12416:12422   */\n      dup3\n        /* \"#utility.yul\":12405:12414   */\n      dup6\n        /* \"#utility.yul\":12401:12423   */\n      add\n        /* \"#utility.yul\":12372:12433   */\n      tag_185\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":12362:12433   */\n      swap2\n      pop\n        /* \"#utility.yul\":12318:12443   */\n      pop\n        /* \"#utility.yul\":12105:12450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12456:12599   */\n    tag_186:\n        /* \"#utility.yul\":12513:12518   */\n      0x00\n        /* \"#utility.yul\":12544:12550   */\n      dup2\n        /* \"#utility.yul\":12538:12551   */\n      mload\n        /* \"#utility.yul\":12529:12551   */\n      swap1\n      pop\n        /* \"#utility.yul\":12560:12593   */\n      tag_343\n        /* \"#utility.yul\":12587:12592   */\n      dup2\n        /* \"#utility.yul\":12560:12593   */\n      tag_170\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":12456:12599   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12605:12748   */\n    tag_187:\n        /* \"#utility.yul\":12662:12667   */\n      0x00\n        /* \"#utility.yul\":12693:12699   */\n      dup2\n        /* \"#utility.yul\":12687:12700   */\n      mload\n        /* \"#utility.yul\":12678:12700   */\n      swap1\n      pop\n        /* \"#utility.yul\":12709:12742   */\n      tag_345\n        /* \"#utility.yul\":12736:12741   */\n      dup2\n        /* \"#utility.yul\":12709:12742   */\n      tag_167\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":12605:12748   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12754:13417   */\n    tag_70:\n        /* \"#utility.yul\":12842:12848   */\n      0x00\n        /* \"#utility.yul\":12850:12856   */\n      dup1\n        /* \"#utility.yul\":12858:12864   */\n      0x00\n        /* \"#utility.yul\":12907:12909   */\n      0x60\n        /* \"#utility.yul\":12895:12904   */\n      dup5\n        /* \"#utility.yul\":12886:12893   */\n      dup7\n        /* \"#utility.yul\":12882:12905   */\n      sub\n        /* \"#utility.yul\":12878:12910   */\n      slt\n        /* \"#utility.yul\":12875:12994   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":12913:12992   */\n      tag_348\n      tag_144\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":12875:12994   */\n    tag_347:\n        /* \"#utility.yul\":13033:13034   */\n      0x00\n        /* \"#utility.yul\":13058:13122   */\n      tag_349\n        /* \"#utility.yul\":13114:13121   */\n      dup7\n        /* \"#utility.yul\":13105:13111   */\n      dup3\n        /* \"#utility.yul\":13094:13103   */\n      dup8\n        /* \"#utility.yul\":13090:13112   */\n      add\n        /* \"#utility.yul\":13058:13122   */\n      tag_186\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":13048:13122   */\n      swap4\n      pop\n        /* \"#utility.yul\":13004:13132   */\n      pop\n        /* \"#utility.yul\":13171:13173   */\n      0x20\n        /* \"#utility.yul\":13197:13261   */\n      tag_350\n        /* \"#utility.yul\":13253:13260   */\n      dup7\n        /* \"#utility.yul\":13244:13250   */\n      dup3\n        /* \"#utility.yul\":13233:13242   */\n      dup8\n        /* \"#utility.yul\":13229:13251   */\n      add\n        /* \"#utility.yul\":13197:13261   */\n      tag_187\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":13187:13261   */\n      swap3\n      pop\n        /* \"#utility.yul\":13142:13271   */\n      pop\n        /* \"#utility.yul\":13310:13312   */\n      0x40\n        /* \"#utility.yul\":13336:13400   */\n      tag_351\n        /* \"#utility.yul\":13392:13399   */\n      dup7\n        /* \"#utility.yul\":13383:13389   */\n      dup3\n        /* \"#utility.yul\":13372:13381   */\n      dup8\n        /* \"#utility.yul\":13368:13390   */\n      add\n        /* \"#utility.yul\":13336:13400   */\n      tag_186\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":13326:13400   */\n      swap2\n      pop\n        /* \"#utility.yul\":13281:13410   */\n      pop\n        /* \"#utility.yul\":12754:13417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":13423:13645   */\n    tag_73:\n        /* \"#utility.yul\":13516:13520   */\n      0x00\n        /* \"#utility.yul\":13554:13556   */\n      0x20\n        /* \"#utility.yul\":13543:13552   */\n      dup3\n        /* \"#utility.yul\":13539:13557   */\n      add\n        /* \"#utility.yul\":13531:13557   */\n      swap1\n      pop\n        /* \"#utility.yul\":13567:13638   */\n      tag_353\n        /* \"#utility.yul\":13635:13636   */\n      0x00\n        /* \"#utility.yul\":13624:13633   */\n      dup4\n        /* \"#utility.yul\":13620:13637   */\n      add\n        /* \"#utility.yul\":13611:13617   */\n      dup5\n        /* \"#utility.yul\":13567:13638   */\n      tag_180\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":13423:13645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13651:14002   */\n    tag_77:\n        /* \"#utility.yul\":13721:13727   */\n      0x00\n        /* \"#utility.yul\":13770:13772   */\n      0x20\n        /* \"#utility.yul\":13758:13767   */\n      dup3\n        /* \"#utility.yul\":13749:13756   */\n      dup5\n        /* \"#utility.yul\":13745:13768   */\n      sub\n        /* \"#utility.yul\":13741:13773   */\n      slt\n        /* \"#utility.yul\":13738:13857   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":13776:13855   */\n      tag_356\n      tag_144\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":13738:13857   */\n    tag_355:\n        /* \"#utility.yul\":13896:13897   */\n      0x00\n        /* \"#utility.yul\":13921:13985   */\n      tag_357\n        /* \"#utility.yul\":13977:13984   */\n      dup5\n        /* \"#utility.yul\":13968:13974   */\n      dup3\n        /* \"#utility.yul\":13957:13966   */\n      dup6\n        /* \"#utility.yul\":13953:13975   */\n      add\n        /* \"#utility.yul\":13921:13985   */\n      tag_187\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":13911:13985   */\n      swap2\n      pop\n        /* \"#utility.yul\":13867:13995   */\n      pop\n        /* \"#utility.yul\":13651:14002   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14008:14173   */\n    tag_188:\n        /* \"#utility.yul\":14148:14165   */\n      0x4e6f7420746f6b656e206f776e65720000000000000000000000000000000000\n        /* \"#utility.yul\":14144:14145   */\n      0x00\n        /* \"#utility.yul\":14136:14142   */\n      dup3\n        /* \"#utility.yul\":14132:14146   */\n      add\n        /* \"#utility.yul\":14125:14166   */\n      mstore\n        /* \"#utility.yul\":14008:14173   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14179:14545   */\n    tag_189:\n        /* \"#utility.yul\":14321:14324   */\n      0x00\n        /* \"#utility.yul\":14342:14409   */\n      tag_360\n        /* \"#utility.yul\":14406:14408   */\n      0x0f\n        /* \"#utility.yul\":14401:14404   */\n      dup4\n        /* \"#utility.yul\":14342:14409   */\n      tag_181\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":14335:14409   */\n      swap2\n      pop\n        /* \"#utility.yul\":14418:14511   */\n      tag_361\n        /* \"#utility.yul\":14507:14510   */\n      dup3\n        /* \"#utility.yul\":14418:14511   */\n      tag_188\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":14536:14538   */\n      0x20\n        /* \"#utility.yul\":14531:14534   */\n      dup3\n        /* \"#utility.yul\":14527:14539   */\n      add\n        /* \"#utility.yul\":14520:14539   */\n      swap1\n      pop\n        /* \"#utility.yul\":14179:14545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14551:14970   */\n    tag_82:\n        /* \"#utility.yul\":14717:14721   */\n      0x00\n        /* \"#utility.yul\":14755:14757   */\n      0x20\n        /* \"#utility.yul\":14744:14753   */\n      dup3\n        /* \"#utility.yul\":14740:14758   */\n      add\n        /* \"#utility.yul\":14732:14758   */\n      swap1\n      pop\n        /* \"#utility.yul\":14804:14813   */\n      dup2\n        /* \"#utility.yul\":14798:14802   */\n      dup2\n        /* \"#utility.yul\":14794:14814   */\n      sub\n        /* \"#utility.yul\":14790:14791   */\n      0x00\n        /* \"#utility.yul\":14779:14788   */\n      dup4\n        /* \"#utility.yul\":14775:14792   */\n      add\n        /* \"#utility.yul\":14768:14815   */\n      mstore\n        /* \"#utility.yul\":14832:14963   */\n      tag_363\n        /* \"#utility.yul\":14958:14962   */\n      dup2\n        /* \"#utility.yul\":14832:14963   */\n      tag_189\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":14824:14963   */\n      swap1\n      pop\n        /* \"#utility.yul\":14551:14970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14976:15123   */\n    tag_190:\n        /* \"#utility.yul\":15077:15088   */\n      0x00\n        /* \"#utility.yul\":15114:15117   */\n      dup2\n        /* \"#utility.yul\":15099:15117   */\n      swap1\n      pop\n        /* \"#utility.yul\":14976:15123   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15151:15478   */\n    tag_191:\n        /* \"#utility.yul\":15265:15268   */\n      0x00\n        /* \"#utility.yul\":15286:15374   */\n      tag_366\n        /* \"#utility.yul\":15367:15373   */\n      dup4\n        /* \"#utility.yul\":15362:15365   */\n      dup6\n        /* \"#utility.yul\":15286:15374   */\n      tag_190\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":15279:15374   */\n      swap4\n      pop\n        /* \"#utility.yul\":15384:15440   */\n      tag_367\n        /* \"#utility.yul\":15433:15439   */\n      dup4\n        /* \"#utility.yul\":15428:15431   */\n      dup6\n        /* \"#utility.yul\":15421:15426   */\n      dup5\n        /* \"#utility.yul\":15384:15440   */\n      tag_161\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":15465:15471   */\n      dup3\n        /* \"#utility.yul\":15460:15463   */\n      dup5\n        /* \"#utility.yul\":15456:15472   */\n      add\n        /* \"#utility.yul\":15449:15472   */\n      swap1\n      pop\n        /* \"#utility.yul\":15151:15478   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15484:15775   */\n    tag_84:\n        /* \"#utility.yul\":15624:15627   */\n      0x00\n        /* \"#utility.yul\":15646:15749   */\n      tag_369\n        /* \"#utility.yul\":15745:15748   */\n      dup3\n        /* \"#utility.yul\":15736:15742   */\n      dup5\n        /* \"#utility.yul\":15728:15734   */\n      dup7\n        /* \"#utility.yul\":15646:15749   */\n      tag_191\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":15639:15749   */\n      swap2\n      pop\n        /* \"#utility.yul\":15766:15769   */\n      dup2\n        /* \"#utility.yul\":15759:15769   */\n      swap1\n      pop\n        /* \"#utility.yul\":15484:15775   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15781:15961   */\n    tag_192:\n        /* \"#utility.yul\":15829:15906   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15826:15827   */\n      0x00\n        /* \"#utility.yul\":15819:15907   */\n      mstore\n        /* \"#utility.yul\":15926:15930   */\n      0x11\n        /* \"#utility.yul\":15923:15924   */\n      0x04\n        /* \"#utility.yul\":15916:15931   */\n      mstore\n        /* \"#utility.yul\":15950:15954   */\n      0x24\n        /* \"#utility.yul\":15947:15948   */\n      0x00\n        /* \"#utility.yul\":15940:15955   */\n      revert\n        /* \"#utility.yul\":15967:16161   */\n    tag_92:\n        /* \"#utility.yul\":16007:16011   */\n      0x00\n        /* \"#utility.yul\":16027:16047   */\n      tag_372\n        /* \"#utility.yul\":16045:16046   */\n      dup3\n        /* \"#utility.yul\":16027:16047   */\n      tag_169\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":16022:16047   */\n      swap2\n      pop\n        /* \"#utility.yul\":16061:16081   */\n      tag_373\n        /* \"#utility.yul\":16079:16080   */\n      dup4\n        /* \"#utility.yul\":16061:16081   */\n      tag_169\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":16056:16081   */\n      swap3\n      pop\n        /* \"#utility.yul\":16105:16106   */\n      dup3\n        /* \"#utility.yul\":16102:16103   */\n      dup3\n        /* \"#utility.yul\":16098:16107   */\n      sub\n        /* \"#utility.yul\":16090:16107   */\n      swap1\n      pop\n        /* \"#utility.yul\":16129:16130   */\n      dup2\n        /* \"#utility.yul\":16123:16127   */\n      dup2\n        /* \"#utility.yul\":16120:16131   */\n      gt\n        /* \"#utility.yul\":16117:16154   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":16134:16152   */\n      tag_375\n      tag_192\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":16117:16154   */\n    tag_374:\n        /* \"#utility.yul\":15967:16161   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16167:16271   */\n    tag_193:\n        /* \"#utility.yul\":16212:16219   */\n      0x00\n        /* \"#utility.yul\":16241:16265   */\n      tag_377\n        /* \"#utility.yul\":16259:16264   */\n      dup3\n        /* \"#utility.yul\":16241:16265   */\n      tag_165\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":16230:16265   */\n      swap1\n      pop\n        /* \"#utility.yul\":16167:16271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16277:16415   */\n    tag_194:\n        /* \"#utility.yul\":16358:16390   */\n      tag_379\n        /* \"#utility.yul\":16384:16389   */\n      dup2\n        /* \"#utility.yul\":16358:16390   */\n      tag_193\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":16351:16356   */\n      dup2\n        /* \"#utility.yul\":16348:16391   */\n      eq\n        /* \"#utility.yul\":16338:16409   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":16405:16406   */\n      0x00\n        /* \"#utility.yul\":16402:16403   */\n      dup1\n        /* \"#utility.yul\":16395:16407   */\n      revert\n        /* \"#utility.yul\":16338:16409   */\n    tag_380:\n        /* \"#utility.yul\":16277:16415   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16421:16580   */\n    tag_195:\n        /* \"#utility.yul\":16486:16491   */\n      0x00\n        /* \"#utility.yul\":16517:16523   */\n      dup2\n        /* \"#utility.yul\":16511:16524   */\n      mload\n        /* \"#utility.yul\":16502:16524   */\n      swap1\n      pop\n        /* \"#utility.yul\":16533:16574   */\n      tag_382\n        /* \"#utility.yul\":16568:16573   */\n      dup2\n        /* \"#utility.yul\":16533:16574   */\n      tag_194\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":16421:16580   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16586:17265   */\n    tag_95:\n        /* \"#utility.yul\":16682:16688   */\n      0x00\n        /* \"#utility.yul\":16690:16696   */\n      dup1\n        /* \"#utility.yul\":16698:16704   */\n      0x00\n        /* \"#utility.yul\":16747:16749   */\n      0x60\n        /* \"#utility.yul\":16735:16744   */\n      dup5\n        /* \"#utility.yul\":16726:16733   */\n      dup7\n        /* \"#utility.yul\":16722:16745   */\n      sub\n        /* \"#utility.yul\":16718:16750   */\n      slt\n        /* \"#utility.yul\":16715:16834   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":16753:16832   */\n      tag_385\n      tag_144\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":16715:16834   */\n    tag_384:\n        /* \"#utility.yul\":16873:16874   */\n      0x00\n        /* \"#utility.yul\":16898:16962   */\n      tag_386\n        /* \"#utility.yul\":16954:16961   */\n      dup7\n        /* \"#utility.yul\":16945:16951   */\n      dup3\n        /* \"#utility.yul\":16934:16943   */\n      dup8\n        /* \"#utility.yul\":16930:16952   */\n      add\n        /* \"#utility.yul\":16898:16962   */\n      tag_186\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":16888:16962   */\n      swap4\n      pop\n        /* \"#utility.yul\":16844:16972   */\n      pop\n        /* \"#utility.yul\":17011:17013   */\n      0x20\n        /* \"#utility.yul\":17037:17109   */\n      tag_387\n        /* \"#utility.yul\":17101:17108   */\n      dup7\n        /* \"#utility.yul\":17092:17098   */\n      dup3\n        /* \"#utility.yul\":17081:17090   */\n      dup8\n        /* \"#utility.yul\":17077:17099   */\n      add\n        /* \"#utility.yul\":17037:17109   */\n      tag_195\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":17027:17109   */\n      swap3\n      pop\n        /* \"#utility.yul\":16982:17119   */\n      pop\n        /* \"#utility.yul\":17158:17160   */\n      0x40\n        /* \"#utility.yul\":17184:17248   */\n      tag_388\n        /* \"#utility.yul\":17240:17247   */\n      dup7\n        /* \"#utility.yul\":17231:17237   */\n      dup3\n        /* \"#utility.yul\":17220:17229   */\n      dup8\n        /* \"#utility.yul\":17216:17238   */\n      add\n        /* \"#utility.yul\":17184:17248   */\n      tag_186\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":17174:17248   */\n      swap2\n      pop\n        /* \"#utility.yul\":17129:17258   */\n      pop\n        /* \"#utility.yul\":16586:17265   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":17271:17451   */\n    tag_101:\n        /* \"#utility.yul\":17319:17396   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17316:17317   */\n      0x00\n        /* \"#utility.yul\":17309:17397   */\n      mstore\n        /* \"#utility.yul\":17416:17420   */\n      0x21\n        /* \"#utility.yul\":17413:17414   */\n      0x04\n        /* \"#utility.yul\":17406:17421   */\n      mstore\n        /* \"#utility.yul\":17440:17444   */\n      0x24\n        /* \"#utility.yul\":17437:17438   */\n      0x00\n        /* \"#utility.yul\":17430:17445   */\n      revert\n        /* \"#utility.yul\":17457:17899   */\n    tag_115:\n        /* \"#utility.yul\":17606:17610   */\n      0x00\n        /* \"#utility.yul\":17644:17646   */\n      0x60\n        /* \"#utility.yul\":17633:17642   */\n      dup3\n        /* \"#utility.yul\":17629:17647   */\n      add\n        /* \"#utility.yul\":17621:17647   */\n      swap1\n      pop\n        /* \"#utility.yul\":17657:17728   */\n      tag_391\n        /* \"#utility.yul\":17725:17726   */\n      0x00\n        /* \"#utility.yul\":17714:17723   */\n      dup4\n        /* \"#utility.yul\":17710:17727   */\n      add\n        /* \"#utility.yul\":17701:17707   */\n      dup7\n        /* \"#utility.yul\":17657:17728   */\n      tag_180\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":17738:17810   */\n      tag_392\n        /* \"#utility.yul\":17806:17808   */\n      0x20\n        /* \"#utility.yul\":17795:17804   */\n      dup4\n        /* \"#utility.yul\":17791:17809   */\n      add\n        /* \"#utility.yul\":17782:17788   */\n      dup6\n        /* \"#utility.yul\":17738:17810   */\n      tag_180\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":17820:17892   */\n      tag_393\n        /* \"#utility.yul\":17888:17890   */\n      0x40\n        /* \"#utility.yul\":17877:17886   */\n      dup4\n        /* \"#utility.yul\":17873:17891   */\n      add\n        /* \"#utility.yul\":17864:17870   */\n      dup5\n        /* \"#utility.yul\":17820:17892   */\n      tag_180\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":17457:17899   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17905:18023   */\n    tag_196:\n        /* \"#utility.yul\":17992:18016   */\n      tag_395\n        /* \"#utility.yul\":18010:18015   */\n      dup2\n        /* \"#utility.yul\":17992:18016   */\n      tag_151\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":17987:17990   */\n      dup3\n        /* \"#utility.yul\":17980:18017   */\n      mstore\n        /* \"#utility.yul\":17905:18023   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18029:18448   */\n    tag_125:\n        /* \"#utility.yul\":18168:18172   */\n      0x00\n        /* \"#utility.yul\":18206:18208   */\n      0x40\n        /* \"#utility.yul\":18195:18204   */\n      dup3\n        /* \"#utility.yul\":18191:18209   */\n      add\n        /* \"#utility.yul\":18183:18209   */\n      swap1\n      pop\n        /* \"#utility.yul\":18219:18290   */\n      tag_397\n        /* \"#utility.yul\":18287:18288   */\n      0x00\n        /* \"#utility.yul\":18276:18285   */\n      dup4\n        /* \"#utility.yul\":18272:18289   */\n      add\n        /* \"#utility.yul\":18263:18269   */\n      dup6\n        /* \"#utility.yul\":18219:18290   */\n      tag_196\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":18337:18346   */\n      dup2\n        /* \"#utility.yul\":18331:18335   */\n      dup2\n        /* \"#utility.yul\":18327:18347   */\n      sub\n        /* \"#utility.yul\":18322:18324   */\n      0x20\n        /* \"#utility.yul\":18311:18320   */\n      dup4\n        /* \"#utility.yul\":18307:18325   */\n      add\n        /* \"#utility.yul\":18300:18348   */\n      mstore\n        /* \"#utility.yul\":18365:18441   */\n      tag_398\n        /* \"#utility.yul\":18436:18440   */\n      dup2\n        /* \"#utility.yul\":18427:18433   */\n      dup5\n        /* \"#utility.yul\":18365:18441   */\n      tag_179\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":18357:18441   */\n      swap1\n      pop\n        /* \"#utility.yul\":18029:18448   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18454:18840   */\n    tag_197:\n        /* \"#utility.yul\":18558:18561   */\n      0x00\n        /* \"#utility.yul\":18586:18624   */\n      tag_400\n        /* \"#utility.yul\":18618:18623   */\n      dup3\n        /* \"#utility.yul\":18586:18624   */\n      tag_176\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":18640:18728   */\n      tag_401\n        /* \"#utility.yul\":18721:18727   */\n      dup2\n        /* \"#utility.yul\":18716:18719   */\n      dup6\n        /* \"#utility.yul\":18640:18728   */\n      tag_190\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":18633:18728   */\n      swap4\n      pop\n        /* \"#utility.yul\":18737:18802   */\n      tag_402\n        /* \"#utility.yul\":18795:18801   */\n      dup2\n        /* \"#utility.yul\":18790:18793   */\n      dup6\n        /* \"#utility.yul\":18783:18787   */\n      0x20\n        /* \"#utility.yul\":18776:18781   */\n      dup7\n        /* \"#utility.yul\":18772:18788   */\n      add\n        /* \"#utility.yul\":18737:18802   */\n      tag_178\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":18827:18833   */\n      dup1\n        /* \"#utility.yul\":18822:18825   */\n      dup5\n        /* \"#utility.yul\":18818:18834   */\n      add\n        /* \"#utility.yul\":18811:18834   */\n      swap2\n      pop\n        /* \"#utility.yul\":18562:18840   */\n      pop\n        /* \"#utility.yul\":18454:18840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18846:19117   */\n    tag_127:\n        /* \"#utility.yul\":18976:18979   */\n      0x00\n        /* \"#utility.yul\":18998:19091   */\n      tag_404\n        /* \"#utility.yul\":19087:19090   */\n      dup3\n        /* \"#utility.yul\":19078:19084   */\n      dup5\n        /* \"#utility.yul\":18998:19091   */\n      tag_197\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":18991:19091   */\n      swap2\n      pop\n        /* \"#utility.yul\":19108:19111   */\n      dup2\n        /* \"#utility.yul\":19101:19111   */\n      swap1\n      pop\n        /* \"#utility.yul\":18846:19117   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19123:19266   */\n    tag_198:\n        /* \"#utility.yul\":19180:19185   */\n      0x00\n        /* \"#utility.yul\":19211:19217   */\n      dup2\n        /* \"#utility.yul\":19205:19218   */\n      mload\n        /* \"#utility.yul\":19196:19218   */\n      swap1\n      pop\n        /* \"#utility.yul\":19227:19260   */\n      tag_406\n        /* \"#utility.yul\":19254:19259   */\n      dup2\n        /* \"#utility.yul\":19227:19260   */\n      tag_152\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":19123:19266   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19272:19623   */\n    tag_134:\n        /* \"#utility.yul\":19342:19348   */\n      0x00\n        /* \"#utility.yul\":19391:19393   */\n      0x20\n        /* \"#utility.yul\":19379:19388   */\n      dup3\n        /* \"#utility.yul\":19370:19377   */\n      dup5\n        /* \"#utility.yul\":19366:19389   */\n      sub\n        /* \"#utility.yul\":19362:19394   */\n      slt\n        /* \"#utility.yul\":19359:19478   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":19397:19476   */\n      tag_409\n      tag_144\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":19359:19478   */\n    tag_408:\n        /* \"#utility.yul\":19517:19518   */\n      0x00\n        /* \"#utility.yul\":19542:19606   */\n      tag_410\n        /* \"#utility.yul\":19598:19605   */\n      dup5\n        /* \"#utility.yul\":19589:19595   */\n      dup3\n        /* \"#utility.yul\":19578:19587   */\n      dup6\n        /* \"#utility.yul\":19574:19596   */\n      add\n        /* \"#utility.yul\":19542:19606   */\n      tag_198\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":19532:19606   */\n      swap2\n      pop\n        /* \"#utility.yul\":19488:19616   */\n      pop\n        /* \"#utility.yul\":19272:19623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19629:19715   */\n    tag_199:\n        /* \"#utility.yul\":19664:19671   */\n      0x00\n        /* \"#utility.yul\":19704:19708   */\n      0xff\n        /* \"#utility.yul\":19697:19702   */\n      dup3\n        /* \"#utility.yul\":19693:19709   */\n      and\n        /* \"#utility.yul\":19682:19709   */\n      swap1\n      pop\n        /* \"#utility.yul\":19629:19715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19721:19833   */\n    tag_200:\n        /* \"#utility.yul\":19804:19826   */\n      tag_413\n        /* \"#utility.yul\":19820:19825   */\n      dup2\n        /* \"#utility.yul\":19804:19826   */\n      tag_199\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":19799:19802   */\n      dup3\n        /* \"#utility.yul\":19792:19827   */\n      mstore\n        /* \"#utility.yul\":19721:19833   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19839:20384   */\n    tag_139:\n        /* \"#utility.yul\":20012:20016   */\n      0x00\n        /* \"#utility.yul\":20050:20053   */\n      0x80\n        /* \"#utility.yul\":20039:20048   */\n      dup3\n        /* \"#utility.yul\":20035:20054   */\n      add\n        /* \"#utility.yul\":20027:20054   */\n      swap1\n      pop\n        /* \"#utility.yul\":20064:20135   */\n      tag_415\n        /* \"#utility.yul\":20132:20133   */\n      0x00\n        /* \"#utility.yul\":20121:20130   */\n      dup4\n        /* \"#utility.yul\":20117:20134   */\n      add\n        /* \"#utility.yul\":20108:20114   */\n      dup8\n        /* \"#utility.yul\":20064:20135   */\n      tag_196\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":20145:20213   */\n      tag_416\n        /* \"#utility.yul\":20209:20211   */\n      0x20\n        /* \"#utility.yul\":20198:20207   */\n      dup4\n        /* \"#utility.yul\":20194:20212   */\n      add\n        /* \"#utility.yul\":20185:20191   */\n      dup7\n        /* \"#utility.yul\":20145:20213   */\n      tag_200\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":20223:20295   */\n      tag_417\n        /* \"#utility.yul\":20291:20293   */\n      0x40\n        /* \"#utility.yul\":20280:20289   */\n      dup4\n        /* \"#utility.yul\":20276:20294   */\n      add\n        /* \"#utility.yul\":20267:20273   */\n      dup6\n        /* \"#utility.yul\":20223:20295   */\n      tag_196\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":20305:20377   */\n      tag_418\n        /* \"#utility.yul\":20373:20375   */\n      0x60\n        /* \"#utility.yul\":20362:20371   */\n      dup4\n        /* \"#utility.yul\":20358:20376   */\n      add\n        /* \"#utility.yul\":20349:20355   */\n      dup5\n        /* \"#utility.yul\":20305:20377   */\n      tag_196\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":19839:20384   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122029fd88f0b6740d8295138c5498f836e73e2dee0514633a9a2b29fe1122f050a464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506114f3806100206000396000f3fe6080604052600436106100595760003560e01c806301ffc9a7146100655780631626ba7e146100a25780637d6ad95d146100df5780638da5cb5b1461011c5780639e5d4c4914610147578063fc0c546a1461017757610060565b3661006057005b600080fd5b34801561007157600080fd5b5061008c60048036038101906100879190610a8f565b6101a4565b6040516100999190610ad7565b60405180910390f35b3480156100ae57600080fd5b506100c960048036038101906100c49190610c6e565b610276565b6040516100d69190610cd9565b60405180910390f35b3480156100eb57600080fd5b5061010660048036038101906101019190610d88565b6102af565b6040516101139190610ad7565b60405180910390f35b34801561012857600080fd5b506101316103c4565b60405161013e9190610dea565b60405180910390f35b610161600480360381019061015c9190610e65565b6104d5565b60405161016e9190610f58565b60405180910390f35b34801561018357600080fd5b5061018c6105d7565b60405161019b93929190610f89565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061026f57507feff4d378000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60008061028b6102846103c4565b858561062d565b905080156102a357631626ba7e60e01b9150506102a9565b60009150505b92915050565b60006102b96103c4565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d9061101d565b60405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86856040518363ffffffff1660e01b815260040161036392919061103d565b6020604051808303816000875af1158015610382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a69190611092565b9050806103b75760009150506103bd565b60019150505b9392505050565b6000806000803073ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610415573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043991906110e9565b92509250925046831461045257600093505050506104d2565b8173ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b815260040161048b919061113c565b602060405180830381865afa1580156104a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cc9190611157565b93505050505b90565b60606104df6103c4565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161461054c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610543906111d0565b60405180910390fd5b60008573ffffffffffffffffffffffffffffffffffffffff16858585604051610576929190611220565b60006040518083038185875af1925050503d80600081146105b3576040519150601f19603f3d011682016040523d82523d6000602084013e6105b8565b606091505b508093508192505050806105ce57815160208301fd5b50949350505050565b6000806000803073ffffffffffffffffffffffffffffffffffffffff163b905061060e306060836106089190611268565b836106bc565b80602001905181019061062191906112da565b93509350935050909192565b600080600061063c85856107a1565b91509150600060048111156106545761065361132d565b5b8160048111156106675761066661132d565b5b14801561069f57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806106b157506106b08686866107f2565b5b925050509392505050565b606060006106c985610936565b9050600081036106eb576040518060200160405280600081525091505061079a565b8084111561070b576040518060200160405280600081525091505061079a565b83831015610754578084846040517f2c4a89fa00000000000000000000000000000000000000000000000000000000815260040161074b9392919061135c565b60405180910390fd5b600084840390506000858303905060008282106107715782610773565b815b90506040519450601f19601f60208301011685016040528085528087602087018a3c505050505b9392505050565b60008060418351036107e25760008060006020860151925060408601519150606086015160001a90506107d687828585610941565b945094505050506107eb565b60006002915091505b9250929050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b86866040516024016108299291906113a2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516108939190611403565b600060405180830381855afa9150503d80600081146108ce576040519150601f19603f3d011682016040523d82523d6000602084013e6108d3565b606091505b50915091508180156108e757506020815110155b801561092b5750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681806020019051810190610929919061142f565b145b925050509392505050565b6000813b9050919050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c111561097c576000600391509150610a1a565b6000600187878787604051600081526020016040526040516109a19493929190611478565b6020604051602081039080840390855afa1580156109c3573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a1157600060019250925050610a1a565b80600092509250505b94509492505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a6c81610a37565b8114610a7757600080fd5b50565b600081359050610a8981610a63565b92915050565b600060208284031215610aa557610aa4610a2d565b5b6000610ab384828501610a7a565b91505092915050565b60008115159050919050565b610ad181610abc565b82525050565b6000602082019050610aec6000830184610ac8565b92915050565b6000819050919050565b610b0581610af2565b8114610b1057600080fd5b50565b600081359050610b2281610afc565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b7b82610b32565b810181811067ffffffffffffffff82111715610b9a57610b99610b43565b5b80604052505050565b6000610bad610a23565b9050610bb98282610b72565b919050565b600067ffffffffffffffff821115610bd957610bd8610b43565b5b610be282610b32565b9050602081019050919050565b82818337600083830152505050565b6000610c11610c0c84610bbe565b610ba3565b905082815260208101848484011115610c2d57610c2c610b2d565b5b610c38848285610bef565b509392505050565b600082601f830112610c5557610c54610b28565b5b8135610c65848260208601610bfe565b91505092915050565b60008060408385031215610c8557610c84610a2d565b5b6000610c9385828601610b13565b925050602083013567ffffffffffffffff811115610cb457610cb3610a32565b5b610cc085828601610c40565b9150509250929050565b610cd381610a37565b82525050565b6000602082019050610cee6000830184610cca565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d1f82610cf4565b9050919050565b610d2f81610d14565b8114610d3a57600080fd5b50565b600081359050610d4c81610d26565b92915050565b6000819050919050565b610d6581610d52565b8114610d7057600080fd5b50565b600081359050610d8281610d5c565b92915050565b600080600060608486031215610da157610da0610a2d565b5b6000610daf86828701610d3d565b9350506020610dc086828701610d3d565b9250506040610dd186828701610d73565b9150509250925092565b610de481610d14565b82525050565b6000602082019050610dff6000830184610ddb565b92915050565b600080fd5b600080fd5b60008083601f840112610e2557610e24610b28565b5b8235905067ffffffffffffffff811115610e4257610e41610e05565b5b602083019150836001820283011115610e5e57610e5d610e0a565b5b9250929050565b60008060008060608587031215610e7f57610e7e610a2d565b5b6000610e8d87828801610d3d565b9450506020610e9e87828801610d73565b935050604085013567ffffffffffffffff811115610ebf57610ebe610a32565b5b610ecb87828801610e0f565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f13578082015181840152602081019050610ef8565b60008484015250505050565b6000610f2a82610ed9565b610f348185610ee4565b9350610f44818560208601610ef5565b610f4d81610b32565b840191505092915050565b60006020820190508181036000830152610f728184610f1f565b905092915050565b610f8381610d52565b82525050565b6000606082019050610f9e6000830186610f7a565b610fab6020830185610ddb565b610fb86040830184610f7a565b949350505050565b600082825260208201905092915050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b6000611007600983610fc0565b915061101282610fd1565b602082019050919050565b6000602082019050818103600083015261103681610ffa565b9050919050565b60006040820190506110526000830185610ddb565b61105f6020830184610f7a565b9392505050565b61106f81610abc565b811461107a57600080fd5b50565b60008151905061108c81611066565b92915050565b6000602082840312156110a8576110a7610a2d565b5b60006110b68482850161107d565b91505092915050565b6000815190506110ce81610d5c565b92915050565b6000815190506110e381610d26565b92915050565b60008060006060848603121561110257611101610a2d565b5b6000611110868287016110bf565b9350506020611121868287016110d4565b9250506040611132868287016110bf565b9150509250925092565b60006020820190506111516000830184610f7a565b92915050565b60006020828403121561116d5761116c610a2d565b5b600061117b848285016110d4565b91505092915050565b7f4e6f7420746f6b656e206f776e65720000000000000000000000000000000000600082015250565b60006111ba600f83610fc0565b91506111c582611184565b602082019050919050565b600060208201905081810360008301526111e9816111ad565b9050919050565b600081905092915050565b600061120783856111f0565b9350611214838584610bef565b82840190509392505050565b600061122d8284866111fb565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061127382610d52565b915061127e83610d52565b925082820390508181111561129657611295611239565b5b92915050565b60006112a782610cf4565b9050919050565b6112b78161129c565b81146112c257600080fd5b50565b6000815190506112d4816112ae565b92915050565b6000806000606084860312156112f3576112f2610a2d565b5b6000611301868287016110bf565b9350506020611312868287016112c5565b9250506040611323868287016110bf565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006060820190506113716000830186610f7a565b61137e6020830185610f7a565b61138b6040830184610f7a565b949350505050565b61139c81610af2565b82525050565b60006040820190506113b76000830185611393565b81810360208301526113c98184610f1f565b90509392505050565b60006113dd82610ed9565b6113e781856111f0565b93506113f7818560208601610ef5565b80840191505092915050565b600061140f82846113d2565b915081905092915050565b60008151905061142981610afc565b92915050565b60006020828403121561144557611444610a2d565b5b60006114538482850161141a565b91505092915050565b600060ff82169050919050565b6114728161145c565b82525050565b600060808201905061148d6000830187611393565b61149a6020830186611469565b6114a76040830185611393565b6114b46060830184611393565b9594505050505056fea264697066735822122029fd88f0b6740d8295138c5498f836e73e2dee0514633a9a2b29fe1122f050a464736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x7D6AD95D EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x177 JUMPI PUSH2 0x60 JUMP JUMPDEST CALLDATASIZE PUSH2 0x60 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x87 SWAP2 SWAP1 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0xC6E JUMP JUMPDEST PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x26F JUMPI POP PUSH32 0xEFF4D37800000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x28B PUSH2 0x284 PUSH2 0x3C4 JUMP JUMPDEST DUP6 DUP6 PUSH2 0x62D JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH4 0x1626BA7E PUSH1 0xE0 SHL SWAP2 POP POP PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B9 PUSH2 0x3C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31D SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x363 SWAP3 SWAP2 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x382 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3B7 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x415 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP CHAINID DUP4 EQ PUSH2 0x452 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x4D2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x113C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CC SWAP2 SWAP1 PUSH2 0x1157 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4DF PUSH2 0x3C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x543 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x576 SWAP3 SWAP2 SWAP1 PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP1 PUSH2 0x5CE JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD REVERT JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SWAP1 POP PUSH2 0x60E ADDRESS PUSH1 0x60 DUP4 PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST DUP4 PUSH2 0x6BC JUMP JUMPDEST DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x12DA JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x63C DUP6 DUP6 PUSH2 0x7A1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x654 JUMPI PUSH2 0x653 PUSH2 0x132D JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x667 JUMPI PUSH2 0x666 PUSH2 0x132D JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x69F JUMPI POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x6B1 JUMPI POP PUSH2 0x6B0 DUP7 DUP7 DUP7 PUSH2 0x7F2 JUMP JUMPDEST JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x6C9 DUP6 PUSH2 0x936 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x6EB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP PUSH2 0x79A JUMP JUMPDEST DUP1 DUP5 GT ISZERO PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP PUSH2 0x79A JUMP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x754 JUMPI DUP1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x2C4A89FA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x135C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SUB SWAP1 POP PUSH1 0x0 DUP6 DUP4 SUB SWAP1 POP PUSH1 0x0 DUP3 DUP3 LT PUSH2 0x771 JUMPI DUP3 PUSH2 0x773 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD SWAP5 POP PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 DUP4 ADD ADD AND DUP6 ADD PUSH1 0x40 MSTORE DUP1 DUP6 MSTORE DUP1 DUP8 PUSH1 0x20 DUP8 ADD DUP11 EXTCODECOPY POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD SUB PUSH2 0x7E2 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x7D6 DUP8 DUP3 DUP6 DUP6 PUSH2 0x941 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1626BA7E PUSH1 0xE0 SHL DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x829 SWAP3 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x893 SWAP2 SWAP1 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x8E7 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x92B JUMPI POP PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x929 SWAP2 SWAP1 PUSH2 0x142F JUMP JUMPDEST EQ JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x97C JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x9A1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA11 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0xA1A JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA6C DUP2 PUSH2 0xA37 JUMP JUMPDEST DUP2 EQ PUSH2 0xA77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA89 DUP2 PUSH2 0xA63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA5 JUMPI PUSH2 0xAA4 PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAB3 DUP5 DUP3 DUP6 ADD PUSH2 0xA7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD1 DUP2 PUSH2 0xABC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAEC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0xAF2 JUMP JUMPDEST DUP2 EQ PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB22 DUP2 PUSH2 0xAFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB7B DUP3 PUSH2 0xB32 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0xB43 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAD PUSH2 0xA23 JUMP JUMPDEST SWAP1 POP PUSH2 0xBB9 DUP3 DUP3 PUSH2 0xB72 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xBD9 JUMPI PUSH2 0xBD8 PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH2 0xBE2 DUP3 PUSH2 0xB32 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC11 PUSH2 0xC0C DUP5 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xC2D JUMPI PUSH2 0xC2C PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH2 0xC38 DUP5 DUP3 DUP6 PUSH2 0xBEF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC55 JUMPI PUSH2 0xC54 PUSH2 0xB28 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC65 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC85 JUMPI PUSH2 0xC84 PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC93 DUP6 DUP3 DUP7 ADD PUSH2 0xB13 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCB4 JUMPI PUSH2 0xCB3 PUSH2 0xA32 JUMP JUMPDEST JUMPDEST PUSH2 0xCC0 DUP6 DUP3 DUP7 ADD PUSH2 0xC40 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0xA37 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1F DUP3 PUSH2 0xCF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD2F DUP2 PUSH2 0xD14 JUMP JUMPDEST DUP2 EQ PUSH2 0xD3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD4C DUP2 PUSH2 0xD26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD65 DUP2 PUSH2 0xD52 JUMP JUMPDEST DUP2 EQ PUSH2 0xD70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD82 DUP2 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDAF DUP7 DUP3 DUP8 ADD PUSH2 0xD3D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xDC0 DUP7 DUP3 DUP8 ADD PUSH2 0xD3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xDD1 DUP7 DUP3 DUP8 ADD PUSH2 0xD73 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xDE4 DUP2 PUSH2 0xD14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE25 JUMPI PUSH2 0xE24 PUSH2 0xB28 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE42 JUMPI PUSH2 0xE41 PUSH2 0xE05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE5E JUMPI PUSH2 0xE5D PUSH2 0xE0A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE7F JUMPI PUSH2 0xE7E PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE8D DUP8 DUP3 DUP9 ADD PUSH2 0xD3D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xE9E DUP8 DUP3 DUP9 ADD PUSH2 0xD73 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xA32 JUMP JUMPDEST JUMPDEST PUSH2 0xECB DUP8 DUP3 DUP9 ADD PUSH2 0xE0F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF13 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2A DUP3 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xF34 DUP2 DUP6 PUSH2 0xEE4 JUMP JUMPDEST SWAP4 POP PUSH2 0xF44 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0xF4D DUP2 PUSH2 0xB32 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF72 DUP2 DUP5 PUSH2 0xF1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF83 DUP2 PUSH2 0xD52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF9E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0xFAB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0xFB8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1007 PUSH1 0x9 DUP4 PUSH2 0xFC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1012 DUP3 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1036 DUP2 PUSH2 0xFFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1052 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x105F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x106F DUP2 PUSH2 0xABC JUMP JUMPDEST DUP2 EQ PUSH2 0x107A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x108C DUP2 PUSH2 0x1066 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10A8 JUMPI PUSH2 0x10A7 PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10B6 DUP5 DUP3 DUP6 ADD PUSH2 0x107D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10CE DUP2 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10E3 DUP2 PUSH2 0xD26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1102 JUMPI PUSH2 0x1101 PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1110 DUP7 DUP3 DUP8 ADD PUSH2 0x10BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1121 DUP7 DUP3 DUP8 ADD PUSH2 0x10D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1132 DUP7 DUP3 DUP8 ADD PUSH2 0x10BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1151 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x116D JUMPI PUSH2 0x116C PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x117B DUP5 DUP3 DUP6 ADD PUSH2 0x10D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746F6B656E206F776E65720000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BA PUSH1 0xF DUP4 PUSH2 0xFC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x11C5 DUP3 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11E9 DUP2 PUSH2 0x11AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1207 DUP4 DUP6 PUSH2 0x11F0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1214 DUP4 DUP6 DUP5 PUSH2 0xBEF JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x122D DUP3 DUP5 DUP7 PUSH2 0x11FB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1273 DUP3 PUSH2 0xD52 JUMP JUMPDEST SWAP2 POP PUSH2 0x127E DUP4 PUSH2 0xD52 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1296 JUMPI PUSH2 0x1295 PUSH2 0x1239 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A7 DUP3 PUSH2 0xCF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B7 DUP2 PUSH2 0x129C JUMP JUMPDEST DUP2 EQ PUSH2 0x12C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12D4 DUP2 PUSH2 0x12AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12F3 JUMPI PUSH2 0x12F2 PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1301 DUP7 DUP3 DUP8 ADD PUSH2 0x10BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1312 DUP7 DUP3 DUP8 ADD PUSH2 0x12C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1323 DUP7 DUP3 DUP8 ADD PUSH2 0x10BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1371 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x137E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x138B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x139C DUP2 PUSH2 0xAF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13B7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1393 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x13C9 DUP2 DUP5 PUSH2 0xF1F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13DD DUP3 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0x13E7 DUP2 DUP6 PUSH2 0x11F0 JUMP JUMPDEST SWAP4 POP PUSH2 0x13F7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEF5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140F DUP3 DUP5 PUSH2 0x13D2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1429 DUP2 PUSH2 0xAFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1445 JUMPI PUSH2 0x1444 PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1453 DUP5 DUP3 DUP6 ADD PUSH2 0x141A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1472 DUP2 PUSH2 0x145C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x148D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x149A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x14A7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x14B4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 REVERT DUP9 CREATE 0xB6 PUSH21 0xD8295138C5498F836E73E2DEE0514633A9A2B29FE GT 0x22 CREATE POP LOG4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "398:2171:10:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_2015": {
									"entryPoint": null,
									"id": 2015,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@codeAt_1995": {
									"entryPoint": 1724,
									"id": 1995,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@codeSize_1925": {
									"entryPoint": 2358,
									"id": 1925,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@executeCallTransferToken_2138": {
									"entryPoint": 687,
									"id": 2138,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@executeCall_2055": {
									"entryPoint": 1237,
									"id": 2055,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@isValidERC1271SignatureNow_900": {
									"entryPoint": 2034,
									"id": 900,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isValidSignatureNow_848": {
									"entryPoint": 1581,
									"id": 848,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isValidSignature_2223": {
									"entryPoint": 630,
									"id": 2223,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_2171": {
									"entryPoint": 964,
									"id": 2171,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@supportsInterface_2194": {
									"entryPoint": 420,
									"id": 2194,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token_2096": {
									"entryPoint": 1495,
									"id": 2096,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@tryRecover_536": {
									"entryPoint": 1953,
									"id": 536,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryRecover_704": {
									"entryPoint": 2369,
									"id": 704,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 3070,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 4308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 4805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 2835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 5146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 2682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 3599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 3136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 4439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 3685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 5167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_bytes_memory_ptr": {
									"entryPoint": 3182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory": {
									"entryPoint": 4826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory": {
									"entryPoint": 4329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 3274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 3871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4640,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4157,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5026,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 5240,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 3289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3977,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4956,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2595,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 3006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 3812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 4764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 3055,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3829,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4665,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2883,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 3589,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3594,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 2861,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2610,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2605,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9": {
									"entryPoint": 4484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e": {
									"entryPoint": 4049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 4782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 2659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20387:12",
										"nodeType": "YulBlock",
										"src": "0:20387:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1563:32:12",
													"nodeType": "YulBlock",
													"src": "1563:32:12",
													"statements": [
														{
															"nativeSrc": "1573:16:12",
															"nodeType": "YulAssignment",
															"src": "1573:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:12",
																"nodeType": "YulIdentifier",
																"src": "1584:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:12",
														"nodeType": "YulTypedName",
														"src": "1545:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:12",
														"nodeType": "YulTypedName",
														"src": "1555:7:12",
														"type": ""
													}
												],
												"src": "1518:77:12"
											},
											{
												"body": {
													"nativeSrc": "1644:79:12",
													"nodeType": "YulBlock",
													"src": "1644:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:12",
																"nodeType": "YulBlock",
																"src": "1701:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:12"
																			},
																			"nativeSrc": "1703:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:12"
																		},
																		"nativeSrc": "1703:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1674:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:12"
																				},
																				"nativeSrc": "1674:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:12"
																		},
																		"nativeSrc": "1664:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:12"
																},
																"nativeSrc": "1657:43:12",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:12"
															},
															"nativeSrc": "1654:63:12",
															"nodeType": "YulIf",
															"src": "1654:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1601:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:12",
														"nodeType": "YulTypedName",
														"src": "1637:5:12",
														"type": ""
													}
												],
												"src": "1601:122:12"
											},
											{
												"body": {
													"nativeSrc": "1781:87:12",
													"nodeType": "YulBlock",
													"src": "1781:87:12",
													"statements": [
														{
															"nativeSrc": "1791:29:12",
															"nodeType": "YulAssignment",
															"src": "1791:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:12"
																},
																"nativeSrc": "1800:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1829:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:12"
																},
																"nativeSrc": "1829:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:12"
															},
															"nativeSrc": "1829:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1729:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:12",
														"nodeType": "YulTypedName",
														"src": "1759:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:12",
														"nodeType": "YulTypedName",
														"src": "1767:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:12",
														"nodeType": "YulTypedName",
														"src": "1775:5:12",
														"type": ""
													}
												],
												"src": "1729:139:12"
											},
											{
												"body": {
													"nativeSrc": "1963:28:12",
													"nodeType": "YulBlock",
													"src": "1963:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1980:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1983:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1973:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1973:6:12"
																},
																"nativeSrc": "1973:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1973:12:12"
															},
															"nativeSrc": "1973:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1973:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1874:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1874:117:12"
											},
											{
												"body": {
													"nativeSrc": "2086:28:12",
													"nodeType": "YulBlock",
													"src": "2086:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2103:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2103:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2106:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2106:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2096:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2096:6:12"
																},
																"nativeSrc": "2096:12:12",
																"nodeType": "YulFunctionCall",
																"src": "2096:12:12"
															},
															"nativeSrc": "2096:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "2096:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "1997:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1997:117:12"
											},
											{
												"body": {
													"nativeSrc": "2168:54:12",
													"nodeType": "YulBlock",
													"src": "2168:54:12",
													"statements": [
														{
															"nativeSrc": "2178:38:12",
															"nodeType": "YulAssignment",
															"src": "2178:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2196:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2196:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2203:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2203:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2192:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2192:3:12"
																		},
																		"nativeSrc": "2192:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2192:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2212:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2212:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2208:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2208:3:12"
																		},
																		"nativeSrc": "2208:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2208:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2188:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2188:3:12"
																},
																"nativeSrc": "2188:28:12",
																"nodeType": "YulFunctionCall",
																"src": "2188:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2178:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2178:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2120:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2151:5:12",
														"nodeType": "YulTypedName",
														"src": "2151:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2161:6:12",
														"nodeType": "YulTypedName",
														"src": "2161:6:12",
														"type": ""
													}
												],
												"src": "2120:102:12"
											},
											{
												"body": {
													"nativeSrc": "2256:152:12",
													"nodeType": "YulBlock",
													"src": "2256:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2273:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2273:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2276:77:12",
																		"nodeType": "YulLiteral",
																		"src": "2276:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2266:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2266:6:12"
																},
																"nativeSrc": "2266:88:12",
																"nodeType": "YulFunctionCall",
																"src": "2266:88:12"
															},
															"nativeSrc": "2266:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "2266:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2370:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2370:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2373:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2373:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2363:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2363:6:12"
																},
																"nativeSrc": "2363:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2363:15:12"
															},
															"nativeSrc": "2363:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "2363:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2394:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2394:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2397:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2397:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2387:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2387:6:12"
																},
																"nativeSrc": "2387:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2387:15:12"
															},
															"nativeSrc": "2387:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "2387:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2228:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "2228:180:12"
											},
											{
												"body": {
													"nativeSrc": "2457:238:12",
													"nodeType": "YulBlock",
													"src": "2457:238:12",
													"statements": [
														{
															"nativeSrc": "2467:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2467:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2489:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2489:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "2519:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2519:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2497:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "2497:21:12"
																		},
																		"nativeSrc": "2497:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2497:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2485:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2485:3:12"
																},
																"nativeSrc": "2485:40:12",
																"nodeType": "YulFunctionCall",
																"src": "2485:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2471:10:12",
																	"nodeType": "YulTypedName",
																	"src": "2471:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2636:22:12",
																"nodeType": "YulBlock",
																"src": "2636:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2638:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2638:16:12"
																			},
																			"nativeSrc": "2638:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2638:18:12"
																		},
																		"nativeSrc": "2638:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2638:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2579:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "2579:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2591:18:12",
																				"nodeType": "YulLiteral",
																				"src": "2591:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2576:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2576:2:12"
																		},
																		"nativeSrc": "2576:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2576:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2615:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "2615:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2627:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2627:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2612:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2612:2:12"
																		},
																		"nativeSrc": "2612:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2612:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2573:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2573:2:12"
																},
																"nativeSrc": "2573:62:12",
																"nodeType": "YulFunctionCall",
																"src": "2573:62:12"
															},
															"nativeSrc": "2570:88:12",
															"nodeType": "YulIf",
															"src": "2570:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2674:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2674:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2678:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "2678:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2667:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2667:6:12"
																},
																"nativeSrc": "2667:22:12",
																"nodeType": "YulFunctionCall",
																"src": "2667:22:12"
															},
															"nativeSrc": "2667:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "2667:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "2414:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2443:6:12",
														"nodeType": "YulTypedName",
														"src": "2443:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "2451:4:12",
														"nodeType": "YulTypedName",
														"src": "2451:4:12",
														"type": ""
													}
												],
												"src": "2414:281:12"
											},
											{
												"body": {
													"nativeSrc": "2742:88:12",
													"nodeType": "YulBlock",
													"src": "2742:88:12",
													"statements": [
														{
															"nativeSrc": "2752:30:12",
															"nodeType": "YulAssignment",
															"src": "2752:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "2762:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2762:18:12"
																},
																"nativeSrc": "2762:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2762:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2752:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2752:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2811:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2811:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "2819:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2819:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "2791:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "2791:19:12"
																},
																"nativeSrc": "2791:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2791:33:12"
															},
															"nativeSrc": "2791:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2791:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2701:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2726:4:12",
														"nodeType": "YulTypedName",
														"src": "2726:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2735:6:12",
														"nodeType": "YulTypedName",
														"src": "2735:6:12",
														"type": ""
													}
												],
												"src": "2701:129:12"
											},
											{
												"body": {
													"nativeSrc": "2902:241:12",
													"nodeType": "YulBlock",
													"src": "2902:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3007:22:12",
																"nodeType": "YulBlock",
																"src": "3007:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3009:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "3009:16:12"
																			},
																			"nativeSrc": "3009:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3009:18:12"
																		},
																		"nativeSrc": "3009:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3009:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2979:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2979:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2987:18:12",
																		"nodeType": "YulLiteral",
																		"src": "2987:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2976:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2976:2:12"
																},
																"nativeSrc": "2976:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2976:30:12"
															},
															"nativeSrc": "2973:56:12",
															"nodeType": "YulIf",
															"src": "2973:56:12"
														},
														{
															"nativeSrc": "3039:37:12",
															"nodeType": "YulAssignment",
															"src": "3039:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3069:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3069:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "3047:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "3047:21:12"
																},
																"nativeSrc": "3047:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3047:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3039:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3039:4:12"
																}
															]
														},
														{
															"nativeSrc": "3113:23:12",
															"nodeType": "YulAssignment",
															"src": "3113:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "3125:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3125:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3131:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3131:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3121:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3121:3:12"
																},
																"nativeSrc": "3121:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3121:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3113:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3113:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "2836:307:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2886:6:12",
														"nodeType": "YulTypedName",
														"src": "2886:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2897:4:12",
														"nodeType": "YulTypedName",
														"src": "2897:4:12",
														"type": ""
													}
												],
												"src": "2836:307:12"
											},
											{
												"body": {
													"nativeSrc": "3213:82:12",
													"nodeType": "YulBlock",
													"src": "3213:82:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3236:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3236:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3241:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3241:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3246:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3246:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3223:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3223:12:12"
																},
																"nativeSrc": "3223:30:12",
																"nodeType": "YulFunctionCall",
																"src": "3223:30:12"
															},
															"nativeSrc": "3223:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "3223:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3273:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3273:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3278:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3278:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3269:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:12"
																		},
																		"nativeSrc": "3269:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3269:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3287:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3287:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3262:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3262:6:12"
																},
																"nativeSrc": "3262:27:12",
																"nodeType": "YulFunctionCall",
																"src": "3262:27:12"
															},
															"nativeSrc": "3262:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "3262:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "3149:146:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3195:3:12",
														"nodeType": "YulTypedName",
														"src": "3195:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3200:3:12",
														"nodeType": "YulTypedName",
														"src": "3200:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3205:6:12",
														"nodeType": "YulTypedName",
														"src": "3205:6:12",
														"type": ""
													}
												],
												"src": "3149:146:12"
											},
											{
												"body": {
													"nativeSrc": "3384:340:12",
													"nodeType": "YulBlock",
													"src": "3384:340:12",
													"statements": [
														{
															"nativeSrc": "3394:74:12",
															"nodeType": "YulAssignment",
															"src": "3394:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3460:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3460:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "3419:40:12",
																			"nodeType": "YulIdentifier",
																			"src": "3419:40:12"
																		},
																		"nativeSrc": "3419:48:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3419:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3403:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "3403:15:12"
																},
																"nativeSrc": "3403:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3403:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3394:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3394:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3484:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3484:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3491:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3491:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3477:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3477:6:12"
																},
																"nativeSrc": "3477:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3477:21:12"
															},
															"nativeSrc": "3477:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "3477:21:12"
														},
														{
															"nativeSrc": "3507:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3507:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3522:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3522:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3529:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3529:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3518:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3518:3:12"
																},
																"nativeSrc": "3518:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3518:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "3511:3:12",
																	"nodeType": "YulTypedName",
																	"src": "3511:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3572:83:12",
																"nodeType": "YulBlock",
																"src": "3572:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "3574:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3574:77:12"
																			},
																			"nativeSrc": "3574:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3574:79:12"
																		},
																		"nativeSrc": "3574:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3574:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "3553:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3553:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3558:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3558:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3549:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3549:3:12"
																		},
																		"nativeSrc": "3549:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3549:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3567:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3567:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3546:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3546:2:12"
																},
																"nativeSrc": "3546:25:12",
																"nodeType": "YulFunctionCall",
																"src": "3546:25:12"
															},
															"nativeSrc": "3543:112:12",
															"nodeType": "YulIf",
															"src": "3543:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3701:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3701:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "3706:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3706:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3711:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3711:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "3664:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "3664:36:12"
																},
																"nativeSrc": "3664:54:12",
																"nodeType": "YulFunctionCall",
																"src": "3664:54:12"
															},
															"nativeSrc": "3664:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "3664:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "3301:423:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3357:3:12",
														"nodeType": "YulTypedName",
														"src": "3357:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3362:6:12",
														"nodeType": "YulTypedName",
														"src": "3362:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3370:3:12",
														"nodeType": "YulTypedName",
														"src": "3370:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3378:5:12",
														"nodeType": "YulTypedName",
														"src": "3378:5:12",
														"type": ""
													}
												],
												"src": "3301:423:12"
											},
											{
												"body": {
													"nativeSrc": "3804:277:12",
													"nodeType": "YulBlock",
													"src": "3804:277:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3853:83:12",
																"nodeType": "YulBlock",
																"src": "3853:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3855:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3855:77:12"
																			},
																			"nativeSrc": "3855:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3855:79:12"
																		},
																		"nativeSrc": "3855:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3855:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3832:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3832:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3840:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3840:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3828:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3828:3:12"
																				},
																				"nativeSrc": "3828:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3828:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3847:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3847:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3824:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3824:3:12"
																		},
																		"nativeSrc": "3824:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3824:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3817:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3817:6:12"
																},
																"nativeSrc": "3817:35:12",
																"nodeType": "YulFunctionCall",
																"src": "3817:35:12"
															},
															"nativeSrc": "3814:122:12",
															"nodeType": "YulIf",
															"src": "3814:122:12"
														},
														{
															"nativeSrc": "3945:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3945:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3972:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3972:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3959:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3959:12:12"
																},
																"nativeSrc": "3959:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3959:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3949:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3949:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3988:87:12",
															"nodeType": "YulAssignment",
															"src": "3988:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4048:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4048:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4056:4:12",
																				"nodeType": "YulLiteral",
																				"src": "4056:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4044:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4044:3:12"
																		},
																		"nativeSrc": "4044:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4044:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4063:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4063:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4071:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4071:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "3997:46:12",
																	"nodeType": "YulIdentifier",
																	"src": "3997:46:12"
																},
																"nativeSrc": "3997:78:12",
																"nodeType": "YulFunctionCall",
																"src": "3997:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3988:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3988:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "3743:338:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3782:6:12",
														"nodeType": "YulTypedName",
														"src": "3782:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3790:3:12",
														"nodeType": "YulTypedName",
														"src": "3790:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3798:5:12",
														"nodeType": "YulTypedName",
														"src": "3798:5:12",
														"type": ""
													}
												],
												"src": "3743:338:12"
											},
											{
												"body": {
													"nativeSrc": "4179:560:12",
													"nodeType": "YulBlock",
													"src": "4179:560:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4225:83:12",
																"nodeType": "YulBlock",
																"src": "4225:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4227:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4227:77:12"
																			},
																			"nativeSrc": "4227:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4227:79:12"
																		},
																		"nativeSrc": "4227:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4227:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4200:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4200:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4209:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4209:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4196:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4196:3:12"
																		},
																		"nativeSrc": "4196:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4196:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4221:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4221:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4192:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4192:3:12"
																},
																"nativeSrc": "4192:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4192:32:12"
															},
															"nativeSrc": "4189:119:12",
															"nodeType": "YulIf",
															"src": "4189:119:12"
														},
														{
															"nativeSrc": "4318:117:12",
															"nodeType": "YulBlock",
															"src": "4318:117:12",
															"statements": [
																{
																	"nativeSrc": "4333:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4333:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4347:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4347:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4337:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4337:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4362:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4362:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4397:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4397:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4408:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4408:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4393:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4393:3:12"
																				},
																				"nativeSrc": "4393:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4393:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4417:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4417:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4372:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4372:20:12"
																		},
																		"nativeSrc": "4372:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4372:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4362:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4362:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4445:287:12",
															"nodeType": "YulBlock",
															"src": "4445:287:12",
															"statements": [
																{
																	"nativeSrc": "4460:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4460:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4491:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4491:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4502:2:12",
																						"nodeType": "YulLiteral",
																						"src": "4502:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4487:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4487:3:12"
																				},
																				"nativeSrc": "4487:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4487:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4474:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "4474:12:12"
																		},
																		"nativeSrc": "4474:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4474:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4464:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4464:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4553:83:12",
																		"nodeType": "YulBlock",
																		"src": "4553:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4555:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "4555:77:12"
																					},
																					"nativeSrc": "4555:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4555:79:12"
																				},
																				"nativeSrc": "4555:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "4555:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4525:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4525:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4533:18:12",
																				"nodeType": "YulLiteral",
																				"src": "4533:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4522:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4522:2:12"
																		},
																		"nativeSrc": "4522:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4522:30:12"
																	},
																	"nativeSrc": "4519:117:12",
																	"nodeType": "YulIf",
																	"src": "4519:117:12"
																},
																{
																	"nativeSrc": "4650:72:12",
																	"nodeType": "YulAssignment",
																	"src": "4650:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4694:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4694:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4705:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4705:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4690:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4690:3:12"
																				},
																				"nativeSrc": "4690:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4690:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4714:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4714:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "4660:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "4660:29:12"
																		},
																		"nativeSrc": "4660:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4660:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4650:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4650:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes_memory_ptr",
												"nativeSrc": "4087:652:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4141:9:12",
														"nodeType": "YulTypedName",
														"src": "4141:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4152:7:12",
														"nodeType": "YulTypedName",
														"src": "4152:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4164:6:12",
														"nodeType": "YulTypedName",
														"src": "4164:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4172:6:12",
														"nodeType": "YulTypedName",
														"src": "4172:6:12",
														"type": ""
													}
												],
												"src": "4087:652:12"
											},
											{
												"body": {
													"nativeSrc": "4808:52:12",
													"nodeType": "YulBlock",
													"src": "4808:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4825:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4825:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4847:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4847:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nativeSrc": "4830:16:12",
																			"nodeType": "YulIdentifier",
																			"src": "4830:16:12"
																		},
																		"nativeSrc": "4830:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4830:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4818:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4818:6:12"
																},
																"nativeSrc": "4818:36:12",
																"nodeType": "YulFunctionCall",
																"src": "4818:36:12"
															},
															"nativeSrc": "4818:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "4818:36:12"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nativeSrc": "4745:115:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4796:5:12",
														"nodeType": "YulTypedName",
														"src": "4796:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4803:3:12",
														"nodeType": "YulTypedName",
														"src": "4803:3:12",
														"type": ""
													}
												],
												"src": "4745:115:12"
											},
											{
												"body": {
													"nativeSrc": "4962:122:12",
													"nodeType": "YulBlock",
													"src": "4962:122:12",
													"statements": [
														{
															"nativeSrc": "4972:26:12",
															"nodeType": "YulAssignment",
															"src": "4972:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4984:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4984:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4995:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4995:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4980:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4980:3:12"
																},
																"nativeSrc": "4980:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4980:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4972:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4972:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5050:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5050:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5063:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5063:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5074:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5074:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5059:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5059:3:12"
																		},
																		"nativeSrc": "5059:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5059:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nativeSrc": "5008:41:12",
																	"nodeType": "YulIdentifier",
																	"src": "5008:41:12"
																},
																"nativeSrc": "5008:69:12",
																"nodeType": "YulFunctionCall",
																"src": "5008:69:12"
															},
															"nativeSrc": "5008:69:12",
															"nodeType": "YulExpressionStatement",
															"src": "5008:69:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nativeSrc": "4866:218:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4934:9:12",
														"nodeType": "YulTypedName",
														"src": "4934:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4946:6:12",
														"nodeType": "YulTypedName",
														"src": "4946:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4957:4:12",
														"nodeType": "YulTypedName",
														"src": "4957:4:12",
														"type": ""
													}
												],
												"src": "4866:218:12"
											},
											{
												"body": {
													"nativeSrc": "5135:81:12",
													"nodeType": "YulBlock",
													"src": "5135:81:12",
													"statements": [
														{
															"nativeSrc": "5145:65:12",
															"nodeType": "YulAssignment",
															"src": "5145:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5160:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5160:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5167:42:12",
																		"nodeType": "YulLiteral",
																		"src": "5167:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5156:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5156:3:12"
																},
																"nativeSrc": "5156:54:12",
																"nodeType": "YulFunctionCall",
																"src": "5156:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5145:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5145:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5090:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5117:5:12",
														"nodeType": "YulTypedName",
														"src": "5117:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5127:7:12",
														"nodeType": "YulTypedName",
														"src": "5127:7:12",
														"type": ""
													}
												],
												"src": "5090:126:12"
											},
											{
												"body": {
													"nativeSrc": "5267:51:12",
													"nodeType": "YulBlock",
													"src": "5267:51:12",
													"statements": [
														{
															"nativeSrc": "5277:35:12",
															"nodeType": "YulAssignment",
															"src": "5277:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5306:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5306:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5288:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5288:17:12"
																},
																"nativeSrc": "5288:24:12",
																"nodeType": "YulFunctionCall",
																"src": "5288:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5277:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5277:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5222:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5249:5:12",
														"nodeType": "YulTypedName",
														"src": "5249:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5259:7:12",
														"nodeType": "YulTypedName",
														"src": "5259:7:12",
														"type": ""
													}
												],
												"src": "5222:96:12"
											},
											{
												"body": {
													"nativeSrc": "5367:79:12",
													"nodeType": "YulBlock",
													"src": "5367:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5424:16:12",
																"nodeType": "YulBlock",
																"src": "5424:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5433:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5433:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5436:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5436:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5426:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5426:6:12"
																			},
																			"nativeSrc": "5426:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5426:12:12"
																		},
																		"nativeSrc": "5426:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5426:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5390:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5390:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5415:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5415:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "5397:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5397:17:12"
																				},
																				"nativeSrc": "5397:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5397:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5387:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5387:2:12"
																		},
																		"nativeSrc": "5387:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5387:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5380:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5380:6:12"
																},
																"nativeSrc": "5380:43:12",
																"nodeType": "YulFunctionCall",
																"src": "5380:43:12"
															},
															"nativeSrc": "5377:63:12",
															"nodeType": "YulIf",
															"src": "5377:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "5324:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5360:5:12",
														"nodeType": "YulTypedName",
														"src": "5360:5:12",
														"type": ""
													}
												],
												"src": "5324:122:12"
											},
											{
												"body": {
													"nativeSrc": "5504:87:12",
													"nodeType": "YulBlock",
													"src": "5504:87:12",
													"statements": [
														{
															"nativeSrc": "5514:29:12",
															"nodeType": "YulAssignment",
															"src": "5514:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5536:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5536:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5523:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5523:12:12"
																},
																"nativeSrc": "5523:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5523:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5514:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5514:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5579:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5579:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "5552:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "5552:26:12"
																},
																"nativeSrc": "5552:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5552:33:12"
															},
															"nativeSrc": "5552:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "5552:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "5452:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5482:6:12",
														"nodeType": "YulTypedName",
														"src": "5482:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5490:3:12",
														"nodeType": "YulTypedName",
														"src": "5490:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5498:5:12",
														"nodeType": "YulTypedName",
														"src": "5498:5:12",
														"type": ""
													}
												],
												"src": "5452:139:12"
											},
											{
												"body": {
													"nativeSrc": "5642:32:12",
													"nodeType": "YulBlock",
													"src": "5642:32:12",
													"statements": [
														{
															"nativeSrc": "5652:16:12",
															"nodeType": "YulAssignment",
															"src": "5652:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "5663:5:12",
																"nodeType": "YulIdentifier",
																"src": "5663:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5652:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5652:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5597:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5624:5:12",
														"nodeType": "YulTypedName",
														"src": "5624:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5634:7:12",
														"nodeType": "YulTypedName",
														"src": "5634:7:12",
														"type": ""
													}
												],
												"src": "5597:77:12"
											},
											{
												"body": {
													"nativeSrc": "5723:79:12",
													"nodeType": "YulBlock",
													"src": "5723:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5780:16:12",
																"nodeType": "YulBlock",
																"src": "5780:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5789:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5789:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5792:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5792:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5782:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5782:6:12"
																			},
																			"nativeSrc": "5782:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5782:12:12"
																		},
																		"nativeSrc": "5782:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5782:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5746:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5746:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5771:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5771:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5753:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5753:17:12"
																				},
																				"nativeSrc": "5753:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5753:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5743:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5743:2:12"
																		},
																		"nativeSrc": "5743:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5743:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5736:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5736:6:12"
																},
																"nativeSrc": "5736:43:12",
																"nodeType": "YulFunctionCall",
																"src": "5736:43:12"
															},
															"nativeSrc": "5733:63:12",
															"nodeType": "YulIf",
															"src": "5733:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "5680:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5716:5:12",
														"nodeType": "YulTypedName",
														"src": "5716:5:12",
														"type": ""
													}
												],
												"src": "5680:122:12"
											},
											{
												"body": {
													"nativeSrc": "5860:87:12",
													"nodeType": "YulBlock",
													"src": "5860:87:12",
													"statements": [
														{
															"nativeSrc": "5870:29:12",
															"nodeType": "YulAssignment",
															"src": "5870:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5892:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5892:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5879:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5879:12:12"
																},
																"nativeSrc": "5879:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5879:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5870:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5870:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5935:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5935:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5908:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "5908:26:12"
																},
																"nativeSrc": "5908:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5908:33:12"
															},
															"nativeSrc": "5908:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "5908:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "5808:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5838:6:12",
														"nodeType": "YulTypedName",
														"src": "5838:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5846:3:12",
														"nodeType": "YulTypedName",
														"src": "5846:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5854:5:12",
														"nodeType": "YulTypedName",
														"src": "5854:5:12",
														"type": ""
													}
												],
												"src": "5808:139:12"
											},
											{
												"body": {
													"nativeSrc": "6053:519:12",
													"nodeType": "YulBlock",
													"src": "6053:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6099:83:12",
																"nodeType": "YulBlock",
																"src": "6099:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6101:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6101:77:12"
																			},
																			"nativeSrc": "6101:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6101:79:12"
																		},
																		"nativeSrc": "6101:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6101:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6074:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6074:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6083:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6083:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6070:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6070:3:12"
																		},
																		"nativeSrc": "6070:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6070:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6095:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6095:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6066:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6066:3:12"
																},
																"nativeSrc": "6066:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6066:32:12"
															},
															"nativeSrc": "6063:119:12",
															"nodeType": "YulIf",
															"src": "6063:119:12"
														},
														{
															"nativeSrc": "6192:117:12",
															"nodeType": "YulBlock",
															"src": "6192:117:12",
															"statements": [
																{
																	"nativeSrc": "6207:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6207:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6221:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6221:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6211:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6211:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6236:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6236:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6271:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6271:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6282:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6282:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6267:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6267:3:12"
																				},
																				"nativeSrc": "6267:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6267:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6291:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6291:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6246:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6246:20:12"
																		},
																		"nativeSrc": "6246:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6246:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6236:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6236:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6319:118:12",
															"nodeType": "YulBlock",
															"src": "6319:118:12",
															"statements": [
																{
																	"nativeSrc": "6334:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6334:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6348:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6348:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6338:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6338:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6364:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6364:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6399:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6399:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6410:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6410:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6395:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6395:3:12"
																				},
																				"nativeSrc": "6395:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6395:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6419:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6419:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6374:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6374:20:12"
																		},
																		"nativeSrc": "6374:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6374:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6364:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6364:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6447:118:12",
															"nodeType": "YulBlock",
															"src": "6447:118:12",
															"statements": [
																{
																	"nativeSrc": "6462:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6462:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6476:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6476:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6466:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6466:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6492:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6492:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6527:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6527:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6538:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6538:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6523:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6523:3:12"
																				},
																				"nativeSrc": "6523:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6523:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6547:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6547:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6502:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6502:20:12"
																		},
																		"nativeSrc": "6502:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6502:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6492:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6492:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5953:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6007:9:12",
														"nodeType": "YulTypedName",
														"src": "6007:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6018:7:12",
														"nodeType": "YulTypedName",
														"src": "6018:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6030:6:12",
														"nodeType": "YulTypedName",
														"src": "6030:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6038:6:12",
														"nodeType": "YulTypedName",
														"src": "6038:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6046:6:12",
														"nodeType": "YulTypedName",
														"src": "6046:6:12",
														"type": ""
													}
												],
												"src": "5953:619:12"
											},
											{
												"body": {
													"nativeSrc": "6643:53:12",
													"nodeType": "YulBlock",
													"src": "6643:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6660:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6660:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6683:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6683:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6665:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "6665:17:12"
																		},
																		"nativeSrc": "6665:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6665:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6653:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6653:6:12"
																},
																"nativeSrc": "6653:37:12",
																"nodeType": "YulFunctionCall",
																"src": "6653:37:12"
															},
															"nativeSrc": "6653:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "6653:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6578:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6631:5:12",
														"nodeType": "YulTypedName",
														"src": "6631:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6638:3:12",
														"nodeType": "YulTypedName",
														"src": "6638:3:12",
														"type": ""
													}
												],
												"src": "6578:118:12"
											},
											{
												"body": {
													"nativeSrc": "6800:124:12",
													"nodeType": "YulBlock",
													"src": "6800:124:12",
													"statements": [
														{
															"nativeSrc": "6810:26:12",
															"nodeType": "YulAssignment",
															"src": "6810:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6822:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6822:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6833:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6833:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6818:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6818:3:12"
																},
																"nativeSrc": "6818:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6818:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6810:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6810:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6890:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6890:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6903:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6903:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6914:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6914:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6899:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6899:3:12"
																		},
																		"nativeSrc": "6899:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6899:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6846:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6846:43:12"
																},
																"nativeSrc": "6846:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6846:71:12"
															},
															"nativeSrc": "6846:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6846:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6702:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6772:9:12",
														"nodeType": "YulTypedName",
														"src": "6772:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6784:6:12",
														"nodeType": "YulTypedName",
														"src": "6784:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6795:4:12",
														"nodeType": "YulTypedName",
														"src": "6795:4:12",
														"type": ""
													}
												],
												"src": "6702:222:12"
											},
											{
												"body": {
													"nativeSrc": "7019:28:12",
													"nodeType": "YulBlock",
													"src": "7019:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7036:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7036:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7039:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7039:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7029:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7029:6:12"
																},
																"nativeSrc": "7029:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7029:12:12"
															},
															"nativeSrc": "7029:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "7029:12:12"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "6930:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "6930:117:12"
											},
											{
												"body": {
													"nativeSrc": "7142:28:12",
													"nodeType": "YulBlock",
													"src": "7142:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7159:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7159:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7162:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7162:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7152:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7152:6:12"
																},
																"nativeSrc": "7152:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7152:12:12"
															},
															"nativeSrc": "7152:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "7152:12:12"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "7053:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7053:117:12"
											},
											{
												"body": {
													"nativeSrc": "7263:478:12",
													"nodeType": "YulBlock",
													"src": "7263:478:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7312:83:12",
																"nodeType": "YulBlock",
																"src": "7312:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7314:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7314:77:12"
																			},
																			"nativeSrc": "7314:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7314:79:12"
																		},
																		"nativeSrc": "7314:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7314:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7291:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7291:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7299:4:12",
																						"nodeType": "YulLiteral",
																						"src": "7299:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7287:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7287:3:12"
																				},
																				"nativeSrc": "7287:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7287:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7306:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7306:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7283:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7283:3:12"
																		},
																		"nativeSrc": "7283:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7283:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7276:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7276:6:12"
																},
																"nativeSrc": "7276:35:12",
																"nodeType": "YulFunctionCall",
																"src": "7276:35:12"
															},
															"nativeSrc": "7273:122:12",
															"nodeType": "YulIf",
															"src": "7273:122:12"
														},
														{
															"nativeSrc": "7404:30:12",
															"nodeType": "YulAssignment",
															"src": "7404:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7427:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7427:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7414:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "7414:12:12"
																},
																"nativeSrc": "7414:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7414:20:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7404:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7404:6:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7477:83:12",
																"nodeType": "YulBlock",
																"src": "7477:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "7479:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7479:77:12"
																			},
																			"nativeSrc": "7479:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7479:79:12"
																		},
																		"nativeSrc": "7479:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7479:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7449:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7449:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7457:18:12",
																		"nodeType": "YulLiteral",
																		"src": "7457:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7446:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7446:2:12"
																},
																"nativeSrc": "7446:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7446:30:12"
															},
															"nativeSrc": "7443:117:12",
															"nodeType": "YulIf",
															"src": "7443:117:12"
														},
														{
															"nativeSrc": "7569:29:12",
															"nodeType": "YulAssignment",
															"src": "7569:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7585:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7585:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7593:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7593:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7581:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7581:3:12"
																},
																"nativeSrc": "7581:17:12",
																"nodeType": "YulFunctionCall",
																"src": "7581:17:12"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "7569:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "7569:8:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7652:83:12",
																"nodeType": "YulBlock",
																"src": "7652:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "7654:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7654:77:12"
																			},
																			"nativeSrc": "7654:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7654:79:12"
																		},
																		"nativeSrc": "7654:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7654:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "7617:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "7617:8:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "7631:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7631:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7639:4:12",
																						"nodeType": "YulLiteral",
																						"src": "7639:4:12",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7627:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7627:3:12"
																				},
																				"nativeSrc": "7627:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7627:17:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7613:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7613:3:12"
																		},
																		"nativeSrc": "7613:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7613:32:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7647:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7647:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7610:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7610:2:12"
																},
																"nativeSrc": "7610:41:12",
																"nodeType": "YulFunctionCall",
																"src": "7610:41:12"
															},
															"nativeSrc": "7607:128:12",
															"nodeType": "YulIf",
															"src": "7607:128:12"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "7189:552:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7230:6:12",
														"nodeType": "YulTypedName",
														"src": "7230:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7238:3:12",
														"nodeType": "YulTypedName",
														"src": "7238:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "7246:8:12",
														"nodeType": "YulTypedName",
														"src": "7246:8:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7256:6:12",
														"nodeType": "YulTypedName",
														"src": "7256:6:12",
														"type": ""
													}
												],
												"src": "7189:552:12"
											},
											{
												"body": {
													"nativeSrc": "7866:698:12",
													"nodeType": "YulBlock",
													"src": "7866:698:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7912:83:12",
																"nodeType": "YulBlock",
																"src": "7912:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7914:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7914:77:12"
																			},
																			"nativeSrc": "7914:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7914:79:12"
																		},
																		"nativeSrc": "7914:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7914:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7887:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7887:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7896:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7896:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7883:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7883:3:12"
																		},
																		"nativeSrc": "7883:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7883:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7908:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7908:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7879:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7879:3:12"
																},
																"nativeSrc": "7879:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7879:32:12"
															},
															"nativeSrc": "7876:119:12",
															"nodeType": "YulIf",
															"src": "7876:119:12"
														},
														{
															"nativeSrc": "8005:117:12",
															"nodeType": "YulBlock",
															"src": "8005:117:12",
															"statements": [
																{
																	"nativeSrc": "8020:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8020:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8034:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8034:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8024:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8024:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8049:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8049:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8084:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8084:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8095:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8095:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8080:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8080:3:12"
																				},
																				"nativeSrc": "8080:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8080:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8104:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8104:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8059:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8059:20:12"
																		},
																		"nativeSrc": "8059:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8059:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8049:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8049:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8132:118:12",
															"nodeType": "YulBlock",
															"src": "8132:118:12",
															"statements": [
																{
																	"nativeSrc": "8147:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8147:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8161:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8161:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8151:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8151:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8177:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8177:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8212:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8212:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8223:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8223:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8208:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8208:3:12"
																				},
																				"nativeSrc": "8208:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8208:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8232:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8232:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8187:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8187:20:12"
																		},
																		"nativeSrc": "8187:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8187:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8177:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8177:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8260:297:12",
															"nodeType": "YulBlock",
															"src": "8260:297:12",
															"statements": [
																{
																	"nativeSrc": "8275:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8275:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8306:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8306:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8317:2:12",
																						"nodeType": "YulLiteral",
																						"src": "8317:2:12",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8302:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8302:3:12"
																				},
																				"nativeSrc": "8302:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8302:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8289:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "8289:12:12"
																		},
																		"nativeSrc": "8289:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8289:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8279:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8279:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8368:83:12",
																		"nodeType": "YulBlock",
																		"src": "8368:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8370:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "8370:77:12"
																					},
																					"nativeSrc": "8370:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8370:79:12"
																				},
																				"nativeSrc": "8370:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "8370:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8340:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8340:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8348:18:12",
																				"nodeType": "YulLiteral",
																				"src": "8348:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8337:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8337:2:12"
																		},
																		"nativeSrc": "8337:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8337:30:12"
																	},
																	"nativeSrc": "8334:117:12",
																	"nodeType": "YulIf",
																	"src": "8334:117:12"
																},
																{
																	"nativeSrc": "8465:82:12",
																	"nodeType": "YulAssignment",
																	"src": "8465:82:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8519:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8519:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8530:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8530:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8515:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8515:3:12"
																				},
																				"nativeSrc": "8515:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8515:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8539:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8539:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "8483:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "8483:31:12"
																		},
																		"nativeSrc": "8483:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8483:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8465:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8465:6:12"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "8473:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8473:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr",
												"nativeSrc": "7747:817:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7812:9:12",
														"nodeType": "YulTypedName",
														"src": "7812:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7823:7:12",
														"nodeType": "YulTypedName",
														"src": "7823:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7835:6:12",
														"nodeType": "YulTypedName",
														"src": "7835:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7843:6:12",
														"nodeType": "YulTypedName",
														"src": "7843:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7851:6:12",
														"nodeType": "YulTypedName",
														"src": "7851:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7859:6:12",
														"nodeType": "YulTypedName",
														"src": "7859:6:12",
														"type": ""
													}
												],
												"src": "7747:817:12"
											},
											{
												"body": {
													"nativeSrc": "8628:40:12",
													"nodeType": "YulBlock",
													"src": "8628:40:12",
													"statements": [
														{
															"nativeSrc": "8639:22:12",
															"nodeType": "YulAssignment",
															"src": "8639:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8655:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8655:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8649:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8649:5:12"
																},
																"nativeSrc": "8649:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8649:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8639:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8639:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "8570:98:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8611:5:12",
														"nodeType": "YulTypedName",
														"src": "8611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8621:6:12",
														"nodeType": "YulTypedName",
														"src": "8621:6:12",
														"type": ""
													}
												],
												"src": "8570:98:12"
											},
											{
												"body": {
													"nativeSrc": "8769:73:12",
													"nodeType": "YulBlock",
													"src": "8769:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8786:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8786:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8791:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8791:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8779:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8779:6:12"
																},
																"nativeSrc": "8779:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8779:19:12"
															},
															"nativeSrc": "8779:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "8779:19:12"
														},
														{
															"nativeSrc": "8807:29:12",
															"nodeType": "YulAssignment",
															"src": "8807:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8826:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8826:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8831:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8831:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8822:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8822:3:12"
																},
																"nativeSrc": "8822:14:12",
																"nodeType": "YulFunctionCall",
																"src": "8822:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8807:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "8807:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "8674:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8741:3:12",
														"nodeType": "YulTypedName",
														"src": "8741:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8746:6:12",
														"nodeType": "YulTypedName",
														"src": "8746:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8757:11:12",
														"nodeType": "YulTypedName",
														"src": "8757:11:12",
														"type": ""
													}
												],
												"src": "8674:168:12"
											},
											{
												"body": {
													"nativeSrc": "8910:184:12",
													"nodeType": "YulBlock",
													"src": "8910:184:12",
													"statements": [
														{
															"nativeSrc": "8920:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8920:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "8929:1:12",
																"nodeType": "YulLiteral",
																"src": "8929:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "8924:1:12",
																	"nodeType": "YulTypedName",
																	"src": "8924:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8989:63:12",
																"nodeType": "YulBlock",
																"src": "8989:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "9014:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "9014:3:12"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "9019:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "9019:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9010:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "9010:3:12"
																					},
																					"nativeSrc": "9010:11:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9010:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "9033:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "9033:3:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "9038:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "9038:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9029:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "9029:3:12"
																							},
																							"nativeSrc": "9029:11:12",
																							"nodeType": "YulFunctionCall",
																							"src": "9029:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "9023:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "9023:5:12"
																					},
																					"nativeSrc": "9023:18:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9023:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9003:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:12"
																			},
																			"nativeSrc": "9003:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9003:39:12"
																		},
																		"nativeSrc": "9003:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9003:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8950:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8950:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8953:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8953:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8947:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8947:2:12"
																},
																"nativeSrc": "8947:13:12",
																"nodeType": "YulFunctionCall",
																"src": "8947:13:12"
															},
															"nativeSrc": "8939:113:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8961:19:12",
																"nodeType": "YulBlock",
																"src": "8961:19:12",
																"statements": [
																	{
																		"nativeSrc": "8963:15:12",
																		"nodeType": "YulAssignment",
																		"src": "8963:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8972:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "8972:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8975:2:12",
																					"nodeType": "YulLiteral",
																					"src": "8975:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8968:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8968:3:12"
																			},
																			"nativeSrc": "8968:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8968:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8963:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "8963:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8943:3:12",
																"nodeType": "YulBlock",
																"src": "8943:3:12",
																"statements": []
															},
															"src": "8939:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9072:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "9072:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9077:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9077:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9068:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9068:3:12"
																		},
																		"nativeSrc": "9068:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9068:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9086:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9086:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9061:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9061:6:12"
																},
																"nativeSrc": "9061:27:12",
																"nodeType": "YulFunctionCall",
																"src": "9061:27:12"
															},
															"nativeSrc": "9061:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "9061:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "8848:246:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8892:3:12",
														"nodeType": "YulTypedName",
														"src": "8892:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8897:3:12",
														"nodeType": "YulTypedName",
														"src": "8897:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8902:6:12",
														"nodeType": "YulTypedName",
														"src": "8902:6:12",
														"type": ""
													}
												],
												"src": "8848:246:12"
											},
											{
												"body": {
													"nativeSrc": "9190:283:12",
													"nodeType": "YulBlock",
													"src": "9190:283:12",
													"statements": [
														{
															"nativeSrc": "9200:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9200:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9246:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9246:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "9214:31:12",
																	"nodeType": "YulIdentifier",
																	"src": "9214:31:12"
																},
																"nativeSrc": "9214:38:12",
																"nodeType": "YulFunctionCall",
																"src": "9214:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9204:6:12",
																	"nodeType": "YulTypedName",
																	"src": "9204:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9261:77:12",
															"nodeType": "YulAssignment",
															"src": "9261:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9326:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9326:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9331:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9331:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "9268:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "9268:57:12"
																},
																"nativeSrc": "9268:70:12",
																"nodeType": "YulFunctionCall",
																"src": "9268:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9261:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9261:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9386:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9386:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9393:4:12",
																				"nodeType": "YulLiteral",
																				"src": "9393:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9382:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9382:3:12"
																		},
																		"nativeSrc": "9382:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9382:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9400:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9400:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9405:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9405:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9347:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "9347:34:12"
																},
																"nativeSrc": "9347:65:12",
																"nodeType": "YulFunctionCall",
																"src": "9347:65:12"
															},
															"nativeSrc": "9347:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "9347:65:12"
														},
														{
															"nativeSrc": "9421:46:12",
															"nodeType": "YulAssignment",
															"src": "9421:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9432:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9432:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9459:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9459:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9437:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "9437:21:12"
																		},
																		"nativeSrc": "9437:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9437:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9428:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9428:3:12"
																},
																"nativeSrc": "9428:39:12",
																"nodeType": "YulFunctionCall",
																"src": "9428:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9421:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9421:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "9100:373:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9171:5:12",
														"nodeType": "YulTypedName",
														"src": "9171:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9178:3:12",
														"nodeType": "YulTypedName",
														"src": "9178:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9186:3:12",
														"nodeType": "YulTypedName",
														"src": "9186:3:12",
														"type": ""
													}
												],
												"src": "9100:373:12"
											},
											{
												"body": {
													"nativeSrc": "9595:193:12",
													"nodeType": "YulBlock",
													"src": "9595:193:12",
													"statements": [
														{
															"nativeSrc": "9605:26:12",
															"nodeType": "YulAssignment",
															"src": "9605:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9617:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9617:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9628:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9628:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9613:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9613:3:12"
																},
																"nativeSrc": "9613:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9613:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9605:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9605:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9652:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9652:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9663:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9663:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9648:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9648:3:12"
																		},
																		"nativeSrc": "9648:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9648:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9671:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9671:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9677:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9677:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9667:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9667:3:12"
																		},
																		"nativeSrc": "9667:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9667:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9641:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9641:6:12"
																},
																"nativeSrc": "9641:47:12",
																"nodeType": "YulFunctionCall",
																"src": "9641:47:12"
															},
															"nativeSrc": "9641:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "9641:47:12"
														},
														{
															"nativeSrc": "9697:84:12",
															"nodeType": "YulAssignment",
															"src": "9697:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9767:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9767:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9776:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9776:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "9705:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "9705:61:12"
																},
																"nativeSrc": "9705:76:12",
																"nodeType": "YulFunctionCall",
																"src": "9705:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9697:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9697:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "9479:309:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9567:9:12",
														"nodeType": "YulTypedName",
														"src": "9567:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9579:6:12",
														"nodeType": "YulTypedName",
														"src": "9579:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9590:4:12",
														"nodeType": "YulTypedName",
														"src": "9590:4:12",
														"type": ""
													}
												],
												"src": "9479:309:12"
											},
											{
												"body": {
													"nativeSrc": "9859:53:12",
													"nodeType": "YulBlock",
													"src": "9859:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9876:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9876:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9899:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9899:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9881:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "9881:17:12"
																		},
																		"nativeSrc": "9881:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9881:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9869:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9869:6:12"
																},
																"nativeSrc": "9869:37:12",
																"nodeType": "YulFunctionCall",
																"src": "9869:37:12"
															},
															"nativeSrc": "9869:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "9869:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9794:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9847:5:12",
														"nodeType": "YulTypedName",
														"src": "9847:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9854:3:12",
														"nodeType": "YulTypedName",
														"src": "9854:3:12",
														"type": ""
													}
												],
												"src": "9794:118:12"
											},
											{
												"body": {
													"nativeSrc": "10072:288:12",
													"nodeType": "YulBlock",
													"src": "10072:288:12",
													"statements": [
														{
															"nativeSrc": "10082:26:12",
															"nodeType": "YulAssignment",
															"src": "10082:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10094:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10094:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10105:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10105:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10090:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10090:3:12"
																},
																"nativeSrc": "10090:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10090:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10082:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10082:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10162:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10162:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10175:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10175:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10186:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10186:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10171:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10171:3:12"
																		},
																		"nativeSrc": "10171:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10171:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10118:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10118:43:12"
																},
																"nativeSrc": "10118:71:12",
																"nodeType": "YulFunctionCall",
																"src": "10118:71:12"
															},
															"nativeSrc": "10118:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "10118:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10243:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10243:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10256:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10256:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10267:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10267:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10252:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10252:3:12"
																		},
																		"nativeSrc": "10252:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10252:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10199:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10199:43:12"
																},
																"nativeSrc": "10199:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10199:72:12"
															},
															"nativeSrc": "10199:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10199:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10325:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10325:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10338:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10338:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10349:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10349:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10334:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10334:3:12"
																		},
																		"nativeSrc": "10334:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10334:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10281:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10281:43:12"
																},
																"nativeSrc": "10281:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10281:72:12"
															},
															"nativeSrc": "10281:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10281:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9918:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10028:9:12",
														"nodeType": "YulTypedName",
														"src": "10028:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10040:6:12",
														"nodeType": "YulTypedName",
														"src": "10040:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10048:6:12",
														"nodeType": "YulTypedName",
														"src": "10048:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10056:6:12",
														"nodeType": "YulTypedName",
														"src": "10056:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10067:4:12",
														"nodeType": "YulTypedName",
														"src": "10067:4:12",
														"type": ""
													}
												],
												"src": "9918:442:12"
											},
											{
												"body": {
													"nativeSrc": "10462:73:12",
													"nodeType": "YulBlock",
													"src": "10462:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10479:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10479:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10484:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10484:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10472:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10472:6:12"
																},
																"nativeSrc": "10472:19:12",
																"nodeType": "YulFunctionCall",
																"src": "10472:19:12"
															},
															"nativeSrc": "10472:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "10472:19:12"
														},
														{
															"nativeSrc": "10500:29:12",
															"nodeType": "YulAssignment",
															"src": "10500:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10519:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10519:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10524:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10524:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10515:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10515:3:12"
																},
																"nativeSrc": "10515:14:12",
																"nodeType": "YulFunctionCall",
																"src": "10515:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10500:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "10500:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10366:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10434:3:12",
														"nodeType": "YulTypedName",
														"src": "10434:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10439:6:12",
														"nodeType": "YulTypedName",
														"src": "10439:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10450:11:12",
														"nodeType": "YulTypedName",
														"src": "10450:11:12",
														"type": ""
													}
												],
												"src": "10366:169:12"
											},
											{
												"body": {
													"nativeSrc": "10647:53:12",
													"nodeType": "YulBlock",
													"src": "10647:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10669:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10669:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10677:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10677:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10665:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10665:3:12"
																		},
																		"nativeSrc": "10665:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10665:14:12"
																	},
																	{
																		"hexValue": "6e6f74206f776e6572",
																		"kind": "string",
																		"nativeSrc": "10681:11:12",
																		"nodeType": "YulLiteral",
																		"src": "10681:11:12",
																		"type": "",
																		"value": "not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10658:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10658:6:12"
																},
																"nativeSrc": "10658:35:12",
																"nodeType": "YulFunctionCall",
																"src": "10658:35:12"
															},
															"nativeSrc": "10658:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "10658:35:12"
														}
													]
												},
												"name": "store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
												"nativeSrc": "10541:159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10639:6:12",
														"nodeType": "YulTypedName",
														"src": "10639:6:12",
														"type": ""
													}
												],
												"src": "10541:159:12"
											},
											{
												"body": {
													"nativeSrc": "10852:219:12",
													"nodeType": "YulBlock",
													"src": "10852:219:12",
													"statements": [
														{
															"nativeSrc": "10862:73:12",
															"nodeType": "YulAssignment",
															"src": "10862:73:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10928:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10928:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10933:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10933:1:12",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10869:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "10869:58:12"
																},
																"nativeSrc": "10869:66:12",
																"nodeType": "YulFunctionCall",
																"src": "10869:66:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10862:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10862:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11033:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11033:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																	"nativeSrc": "10944:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "10944:88:12"
																},
																"nativeSrc": "10944:93:12",
																"nodeType": "YulFunctionCall",
																"src": "10944:93:12"
															},
															"nativeSrc": "10944:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "10944:93:12"
														},
														{
															"nativeSrc": "11046:19:12",
															"nodeType": "YulAssignment",
															"src": "11046:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11057:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11057:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11062:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11062:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11053:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11053:3:12"
																},
																"nativeSrc": "11053:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11053:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11046:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11046:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10706:365:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10840:3:12",
														"nodeType": "YulTypedName",
														"src": "10840:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10848:3:12",
														"nodeType": "YulTypedName",
														"src": "10848:3:12",
														"type": ""
													}
												],
												"src": "10706:365:12"
											},
											{
												"body": {
													"nativeSrc": "11248:248:12",
													"nodeType": "YulBlock",
													"src": "11248:248:12",
													"statements": [
														{
															"nativeSrc": "11258:26:12",
															"nodeType": "YulAssignment",
															"src": "11258:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11270:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11270:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11281:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11281:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11266:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11266:3:12"
																},
																"nativeSrc": "11266:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11266:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11258:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11258:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11305:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11305:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11316:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11316:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11301:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11301:3:12"
																		},
																		"nativeSrc": "11301:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11301:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11324:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11324:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11330:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11330:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11320:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11320:3:12"
																		},
																		"nativeSrc": "11320:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11320:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11294:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11294:6:12"
																},
																"nativeSrc": "11294:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11294:47:12"
															},
															"nativeSrc": "11294:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11294:47:12"
														},
														{
															"nativeSrc": "11350:139:12",
															"nodeType": "YulAssignment",
															"src": "11350:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11484:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11484:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11358:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11358:124:12"
																},
																"nativeSrc": "11358:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11358:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11350:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11350:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11077:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11228:9:12",
														"nodeType": "YulTypedName",
														"src": "11228:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11243:4:12",
														"nodeType": "YulTypedName",
														"src": "11243:4:12",
														"type": ""
													}
												],
												"src": "11077:419:12"
											},
											{
												"body": {
													"nativeSrc": "11628:206:12",
													"nodeType": "YulBlock",
													"src": "11628:206:12",
													"statements": [
														{
															"nativeSrc": "11638:26:12",
															"nodeType": "YulAssignment",
															"src": "11638:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11650:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11650:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11661:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11661:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11646:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11646:3:12"
																},
																"nativeSrc": "11646:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11646:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11638:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11638:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11718:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11718:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11731:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11731:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11742:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11742:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11727:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11727:3:12"
																		},
																		"nativeSrc": "11727:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11727:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11674:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "11674:43:12"
																},
																"nativeSrc": "11674:71:12",
																"nodeType": "YulFunctionCall",
																"src": "11674:71:12"
															},
															"nativeSrc": "11674:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "11674:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11799:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11799:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11812:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11812:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11823:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11823:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11808:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11808:3:12"
																		},
																		"nativeSrc": "11808:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11808:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11755:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "11755:43:12"
																},
																"nativeSrc": "11755:72:12",
																"nodeType": "YulFunctionCall",
																"src": "11755:72:12"
															},
															"nativeSrc": "11755:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "11755:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11502:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11592:9:12",
														"nodeType": "YulTypedName",
														"src": "11592:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11604:6:12",
														"nodeType": "YulTypedName",
														"src": "11604:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11612:6:12",
														"nodeType": "YulTypedName",
														"src": "11612:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11623:4:12",
														"nodeType": "YulTypedName",
														"src": "11623:4:12",
														"type": ""
													}
												],
												"src": "11502:332:12"
											},
											{
												"body": {
													"nativeSrc": "11880:76:12",
													"nodeType": "YulBlock",
													"src": "11880:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11934:16:12",
																"nodeType": "YulBlock",
																"src": "11934:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11943:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11943:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11946:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11946:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11936:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11936:6:12"
																			},
																			"nativeSrc": "11936:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11936:12:12"
																		},
																		"nativeSrc": "11936:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11936:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11903:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11903:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11925:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "11925:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "11910:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "11910:14:12"
																				},
																				"nativeSrc": "11910:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11910:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11900:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "11900:2:12"
																		},
																		"nativeSrc": "11900:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11900:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11893:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11893:6:12"
																},
																"nativeSrc": "11893:40:12",
																"nodeType": "YulFunctionCall",
																"src": "11893:40:12"
															},
															"nativeSrc": "11890:60:12",
															"nodeType": "YulIf",
															"src": "11890:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "11840:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11873:5:12",
														"nodeType": "YulTypedName",
														"src": "11873:5:12",
														"type": ""
													}
												],
												"src": "11840:116:12"
											},
											{
												"body": {
													"nativeSrc": "12022:77:12",
													"nodeType": "YulBlock",
													"src": "12022:77:12",
													"statements": [
														{
															"nativeSrc": "12032:22:12",
															"nodeType": "YulAssignment",
															"src": "12032:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12047:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12047:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12041:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12041:5:12"
																},
																"nativeSrc": "12041:13:12",
																"nodeType": "YulFunctionCall",
																"src": "12041:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12032:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12032:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12087:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12087:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12063:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "12063:23:12"
																},
																"nativeSrc": "12063:30:12",
																"nodeType": "YulFunctionCall",
																"src": "12063:30:12"
															},
															"nativeSrc": "12063:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "12063:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "11962:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12000:6:12",
														"nodeType": "YulTypedName",
														"src": "12000:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12008:3:12",
														"nodeType": "YulTypedName",
														"src": "12008:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12016:5:12",
														"nodeType": "YulTypedName",
														"src": "12016:5:12",
														"type": ""
													}
												],
												"src": "11962:137:12"
											},
											{
												"body": {
													"nativeSrc": "12179:271:12",
													"nodeType": "YulBlock",
													"src": "12179:271:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "12225:83:12",
																"nodeType": "YulBlock",
																"src": "12225:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12227:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "12227:77:12"
																			},
																			"nativeSrc": "12227:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12227:79:12"
																		},
																		"nativeSrc": "12227:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12227:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12200:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12200:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12209:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12209:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12196:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12196:3:12"
																		},
																		"nativeSrc": "12196:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12196:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12221:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12221:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12192:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12192:3:12"
																},
																"nativeSrc": "12192:32:12",
																"nodeType": "YulFunctionCall",
																"src": "12192:32:12"
															},
															"nativeSrc": "12189:119:12",
															"nodeType": "YulIf",
															"src": "12189:119:12"
														},
														{
															"nativeSrc": "12318:125:12",
															"nodeType": "YulBlock",
															"src": "12318:125:12",
															"statements": [
																{
																	"nativeSrc": "12333:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12333:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12347:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12347:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12337:6:12",
																			"nodeType": "YulTypedName",
																			"src": "12337:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12362:71:12",
																	"nodeType": "YulAssignment",
																	"src": "12362:71:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12405:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "12405:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12416:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "12416:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12401:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12401:3:12"
																				},
																				"nativeSrc": "12401:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12401:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12425:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12425:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12372:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "12372:28:12"
																		},
																		"nativeSrc": "12372:61:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12372:61:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12362:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "12362:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12105:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12149:9:12",
														"nodeType": "YulTypedName",
														"src": "12149:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12160:7:12",
														"nodeType": "YulTypedName",
														"src": "12160:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12172:6:12",
														"nodeType": "YulTypedName",
														"src": "12172:6:12",
														"type": ""
													}
												],
												"src": "12105:345:12"
											},
											{
												"body": {
													"nativeSrc": "12519:80:12",
													"nodeType": "YulBlock",
													"src": "12519:80:12",
													"statements": [
														{
															"nativeSrc": "12529:22:12",
															"nodeType": "YulAssignment",
															"src": "12529:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12544:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12544:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12538:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12538:5:12"
																},
																"nativeSrc": "12538:13:12",
																"nodeType": "YulFunctionCall",
																"src": "12538:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12529:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12529:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12587:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12587:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "12560:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "12560:26:12"
																},
																"nativeSrc": "12560:33:12",
																"nodeType": "YulFunctionCall",
																"src": "12560:33:12"
															},
															"nativeSrc": "12560:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "12560:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "12456:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12497:6:12",
														"nodeType": "YulTypedName",
														"src": "12497:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12505:3:12",
														"nodeType": "YulTypedName",
														"src": "12505:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12513:5:12",
														"nodeType": "YulTypedName",
														"src": "12513:5:12",
														"type": ""
													}
												],
												"src": "12456:143:12"
											},
											{
												"body": {
													"nativeSrc": "12668:80:12",
													"nodeType": "YulBlock",
													"src": "12668:80:12",
													"statements": [
														{
															"nativeSrc": "12678:22:12",
															"nodeType": "YulAssignment",
															"src": "12678:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12693:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12693:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12687:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12687:5:12"
																},
																"nativeSrc": "12687:13:12",
																"nodeType": "YulFunctionCall",
																"src": "12687:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12678:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12678:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12736:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12736:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "12709:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "12709:26:12"
																},
																"nativeSrc": "12709:33:12",
																"nodeType": "YulFunctionCall",
																"src": "12709:33:12"
															},
															"nativeSrc": "12709:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "12709:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "12605:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12646:6:12",
														"nodeType": "YulTypedName",
														"src": "12646:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12654:3:12",
														"nodeType": "YulTypedName",
														"src": "12654:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12662:5:12",
														"nodeType": "YulTypedName",
														"src": "12662:5:12",
														"type": ""
													}
												],
												"src": "12605:143:12"
											},
											{
												"body": {
													"nativeSrc": "12865:552:12",
													"nodeType": "YulBlock",
													"src": "12865:552:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "12911:83:12",
																"nodeType": "YulBlock",
																"src": "12911:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12913:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "12913:77:12"
																			},
																			"nativeSrc": "12913:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12913:79:12"
																		},
																		"nativeSrc": "12913:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12913:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12886:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12886:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12895:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12895:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12882:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12882:3:12"
																		},
																		"nativeSrc": "12882:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12882:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12907:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12907:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12878:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12878:3:12"
																},
																"nativeSrc": "12878:32:12",
																"nodeType": "YulFunctionCall",
																"src": "12878:32:12"
															},
															"nativeSrc": "12875:119:12",
															"nodeType": "YulIf",
															"src": "12875:119:12"
														},
														{
															"nativeSrc": "13004:128:12",
															"nodeType": "YulBlock",
															"src": "13004:128:12",
															"statements": [
																{
																	"nativeSrc": "13019:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13019:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13033:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13033:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13023:6:12",
																			"nodeType": "YulTypedName",
																			"src": "13023:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13048:74:12",
																	"nodeType": "YulAssignment",
																	"src": "13048:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13094:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "13094:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13105:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "13105:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13090:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13090:3:12"
																				},
																				"nativeSrc": "13090:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13090:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13114:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "13114:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "13058:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "13058:31:12"
																		},
																		"nativeSrc": "13058:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13058:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13048:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "13048:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13142:129:12",
															"nodeType": "YulBlock",
															"src": "13142:129:12",
															"statements": [
																{
																	"nativeSrc": "13157:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13157:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13171:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13171:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13161:6:12",
																			"nodeType": "YulTypedName",
																			"src": "13161:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13187:74:12",
																	"nodeType": "YulAssignment",
																	"src": "13187:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13233:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "13233:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13244:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "13244:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13229:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13229:3:12"
																				},
																				"nativeSrc": "13229:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13229:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13253:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "13253:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "13197:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "13197:31:12"
																		},
																		"nativeSrc": "13197:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13197:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13187:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "13187:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13281:129:12",
															"nodeType": "YulBlock",
															"src": "13281:129:12",
															"statements": [
																{
																	"nativeSrc": "13296:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13296:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13310:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13310:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13300:6:12",
																			"nodeType": "YulTypedName",
																			"src": "13300:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13326:74:12",
																	"nodeType": "YulAssignment",
																	"src": "13326:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13372:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "13372:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13383:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "13383:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13368:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13368:3:12"
																				},
																				"nativeSrc": "13368:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13368:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13392:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "13392:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "13336:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "13336:31:12"
																		},
																		"nativeSrc": "13336:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13336:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "13326:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "13326:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory",
												"nativeSrc": "12754:663:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12819:9:12",
														"nodeType": "YulTypedName",
														"src": "12819:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12830:7:12",
														"nodeType": "YulTypedName",
														"src": "12830:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12842:6:12",
														"nodeType": "YulTypedName",
														"src": "12842:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12850:6:12",
														"nodeType": "YulTypedName",
														"src": "12850:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12858:6:12",
														"nodeType": "YulTypedName",
														"src": "12858:6:12",
														"type": ""
													}
												],
												"src": "12754:663:12"
											},
											{
												"body": {
													"nativeSrc": "13521:124:12",
													"nodeType": "YulBlock",
													"src": "13521:124:12",
													"statements": [
														{
															"nativeSrc": "13531:26:12",
															"nodeType": "YulAssignment",
															"src": "13531:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13543:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13543:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13554:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13554:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13539:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13539:3:12"
																},
																"nativeSrc": "13539:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13539:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13531:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13531:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13611:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13611:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13624:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13624:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13635:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13635:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13620:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13620:3:12"
																		},
																		"nativeSrc": "13620:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13620:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13567:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "13567:43:12"
																},
																"nativeSrc": "13567:71:12",
																"nodeType": "YulFunctionCall",
																"src": "13567:71:12"
															},
															"nativeSrc": "13567:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "13567:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13423:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13493:9:12",
														"nodeType": "YulTypedName",
														"src": "13493:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13505:6:12",
														"nodeType": "YulTypedName",
														"src": "13505:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13516:4:12",
														"nodeType": "YulTypedName",
														"src": "13516:4:12",
														"type": ""
													}
												],
												"src": "13423:222:12"
											},
											{
												"body": {
													"nativeSrc": "13728:274:12",
													"nodeType": "YulBlock",
													"src": "13728:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "13774:83:12",
																"nodeType": "YulBlock",
																"src": "13774:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13776:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "13776:77:12"
																			},
																			"nativeSrc": "13776:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13776:79:12"
																		},
																		"nativeSrc": "13776:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13776:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13749:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "13749:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13758:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13758:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13745:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13745:3:12"
																		},
																		"nativeSrc": "13745:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13745:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13770:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13770:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13741:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13741:3:12"
																},
																"nativeSrc": "13741:32:12",
																"nodeType": "YulFunctionCall",
																"src": "13741:32:12"
															},
															"nativeSrc": "13738:119:12",
															"nodeType": "YulIf",
															"src": "13738:119:12"
														},
														{
															"nativeSrc": "13867:128:12",
															"nodeType": "YulBlock",
															"src": "13867:128:12",
															"statements": [
																{
																	"nativeSrc": "13882:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13882:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13896:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13896:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13886:6:12",
																			"nodeType": "YulTypedName",
																			"src": "13886:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13911:74:12",
																	"nodeType": "YulAssignment",
																	"src": "13911:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13957:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "13957:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13968:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "13968:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13953:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13953:3:12"
																				},
																				"nativeSrc": "13953:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13953:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13977:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "13977:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "13921:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "13921:31:12"
																		},
																		"nativeSrc": "13921:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13921:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13911:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "13911:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "13651:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13698:9:12",
														"nodeType": "YulTypedName",
														"src": "13698:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13709:7:12",
														"nodeType": "YulTypedName",
														"src": "13709:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13721:6:12",
														"nodeType": "YulTypedName",
														"src": "13721:6:12",
														"type": ""
													}
												],
												"src": "13651:351:12"
											},
											{
												"body": {
													"nativeSrc": "14114:59:12",
													"nodeType": "YulBlock",
													"src": "14114:59:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14136:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14136:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14144:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14144:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14132:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14132:3:12"
																		},
																		"nativeSrc": "14132:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14132:14:12"
																	},
																	{
																		"hexValue": "4e6f7420746f6b656e206f776e6572",
																		"kind": "string",
																		"nativeSrc": "14148:17:12",
																		"nodeType": "YulLiteral",
																		"src": "14148:17:12",
																		"type": "",
																		"value": "Not token owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14125:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14125:6:12"
																},
																"nativeSrc": "14125:41:12",
																"nodeType": "YulFunctionCall",
																"src": "14125:41:12"
															},
															"nativeSrc": "14125:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "14125:41:12"
														}
													]
												},
												"name": "store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9",
												"nativeSrc": "14008:165:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14106:6:12",
														"nodeType": "YulTypedName",
														"src": "14106:6:12",
														"type": ""
													}
												],
												"src": "14008:165:12"
											},
											{
												"body": {
													"nativeSrc": "14325:220:12",
													"nodeType": "YulBlock",
													"src": "14325:220:12",
													"statements": [
														{
															"nativeSrc": "14335:74:12",
															"nodeType": "YulAssignment",
															"src": "14335:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14401:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14401:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14406:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14406:2:12",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14342:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14342:58:12"
																},
																"nativeSrc": "14342:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14342:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14335:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14335:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14507:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14507:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9",
																	"nativeSrc": "14418:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14418:88:12"
																},
																"nativeSrc": "14418:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14418:93:12"
															},
															"nativeSrc": "14418:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14418:93:12"
														},
														{
															"nativeSrc": "14520:19:12",
															"nodeType": "YulAssignment",
															"src": "14520:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14531:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14531:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14536:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14536:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14527:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14527:3:12"
																},
																"nativeSrc": "14527:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14527:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14520:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14520:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14179:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14313:3:12",
														"nodeType": "YulTypedName",
														"src": "14313:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14321:3:12",
														"nodeType": "YulTypedName",
														"src": "14321:3:12",
														"type": ""
													}
												],
												"src": "14179:366:12"
											},
											{
												"body": {
													"nativeSrc": "14722:248:12",
													"nodeType": "YulBlock",
													"src": "14722:248:12",
													"statements": [
														{
															"nativeSrc": "14732:26:12",
															"nodeType": "YulAssignment",
															"src": "14732:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14744:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14744:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14755:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14755:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14740:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14740:3:12"
																},
																"nativeSrc": "14740:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14740:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14732:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14732:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14779:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14779:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14790:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14790:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14775:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14775:3:12"
																		},
																		"nativeSrc": "14775:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14775:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14798:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14798:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14804:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14804:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14794:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14794:3:12"
																		},
																		"nativeSrc": "14794:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14794:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14768:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14768:6:12"
																},
																"nativeSrc": "14768:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14768:47:12"
															},
															"nativeSrc": "14768:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14768:47:12"
														},
														{
															"nativeSrc": "14824:139:12",
															"nodeType": "YulAssignment",
															"src": "14824:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14958:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14958:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14832:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14832:124:12"
																},
																"nativeSrc": "14832:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14832:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14824:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14824:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14551:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14702:9:12",
														"nodeType": "YulTypedName",
														"src": "14702:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14717:4:12",
														"nodeType": "YulTypedName",
														"src": "14717:4:12",
														"type": ""
													}
												],
												"src": "14551:419:12"
											},
											{
												"body": {
													"nativeSrc": "15089:34:12",
													"nodeType": "YulBlock",
													"src": "15089:34:12",
													"statements": [
														{
															"nativeSrc": "15099:18:12",
															"nodeType": "YulAssignment",
															"src": "15099:18:12",
															"value": {
																"name": "pos",
																"nativeSrc": "15114:3:12",
																"nodeType": "YulIdentifier",
																"src": "15114:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "15099:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "15099:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14976:147:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15061:3:12",
														"nodeType": "YulTypedName",
														"src": "15061:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15066:6:12",
														"nodeType": "YulTypedName",
														"src": "15066:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "15077:11:12",
														"nodeType": "YulTypedName",
														"src": "15077:11:12",
														"type": ""
													}
												],
												"src": "14976:147:12"
											},
											{
												"body": {
													"nativeSrc": "15269:209:12",
													"nodeType": "YulBlock",
													"src": "15269:209:12",
													"statements": [
														{
															"nativeSrc": "15279:95:12",
															"nodeType": "YulAssignment",
															"src": "15279:95:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15362:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15362:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15367:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15367:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15286:75:12",
																	"nodeType": "YulIdentifier",
																	"src": "15286:75:12"
																},
																"nativeSrc": "15286:88:12",
																"nodeType": "YulFunctionCall",
																"src": "15286:88:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15279:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15279:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "15421:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15421:5:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15428:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15428:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15433:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15433:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "15384:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "15384:36:12"
																},
																"nativeSrc": "15384:56:12",
																"nodeType": "YulFunctionCall",
																"src": "15384:56:12"
															},
															"nativeSrc": "15384:56:12",
															"nodeType": "YulExpressionStatement",
															"src": "15384:56:12"
														},
														{
															"nativeSrc": "15449:23:12",
															"nodeType": "YulAssignment",
															"src": "15449:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15460:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15460:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15465:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15465:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15456:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15456:3:12"
																},
																"nativeSrc": "15456:16:12",
																"nodeType": "YulFunctionCall",
																"src": "15456:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15449:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15449:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15151:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "15242:5:12",
														"nodeType": "YulTypedName",
														"src": "15242:5:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15249:6:12",
														"nodeType": "YulTypedName",
														"src": "15249:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15257:3:12",
														"nodeType": "YulTypedName",
														"src": "15257:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15265:3:12",
														"nodeType": "YulTypedName",
														"src": "15265:3:12",
														"type": ""
													}
												],
												"src": "15151:327:12"
											},
											{
												"body": {
													"nativeSrc": "15628:147:12",
													"nodeType": "YulBlock",
													"src": "15628:147:12",
													"statements": [
														{
															"nativeSrc": "15639:110:12",
															"nodeType": "YulAssignment",
															"src": "15639:110:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15728:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15728:6:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "15736:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15736:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15745:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15745:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15646:81:12",
																	"nodeType": "YulIdentifier",
																	"src": "15646:81:12"
																},
																"nativeSrc": "15646:103:12",
																"nodeType": "YulFunctionCall",
																"src": "15646:103:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15639:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15639:3:12"
																}
															]
														},
														{
															"nativeSrc": "15759:10:12",
															"nodeType": "YulAssignment",
															"src": "15759:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "15766:3:12",
																"nodeType": "YulIdentifier",
																"src": "15766:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15759:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15759:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15484:291:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15599:3:12",
														"nodeType": "YulTypedName",
														"src": "15599:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15605:6:12",
														"nodeType": "YulTypedName",
														"src": "15605:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15613:6:12",
														"nodeType": "YulTypedName",
														"src": "15613:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15624:3:12",
														"nodeType": "YulTypedName",
														"src": "15624:3:12",
														"type": ""
													}
												],
												"src": "15484:291:12"
											},
											{
												"body": {
													"nativeSrc": "15809:152:12",
													"nodeType": "YulBlock",
													"src": "15809:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15826:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15826:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15829:77:12",
																		"nodeType": "YulLiteral",
																		"src": "15829:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15819:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15819:6:12"
																},
																"nativeSrc": "15819:88:12",
																"nodeType": "YulFunctionCall",
																"src": "15819:88:12"
															},
															"nativeSrc": "15819:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "15819:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15923:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15923:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15926:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15926:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15916:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15916:6:12"
																},
																"nativeSrc": "15916:15:12",
																"nodeType": "YulFunctionCall",
																"src": "15916:15:12"
															},
															"nativeSrc": "15916:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "15916:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15947:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15947:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15950:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15950:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15940:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15940:6:12"
																},
																"nativeSrc": "15940:15:12",
																"nodeType": "YulFunctionCall",
																"src": "15940:15:12"
															},
															"nativeSrc": "15940:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "15940:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15781:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "15781:180:12"
											},
											{
												"body": {
													"nativeSrc": "16012:149:12",
													"nodeType": "YulBlock",
													"src": "16012:149:12",
													"statements": [
														{
															"nativeSrc": "16022:25:12",
															"nodeType": "YulAssignment",
															"src": "16022:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16045:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16045:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16027:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "16027:17:12"
																},
																"nativeSrc": "16027:20:12",
																"nodeType": "YulFunctionCall",
																"src": "16027:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16022:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "16022:1:12"
																}
															]
														},
														{
															"nativeSrc": "16056:25:12",
															"nodeType": "YulAssignment",
															"src": "16056:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16079:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16079:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16061:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "16061:17:12"
																},
																"nativeSrc": "16061:20:12",
																"nodeType": "YulFunctionCall",
																"src": "16061:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16056:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "16056:1:12"
																}
															]
														},
														{
															"nativeSrc": "16090:17:12",
															"nodeType": "YulAssignment",
															"src": "16090:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16102:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16102:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16105:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16105:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16098:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16098:3:12"
																},
																"nativeSrc": "16098:9:12",
																"nodeType": "YulFunctionCall",
																"src": "16098:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16090:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16090:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16132:22:12",
																"nodeType": "YulBlock",
																"src": "16132:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16134:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "16134:16:12"
																			},
																			"nativeSrc": "16134:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16134:18:12"
																		},
																		"nativeSrc": "16134:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "16134:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16123:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16123:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "16129:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16129:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16120:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "16120:2:12"
																},
																"nativeSrc": "16120:11:12",
																"nodeType": "YulFunctionCall",
																"src": "16120:11:12"
															},
															"nativeSrc": "16117:37:12",
															"nodeType": "YulIf",
															"src": "16117:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "15967:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15998:1:12",
														"nodeType": "YulTypedName",
														"src": "15998:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16001:1:12",
														"nodeType": "YulTypedName",
														"src": "16001:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16007:4:12",
														"nodeType": "YulTypedName",
														"src": "16007:4:12",
														"type": ""
													}
												],
												"src": "15967:194:12"
											},
											{
												"body": {
													"nativeSrc": "16220:51:12",
													"nodeType": "YulBlock",
													"src": "16220:51:12",
													"statements": [
														{
															"nativeSrc": "16230:35:12",
															"nodeType": "YulAssignment",
															"src": "16230:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16259:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "16259:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "16241:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "16241:17:12"
																},
																"nativeSrc": "16241:24:12",
																"nodeType": "YulFunctionCall",
																"src": "16241:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "16230:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "16230:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "16167:104:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16202:5:12",
														"nodeType": "YulTypedName",
														"src": "16202:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "16212:7:12",
														"nodeType": "YulTypedName",
														"src": "16212:7:12",
														"type": ""
													}
												],
												"src": "16167:104:12"
											},
											{
												"body": {
													"nativeSrc": "16328:87:12",
													"nodeType": "YulBlock",
													"src": "16328:87:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "16393:16:12",
																"nodeType": "YulBlock",
																"src": "16393:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16402:1:12",
																					"nodeType": "YulLiteral",
																					"src": "16402:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16405:1:12",
																					"nodeType": "YulLiteral",
																					"src": "16405:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16395:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16395:6:12"
																			},
																			"nativeSrc": "16395:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16395:12:12"
																		},
																		"nativeSrc": "16395:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "16395:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16351:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "16351:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16384:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "16384:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "16358:25:12",
																					"nodeType": "YulIdentifier",
																					"src": "16358:25:12"
																				},
																				"nativeSrc": "16358:32:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16358:32:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "16348:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "16348:2:12"
																		},
																		"nativeSrc": "16348:43:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16348:43:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16341:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16341:6:12"
																},
																"nativeSrc": "16341:51:12",
																"nodeType": "YulFunctionCall",
																"src": "16341:51:12"
															},
															"nativeSrc": "16338:71:12",
															"nodeType": "YulIf",
															"src": "16338:71:12"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "16277:138:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16321:5:12",
														"nodeType": "YulTypedName",
														"src": "16321:5:12",
														"type": ""
													}
												],
												"src": "16277:138:12"
											},
											{
												"body": {
													"nativeSrc": "16492:88:12",
													"nodeType": "YulBlock",
													"src": "16492:88:12",
													"statements": [
														{
															"nativeSrc": "16502:22:12",
															"nodeType": "YulAssignment",
															"src": "16502:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16517:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16517:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16511:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "16511:5:12"
																},
																"nativeSrc": "16511:13:12",
																"nodeType": "YulFunctionCall",
																"src": "16511:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16502:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "16502:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16568:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "16568:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "16533:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "16533:34:12"
																},
																"nativeSrc": "16533:41:12",
																"nodeType": "YulFunctionCall",
																"src": "16533:41:12"
															},
															"nativeSrc": "16533:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "16533:41:12"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nativeSrc": "16421:159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16470:6:12",
														"nodeType": "YulTypedName",
														"src": "16470:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16478:3:12",
														"nodeType": "YulTypedName",
														"src": "16478:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16486:5:12",
														"nodeType": "YulTypedName",
														"src": "16486:5:12",
														"type": ""
													}
												],
												"src": "16421:159:12"
											},
											{
												"body": {
													"nativeSrc": "16705:560:12",
													"nodeType": "YulBlock",
													"src": "16705:560:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "16751:83:12",
																"nodeType": "YulBlock",
																"src": "16751:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16753:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "16753:77:12"
																			},
																			"nativeSrc": "16753:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16753:79:12"
																		},
																		"nativeSrc": "16753:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "16753:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16726:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16726:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16735:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16735:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16722:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16722:3:12"
																		},
																		"nativeSrc": "16722:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16722:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16747:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16747:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16718:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16718:3:12"
																},
																"nativeSrc": "16718:32:12",
																"nodeType": "YulFunctionCall",
																"src": "16718:32:12"
															},
															"nativeSrc": "16715:119:12",
															"nodeType": "YulIf",
															"src": "16715:119:12"
														},
														{
															"nativeSrc": "16844:128:12",
															"nodeType": "YulBlock",
															"src": "16844:128:12",
															"statements": [
																{
																	"nativeSrc": "16859:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16859:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16873:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16873:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16863:6:12",
																			"nodeType": "YulTypedName",
																			"src": "16863:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16888:74:12",
																	"nodeType": "YulAssignment",
																	"src": "16888:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16934:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16934:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16945:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16945:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16930:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16930:3:12"
																				},
																				"nativeSrc": "16930:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16930:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16954:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16954:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "16898:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "16898:31:12"
																		},
																		"nativeSrc": "16898:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16898:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16888:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "16888:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16982:137:12",
															"nodeType": "YulBlock",
															"src": "16982:137:12",
															"statements": [
																{
																	"nativeSrc": "16997:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16997:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17011:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17011:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17001:6:12",
																			"nodeType": "YulTypedName",
																			"src": "17001:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17027:82:12",
																	"nodeType": "YulAssignment",
																	"src": "17027:82:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17081:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "17081:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17092:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "17092:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17077:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "17077:3:12"
																				},
																				"nativeSrc": "17077:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17077:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17101:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "17101:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nativeSrc": "17037:39:12",
																			"nodeType": "YulIdentifier",
																			"src": "17037:39:12"
																		},
																		"nativeSrc": "17037:72:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17037:72:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17027:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "17027:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17129:129:12",
															"nodeType": "YulBlock",
															"src": "17129:129:12",
															"statements": [
																{
																	"nativeSrc": "17144:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17144:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17158:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17158:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17148:6:12",
																			"nodeType": "YulTypedName",
																			"src": "17148:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17174:74:12",
																	"nodeType": "YulAssignment",
																	"src": "17174:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17220:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "17220:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17231:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "17231:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17216:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "17216:3:12"
																				},
																				"nativeSrc": "17216:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17216:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17240:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "17240:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "17184:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "17184:31:12"
																		},
																		"nativeSrc": "17184:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17184:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "17174:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "17174:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory",
												"nativeSrc": "16586:679:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16659:9:12",
														"nodeType": "YulTypedName",
														"src": "16659:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16670:7:12",
														"nodeType": "YulTypedName",
														"src": "16670:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16682:6:12",
														"nodeType": "YulTypedName",
														"src": "16682:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16690:6:12",
														"nodeType": "YulTypedName",
														"src": "16690:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16698:6:12",
														"nodeType": "YulTypedName",
														"src": "16698:6:12",
														"type": ""
													}
												],
												"src": "16586:679:12"
											},
											{
												"body": {
													"nativeSrc": "17299:152:12",
													"nodeType": "YulBlock",
													"src": "17299:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17316:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17316:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17319:77:12",
																		"nodeType": "YulLiteral",
																		"src": "17319:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17309:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17309:6:12"
																},
																"nativeSrc": "17309:88:12",
																"nodeType": "YulFunctionCall",
																"src": "17309:88:12"
															},
															"nativeSrc": "17309:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "17309:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17413:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17413:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17416:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17416:4:12",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17406:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17406:6:12"
																},
																"nativeSrc": "17406:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17406:15:12"
															},
															"nativeSrc": "17406:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17406:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17437:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17437:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17440:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17440:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17430:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17430:6:12"
																},
																"nativeSrc": "17430:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17430:15:12"
															},
															"nativeSrc": "17430:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17430:15:12"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "17271:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "17271:180:12"
											},
											{
												"body": {
													"nativeSrc": "17611:288:12",
													"nodeType": "YulBlock",
													"src": "17611:288:12",
													"statements": [
														{
															"nativeSrc": "17621:26:12",
															"nodeType": "YulAssignment",
															"src": "17621:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17633:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17633:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17644:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17644:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17629:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17629:3:12"
																},
																"nativeSrc": "17629:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17629:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17621:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17621:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17701:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17701:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17714:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17714:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17725:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17725:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17710:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17710:3:12"
																		},
																		"nativeSrc": "17710:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17710:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17657:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17657:43:12"
																},
																"nativeSrc": "17657:71:12",
																"nodeType": "YulFunctionCall",
																"src": "17657:71:12"
															},
															"nativeSrc": "17657:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "17657:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17782:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17782:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17795:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17795:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17806:2:12",
																				"nodeType": "YulLiteral",
																				"src": "17806:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17791:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17791:3:12"
																		},
																		"nativeSrc": "17791:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17791:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17738:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17738:43:12"
																},
																"nativeSrc": "17738:72:12",
																"nodeType": "YulFunctionCall",
																"src": "17738:72:12"
															},
															"nativeSrc": "17738:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "17738:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17864:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17864:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17877:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17877:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17888:2:12",
																				"nodeType": "YulLiteral",
																				"src": "17888:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17873:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17873:3:12"
																		},
																		"nativeSrc": "17873:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17873:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17820:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17820:43:12"
																},
																"nativeSrc": "17820:72:12",
																"nodeType": "YulFunctionCall",
																"src": "17820:72:12"
															},
															"nativeSrc": "17820:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "17820:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17457:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17567:9:12",
														"nodeType": "YulTypedName",
														"src": "17567:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17579:6:12",
														"nodeType": "YulTypedName",
														"src": "17579:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17587:6:12",
														"nodeType": "YulTypedName",
														"src": "17587:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17595:6:12",
														"nodeType": "YulTypedName",
														"src": "17595:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17606:4:12",
														"nodeType": "YulTypedName",
														"src": "17606:4:12",
														"type": ""
													}
												],
												"src": "17457:442:12"
											},
											{
												"body": {
													"nativeSrc": "17970:53:12",
													"nodeType": "YulBlock",
													"src": "17970:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17987:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17987:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18010:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "18010:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "17992:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "17992:17:12"
																		},
																		"nativeSrc": "17992:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17992:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17980:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17980:6:12"
																},
																"nativeSrc": "17980:37:12",
																"nodeType": "YulFunctionCall",
																"src": "17980:37:12"
															},
															"nativeSrc": "17980:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "17980:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "17905:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17958:5:12",
														"nodeType": "YulTypedName",
														"src": "17958:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17965:3:12",
														"nodeType": "YulTypedName",
														"src": "17965:3:12",
														"type": ""
													}
												],
												"src": "17905:118:12"
											},
											{
												"body": {
													"nativeSrc": "18173:275:12",
													"nodeType": "YulBlock",
													"src": "18173:275:12",
													"statements": [
														{
															"nativeSrc": "18183:26:12",
															"nodeType": "YulAssignment",
															"src": "18183:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18195:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18195:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18206:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18206:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18191:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18191:3:12"
																},
																"nativeSrc": "18191:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18191:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18183:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18183:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18263:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18263:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18276:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18276:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18287:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18287:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18272:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18272:3:12"
																		},
																		"nativeSrc": "18272:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18272:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "18219:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18219:43:12"
																},
																"nativeSrc": "18219:71:12",
																"nodeType": "YulFunctionCall",
																"src": "18219:71:12"
															},
															"nativeSrc": "18219:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "18219:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18311:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18311:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18322:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18322:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18307:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18307:3:12"
																		},
																		"nativeSrc": "18307:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18307:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18331:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "18331:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18337:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18337:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18327:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18327:3:12"
																		},
																		"nativeSrc": "18327:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18327:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18300:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18300:6:12"
																},
																"nativeSrc": "18300:48:12",
																"nodeType": "YulFunctionCall",
																"src": "18300:48:12"
															},
															"nativeSrc": "18300:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "18300:48:12"
														},
														{
															"nativeSrc": "18357:84:12",
															"nodeType": "YulAssignment",
															"src": "18357:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18427:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18427:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "18436:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18436:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "18365:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "18365:61:12"
																},
																"nativeSrc": "18365:76:12",
																"nodeType": "YulFunctionCall",
																"src": "18365:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18357:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18357:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "18029:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18137:9:12",
														"nodeType": "YulTypedName",
														"src": "18137:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18149:6:12",
														"nodeType": "YulTypedName",
														"src": "18149:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18157:6:12",
														"nodeType": "YulTypedName",
														"src": "18157:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18168:4:12",
														"nodeType": "YulTypedName",
														"src": "18168:4:12",
														"type": ""
													}
												],
												"src": "18029:419:12"
											},
											{
												"body": {
													"nativeSrc": "18562:278:12",
													"nodeType": "YulBlock",
													"src": "18562:278:12",
													"statements": [
														{
															"nativeSrc": "18572:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "18572:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18618:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "18618:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "18586:31:12",
																	"nodeType": "YulIdentifier",
																	"src": "18586:31:12"
																},
																"nativeSrc": "18586:38:12",
																"nodeType": "YulFunctionCall",
																"src": "18586:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18576:6:12",
																	"nodeType": "YulTypedName",
																	"src": "18576:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18633:95:12",
															"nodeType": "YulAssignment",
															"src": "18633:95:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18716:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18716:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18721:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18721:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18640:75:12",
																	"nodeType": "YulIdentifier",
																	"src": "18640:75:12"
																},
																"nativeSrc": "18640:88:12",
																"nodeType": "YulFunctionCall",
																"src": "18640:88:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18633:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18633:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18776:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "18776:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18783:4:12",
																				"nodeType": "YulLiteral",
																				"src": "18783:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18772:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18772:3:12"
																		},
																		"nativeSrc": "18772:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18772:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18790:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18790:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18795:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18795:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "18737:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "18737:34:12"
																},
																"nativeSrc": "18737:65:12",
																"nodeType": "YulFunctionCall",
																"src": "18737:65:12"
															},
															"nativeSrc": "18737:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "18737:65:12"
														},
														{
															"nativeSrc": "18811:23:12",
															"nodeType": "YulAssignment",
															"src": "18811:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18822:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18822:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18827:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18827:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18818:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18818:3:12"
																},
																"nativeSrc": "18818:16:12",
																"nodeType": "YulFunctionCall",
																"src": "18818:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18811:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18811:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18454:386:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18543:5:12",
														"nodeType": "YulTypedName",
														"src": "18543:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18550:3:12",
														"nodeType": "YulTypedName",
														"src": "18550:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18558:3:12",
														"nodeType": "YulTypedName",
														"src": "18558:3:12",
														"type": ""
													}
												],
												"src": "18454:386:12"
											},
											{
												"body": {
													"nativeSrc": "18980:137:12",
													"nodeType": "YulBlock",
													"src": "18980:137:12",
													"statements": [
														{
															"nativeSrc": "18991:100:12",
															"nodeType": "YulAssignment",
															"src": "18991:100:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19078:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19078:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19087:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19087:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18998:79:12",
																	"nodeType": "YulIdentifier",
																	"src": "18998:79:12"
																},
																"nativeSrc": "18998:93:12",
																"nodeType": "YulFunctionCall",
																"src": "18998:93:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18991:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18991:3:12"
																}
															]
														},
														{
															"nativeSrc": "19101:10:12",
															"nodeType": "YulAssignment",
															"src": "19101:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "19108:3:12",
																"nodeType": "YulIdentifier",
																"src": "19108:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19101:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19101:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "18846:271:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18959:3:12",
														"nodeType": "YulTypedName",
														"src": "18959:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18965:6:12",
														"nodeType": "YulTypedName",
														"src": "18965:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18976:3:12",
														"nodeType": "YulTypedName",
														"src": "18976:3:12",
														"type": ""
													}
												],
												"src": "18846:271:12"
											},
											{
												"body": {
													"nativeSrc": "19186:80:12",
													"nodeType": "YulBlock",
													"src": "19186:80:12",
													"statements": [
														{
															"nativeSrc": "19196:22:12",
															"nodeType": "YulAssignment",
															"src": "19196:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19211:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19211:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19205:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "19205:5:12"
																},
																"nativeSrc": "19205:13:12",
																"nodeType": "YulFunctionCall",
																"src": "19205:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19196:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "19196:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19254:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "19254:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "19227:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "19227:26:12"
																},
																"nativeSrc": "19227:33:12",
																"nodeType": "YulFunctionCall",
																"src": "19227:33:12"
															},
															"nativeSrc": "19227:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "19227:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "19123:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19164:6:12",
														"nodeType": "YulTypedName",
														"src": "19164:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19172:3:12",
														"nodeType": "YulTypedName",
														"src": "19172:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19180:5:12",
														"nodeType": "YulTypedName",
														"src": "19180:5:12",
														"type": ""
													}
												],
												"src": "19123:143:12"
											},
											{
												"body": {
													"nativeSrc": "19349:274:12",
													"nodeType": "YulBlock",
													"src": "19349:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "19395:83:12",
																"nodeType": "YulBlock",
																"src": "19395:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19397:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "19397:77:12"
																			},
																			"nativeSrc": "19397:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "19397:79:12"
																		},
																		"nativeSrc": "19397:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "19397:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19370:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "19370:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19379:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19379:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19366:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19366:3:12"
																		},
																		"nativeSrc": "19366:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19366:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19391:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19391:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19362:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19362:3:12"
																},
																"nativeSrc": "19362:32:12",
																"nodeType": "YulFunctionCall",
																"src": "19362:32:12"
															},
															"nativeSrc": "19359:119:12",
															"nodeType": "YulIf",
															"src": "19359:119:12"
														},
														{
															"nativeSrc": "19488:128:12",
															"nodeType": "YulBlock",
															"src": "19488:128:12",
															"statements": [
																{
																	"nativeSrc": "19503:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19503:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19517:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19517:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19507:6:12",
																			"nodeType": "YulTypedName",
																			"src": "19507:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19532:74:12",
																	"nodeType": "YulAssignment",
																	"src": "19532:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19578:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "19578:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19589:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "19589:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19574:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "19574:3:12"
																				},
																				"nativeSrc": "19574:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "19574:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19598:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "19598:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "19542:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "19542:31:12"
																		},
																		"nativeSrc": "19542:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19542:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19532:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "19532:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "19272:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19319:9:12",
														"nodeType": "YulTypedName",
														"src": "19319:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19330:7:12",
														"nodeType": "YulTypedName",
														"src": "19330:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19342:6:12",
														"nodeType": "YulTypedName",
														"src": "19342:6:12",
														"type": ""
													}
												],
												"src": "19272:351:12"
											},
											{
												"body": {
													"nativeSrc": "19672:43:12",
													"nodeType": "YulBlock",
													"src": "19672:43:12",
													"statements": [
														{
															"nativeSrc": "19682:27:12",
															"nodeType": "YulAssignment",
															"src": "19682:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19697:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "19697:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19704:4:12",
																		"nodeType": "YulLiteral",
																		"src": "19704:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19693:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19693:3:12"
																},
																"nativeSrc": "19693:16:12",
																"nodeType": "YulFunctionCall",
																"src": "19693:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "19682:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "19682:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "19629:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19654:5:12",
														"nodeType": "YulTypedName",
														"src": "19654:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "19664:7:12",
														"nodeType": "YulTypedName",
														"src": "19664:7:12",
														"type": ""
													}
												],
												"src": "19629:86:12"
											},
											{
												"body": {
													"nativeSrc": "19782:51:12",
													"nodeType": "YulBlock",
													"src": "19782:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19799:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19799:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19820:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "19820:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "19804:15:12",
																			"nodeType": "YulIdentifier",
																			"src": "19804:15:12"
																		},
																		"nativeSrc": "19804:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19804:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19792:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19792:6:12"
																},
																"nativeSrc": "19792:35:12",
																"nodeType": "YulFunctionCall",
																"src": "19792:35:12"
															},
															"nativeSrc": "19792:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "19792:35:12"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "19721:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19770:5:12",
														"nodeType": "YulTypedName",
														"src": "19770:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19777:3:12",
														"nodeType": "YulTypedName",
														"src": "19777:3:12",
														"type": ""
													}
												],
												"src": "19721:112:12"
											},
											{
												"body": {
													"nativeSrc": "20017:367:12",
													"nodeType": "YulBlock",
													"src": "20017:367:12",
													"statements": [
														{
															"nativeSrc": "20027:27:12",
															"nodeType": "YulAssignment",
															"src": "20027:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20039:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20039:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20050:3:12",
																		"nodeType": "YulLiteral",
																		"src": "20050:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20035:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20035:3:12"
																},
																"nativeSrc": "20035:19:12",
																"nodeType": "YulFunctionCall",
																"src": "20035:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20027:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20027:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20108:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20108:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20121:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20121:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20132:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20132:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20117:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20117:3:12"
																		},
																		"nativeSrc": "20117:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20117:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "20064:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20064:43:12"
																},
																"nativeSrc": "20064:71:12",
																"nodeType": "YulFunctionCall",
																"src": "20064:71:12"
															},
															"nativeSrc": "20064:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "20064:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20185:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20185:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20198:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20198:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20209:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20209:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20194:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20194:3:12"
																		},
																		"nativeSrc": "20194:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20194:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "20145:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "20145:39:12"
																},
																"nativeSrc": "20145:68:12",
																"nodeType": "YulFunctionCall",
																"src": "20145:68:12"
															},
															"nativeSrc": "20145:68:12",
															"nodeType": "YulExpressionStatement",
															"src": "20145:68:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20267:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20267:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20280:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20280:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20291:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20291:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20276:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20276:3:12"
																		},
																		"nativeSrc": "20276:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20276:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "20223:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20223:43:12"
																},
																"nativeSrc": "20223:72:12",
																"nodeType": "YulFunctionCall",
																"src": "20223:72:12"
															},
															"nativeSrc": "20223:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "20223:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "20349:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20349:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20362:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20362:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20373:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20373:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20358:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20358:3:12"
																		},
																		"nativeSrc": "20358:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20358:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "20305:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20305:43:12"
																},
																"nativeSrc": "20305:72:12",
																"nodeType": "YulFunctionCall",
																"src": "20305:72:12"
															},
															"nativeSrc": "20305:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "20305:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "19839:545:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19965:9:12",
														"nodeType": "YulTypedName",
														"src": "19965:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19977:6:12",
														"nodeType": "YulTypedName",
														"src": "19977:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19985:6:12",
														"nodeType": "YulTypedName",
														"src": "19985:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19993:6:12",
														"nodeType": "YulTypedName",
														"src": "19993:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20001:6:12",
														"nodeType": "YulTypedName",
														"src": "20001:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20012:4:12",
														"nodeType": "YulTypedName",
														"src": "20012:4:12",
														"type": ""
													}
												],
												"src": "19839:545:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e(memPtr) {\n\n        mstore(add(memPtr, 0), \"not owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not token owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x7D6AD95D EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x177 JUMPI PUSH2 0x60 JUMP JUMPDEST CALLDATASIZE PUSH2 0x60 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x87 SWAP2 SWAP1 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0xC6E JUMP JUMPDEST PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x26F JUMPI POP PUSH32 0xEFF4D37800000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x28B PUSH2 0x284 PUSH2 0x3C4 JUMP JUMPDEST DUP6 DUP6 PUSH2 0x62D JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH4 0x1626BA7E PUSH1 0xE0 SHL SWAP2 POP POP PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B9 PUSH2 0x3C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31D SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x363 SWAP3 SWAP2 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x382 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3B7 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x415 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP CHAINID DUP4 EQ PUSH2 0x452 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x4D2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x113C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CC SWAP2 SWAP1 PUSH2 0x1157 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4DF PUSH2 0x3C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x543 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x576 SWAP3 SWAP2 SWAP1 PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP1 PUSH2 0x5CE JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD REVERT JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SWAP1 POP PUSH2 0x60E ADDRESS PUSH1 0x60 DUP4 PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST DUP4 PUSH2 0x6BC JUMP JUMPDEST DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x12DA JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x63C DUP6 DUP6 PUSH2 0x7A1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x654 JUMPI PUSH2 0x653 PUSH2 0x132D JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x667 JUMPI PUSH2 0x666 PUSH2 0x132D JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x69F JUMPI POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x6B1 JUMPI POP PUSH2 0x6B0 DUP7 DUP7 DUP7 PUSH2 0x7F2 JUMP JUMPDEST JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x6C9 DUP6 PUSH2 0x936 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x6EB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP PUSH2 0x79A JUMP JUMPDEST DUP1 DUP5 GT ISZERO PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP2 POP POP PUSH2 0x79A JUMP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x754 JUMPI DUP1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x2C4A89FA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x135C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SUB SWAP1 POP PUSH1 0x0 DUP6 DUP4 SUB SWAP1 POP PUSH1 0x0 DUP3 DUP3 LT PUSH2 0x771 JUMPI DUP3 PUSH2 0x773 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD SWAP5 POP PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 DUP4 ADD ADD AND DUP6 ADD PUSH1 0x40 MSTORE DUP1 DUP6 MSTORE DUP1 DUP8 PUSH1 0x20 DUP8 ADD DUP11 EXTCODECOPY POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD SUB PUSH2 0x7E2 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x7D6 DUP8 DUP3 DUP6 DUP6 PUSH2 0x941 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1626BA7E PUSH1 0xE0 SHL DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x829 SWAP3 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x893 SWAP2 SWAP1 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x8E7 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x92B JUMPI POP PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x929 SWAP2 SWAP1 PUSH2 0x142F JUMP JUMPDEST EQ JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x97C JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x9A1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA11 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0xA1A JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA6C DUP2 PUSH2 0xA37 JUMP JUMPDEST DUP2 EQ PUSH2 0xA77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA89 DUP2 PUSH2 0xA63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA5 JUMPI PUSH2 0xAA4 PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAB3 DUP5 DUP3 DUP6 ADD PUSH2 0xA7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD1 DUP2 PUSH2 0xABC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAEC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0xAF2 JUMP JUMPDEST DUP2 EQ PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB22 DUP2 PUSH2 0xAFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB7B DUP3 PUSH2 0xB32 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0xB43 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAD PUSH2 0xA23 JUMP JUMPDEST SWAP1 POP PUSH2 0xBB9 DUP3 DUP3 PUSH2 0xB72 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xBD9 JUMPI PUSH2 0xBD8 PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH2 0xBE2 DUP3 PUSH2 0xB32 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC11 PUSH2 0xC0C DUP5 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xC2D JUMPI PUSH2 0xC2C PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH2 0xC38 DUP5 DUP3 DUP6 PUSH2 0xBEF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC55 JUMPI PUSH2 0xC54 PUSH2 0xB28 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC65 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC85 JUMPI PUSH2 0xC84 PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC93 DUP6 DUP3 DUP7 ADD PUSH2 0xB13 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCB4 JUMPI PUSH2 0xCB3 PUSH2 0xA32 JUMP JUMPDEST JUMPDEST PUSH2 0xCC0 DUP6 DUP3 DUP7 ADD PUSH2 0xC40 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0xA37 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1F DUP3 PUSH2 0xCF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD2F DUP2 PUSH2 0xD14 JUMP JUMPDEST DUP2 EQ PUSH2 0xD3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD4C DUP2 PUSH2 0xD26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD65 DUP2 PUSH2 0xD52 JUMP JUMPDEST DUP2 EQ PUSH2 0xD70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD82 DUP2 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDAF DUP7 DUP3 DUP8 ADD PUSH2 0xD3D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xDC0 DUP7 DUP3 DUP8 ADD PUSH2 0xD3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xDD1 DUP7 DUP3 DUP8 ADD PUSH2 0xD73 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xDE4 DUP2 PUSH2 0xD14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE25 JUMPI PUSH2 0xE24 PUSH2 0xB28 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE42 JUMPI PUSH2 0xE41 PUSH2 0xE05 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE5E JUMPI PUSH2 0xE5D PUSH2 0xE0A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE7F JUMPI PUSH2 0xE7E PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE8D DUP8 DUP3 DUP9 ADD PUSH2 0xD3D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xE9E DUP8 DUP3 DUP9 ADD PUSH2 0xD73 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xA32 JUMP JUMPDEST JUMPDEST PUSH2 0xECB DUP8 DUP3 DUP9 ADD PUSH2 0xE0F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF13 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2A DUP3 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xF34 DUP2 DUP6 PUSH2 0xEE4 JUMP JUMPDEST SWAP4 POP PUSH2 0xF44 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0xF4D DUP2 PUSH2 0xB32 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF72 DUP2 DUP5 PUSH2 0xF1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF83 DUP2 PUSH2 0xD52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF9E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0xFAB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0xFB8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1007 PUSH1 0x9 DUP4 PUSH2 0xFC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1012 DUP3 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1036 DUP2 PUSH2 0xFFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1052 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x105F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x106F DUP2 PUSH2 0xABC JUMP JUMPDEST DUP2 EQ PUSH2 0x107A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x108C DUP2 PUSH2 0x1066 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10A8 JUMPI PUSH2 0x10A7 PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10B6 DUP5 DUP3 DUP6 ADD PUSH2 0x107D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10CE DUP2 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10E3 DUP2 PUSH2 0xD26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1102 JUMPI PUSH2 0x1101 PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1110 DUP7 DUP3 DUP8 ADD PUSH2 0x10BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1121 DUP7 DUP3 DUP8 ADD PUSH2 0x10D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1132 DUP7 DUP3 DUP8 ADD PUSH2 0x10BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1151 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x116D JUMPI PUSH2 0x116C PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x117B DUP5 DUP3 DUP6 ADD PUSH2 0x10D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746F6B656E206F776E65720000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BA PUSH1 0xF DUP4 PUSH2 0xFC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x11C5 DUP3 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11E9 DUP2 PUSH2 0x11AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1207 DUP4 DUP6 PUSH2 0x11F0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1214 DUP4 DUP6 DUP5 PUSH2 0xBEF JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x122D DUP3 DUP5 DUP7 PUSH2 0x11FB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1273 DUP3 PUSH2 0xD52 JUMP JUMPDEST SWAP2 POP PUSH2 0x127E DUP4 PUSH2 0xD52 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1296 JUMPI PUSH2 0x1295 PUSH2 0x1239 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A7 DUP3 PUSH2 0xCF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B7 DUP2 PUSH2 0x129C JUMP JUMPDEST DUP2 EQ PUSH2 0x12C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12D4 DUP2 PUSH2 0x12AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12F3 JUMPI PUSH2 0x12F2 PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1301 DUP7 DUP3 DUP8 ADD PUSH2 0x10BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1312 DUP7 DUP3 DUP8 ADD PUSH2 0x12C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1323 DUP7 DUP3 DUP8 ADD PUSH2 0x10BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1371 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x137E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x138B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x139C DUP2 PUSH2 0xAF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13B7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1393 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x13C9 DUP2 DUP5 PUSH2 0xF1F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13DD DUP3 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0x13E7 DUP2 DUP6 PUSH2 0x11F0 JUMP JUMPDEST SWAP4 POP PUSH2 0x13F7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEF5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140F DUP3 DUP5 PUSH2 0x13D2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1429 DUP2 PUSH2 0xAFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1445 JUMPI PUSH2 0x1444 PUSH2 0xA2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1453 DUP5 DUP3 DUP6 ADD PUSH2 0x141A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1472 DUP2 PUSH2 0x145C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x148D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x149A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x14A7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x14B4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 REVERT DUP9 CREATE 0xB6 PUSH21 0xD8295138C5498F836E73E2DEE0514633A9A2B29FE GT 0x22 CREATE POP LOG4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "398:2171:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1974:204;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2184:383;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1337:362;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1705:263;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;508:418;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;932:399;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1974:204;2042:4;2081:25;2066:40;;;:11;:40;;;;:104;;;;2137:33;2122:48;;;:11;:48;;;;2066:104;2058:113;;1974:204;;;:::o;2184:383::-;2295:17;2328:12;2343:108;2393:7;:5;:7::i;:::-;2414:4;2432:9;2343:36;:108::i;:::-;2328:123;;2466:7;2462:79;;;2496:34;;;2489:41;;;;;2462:79;2551:9;;;;2184:383;;;;;:::o;1337:362::-;1469:4;1507:7;:5;:7::i;:::-;1493:21;;:10;:21;;;1485:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;1538:12;1577:10;1570:27;;;1598:3;1603:7;1570:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1560:51;;1626:7;1621:51;;1656:5;1649:12;;;;;1621:51;1688:4;1681:11;;;1337:362;;;;;;:::o;1705:263::-;1743:7;1763:15;1780:21;1803:15;1822:4;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1762:85;;;;;;1872:13;1861:7;:24;1857:47;;1902:1;1887:17;;;;;;;1857:47;1930:13;1922:30;;;1953:7;1922:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1915:46;;;;;1705:263;;:::o;508:418::-;633:19;685:7;:5;:7::i;:::-;672:20;;:9;:20;;;664:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;723:12;765:2;:7;;780:5;787:4;;765:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;745:47;;;;;;;;808:7;803:117;;888:6;882:13;877:2;869:6;865:15;858:38;803:117;654:272;508:418;;;;;;:::o;932:399::-;1009:15;1038:21;1073:15;1113:14;1138:4;1130:25;;;1113:42;;1212:53;1236:4;1252;1243:6;:13;;;;:::i;:::-;1258:6;1212:15;:53::i;:::-;1184:140;;;;;;;;;;;;:::i;:::-;1165:159;;;;;;;932:399;;;:::o;1014:366:5:-;1120:4;1137:17;1156:24;1184:33;1201:4;1207:9;1184:16;:33::i;:::-;1136:81;;;;1256:26;1247:35;;;;;;;;:::i;:::-;;:5;:35;;;;;;;;:::i;:::-;;;:58;;;;;1299:6;1286:19;;:9;:19;;;1247:58;1246:127;;;;1322:51;1349:6;1357:4;1363:9;1322:26;:51::i;:::-;1246:127;1227:146;;;;1014:366;;;;;:::o;1793:946:9:-;1877:18;1903:13;1919:15;1928:5;1919:8;:15::i;:::-;1903:31;;1953:1;1944:5;:10;1940:32;;1963:9;;;;;;;;;;;;1956:16;;;;;1940:32;1992:5;1983:6;:14;1979:36;;;2006:9;;;;;;;;;;;;1999:16;;;;;1979:36;2032:6;2025:4;:13;2021:65;;;2066:5;2073:6;2081:4;2047:39;;;;;;;;;;;;;:::i;:::-;;;;;;;;2021:65;2112:15;2137:6;2130:4;:13;2112:31;;2151:15;2177:6;2169:5;:14;2151:32;;2192:12;2217:7;2207;:17;:37;;2237:7;2207:37;;;2227:7;2207:37;2192:52;;2413:4;2407:11;2398:20;;2533:4;2529:9;2522:4;2515;2509;2505:15;2501:26;2497:42;2490:5;2486:54;2480:4;2473:68;2598:4;2591:5;2584:19;2716:4;2708:6;2701:4;2694:5;2690:16;2683:5;2671:50;2262:467;;;1897:842;1793:946;;;;;;:::o;2145:730:4:-;2226:7;2235:12;2283:2;2263:9;:16;:22;2259:610;;2301:9;2324;2347:7;2599:4;2588:9;2584:20;2578:27;2573:32;;2648:4;2637:9;2633:20;2627:27;2622:32;;2705:4;2694:9;2690:20;2684:27;2681:1;2676:36;2671:41;;2746:25;2757:4;2763:1;2766;2769;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;2818:1;2822:35;2802:56;;;;2145:730;;;;;;:::o;1786:473:5:-;1929:4;1946:12;1960:19;1983:6;:17;;2037:34;;;2073:4;2079:9;2014:75;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:116;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:154;;;;2117:7;:42;;;;;2157:2;2140:6;:13;:19;;2117:42;:134;;;;;2216:34;;;2208:43;;;2186:6;2175:29;;;;;;;;;;;;:::i;:::-;:76;2117:134;2109:143;;;;1786:473;;;;;:::o;1261:119:9:-;1317:12;1368:5;1356:18;1348:26;;1261:119;;;:::o;5009:1456:4:-;5097:7;5106:12;6021:66;6016:1;6008:10;;:79;6004:161;;;6119:1;6123:30;6103:51;;;;;;6004:161;6259:14;6276:24;6286:4;6292:1;6295;6298;6276:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6259:41;;6332:1;6314:20;;:6;:20;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;6437:20;6421:37;;;;;5009:1456;;;;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:117::-;1983:1;1980;1973:12;1997:117;2106:1;2103;2096:12;2120:102;2161:6;2212:2;2208:7;2203:2;2196:5;2192:14;2188:28;2178:38;;2120:102;;;:::o;2228:180::-;2276:77;2273:1;2266:88;2373:4;2370:1;2363:15;2397:4;2394:1;2387:15;2414:281;2497:27;2519:4;2497:27;:::i;:::-;2489:6;2485:40;2627:6;2615:10;2612:22;2591:18;2579:10;2576:34;2573:62;2570:88;;;2638:18;;:::i;:::-;2570:88;2678:10;2674:2;2667:22;2457:238;2414:281;;:::o;2701:129::-;2735:6;2762:20;;:::i;:::-;2752:30;;2791:33;2819:4;2811:6;2791:33;:::i;:::-;2701:129;;;:::o;2836:307::-;2897:4;2987:18;2979:6;2976:30;2973:56;;;3009:18;;:::i;:::-;2973:56;3047:29;3069:6;3047:29;:::i;:::-;3039:37;;3131:4;3125;3121:15;3113:23;;2836:307;;;:::o;3149:146::-;3246:6;3241:3;3236;3223:30;3287:1;3278:6;3273:3;3269:16;3262:27;3149:146;;;:::o;3301:423::-;3378:5;3403:65;3419:48;3460:6;3419:48;:::i;:::-;3403:65;:::i;:::-;3394:74;;3491:6;3484:5;3477:21;3529:4;3522:5;3518:16;3567:3;3558:6;3553:3;3549:16;3546:25;3543:112;;;3574:79;;:::i;:::-;3543:112;3664:54;3711:6;3706:3;3701;3664:54;:::i;:::-;3384:340;3301:423;;;;;:::o;3743:338::-;3798:5;3847:3;3840:4;3832:6;3828:17;3824:27;3814:122;;3855:79;;:::i;:::-;3814:122;3972:6;3959:20;3997:78;4071:3;4063:6;4056:4;4048:6;4044:17;3997:78;:::i;:::-;3988:87;;3804:277;3743:338;;;;:::o;4087:652::-;4164:6;4172;4221:2;4209:9;4200:7;4196:23;4192:32;4189:119;;;4227:79;;:::i;:::-;4189:119;4347:1;4372:53;4417:7;4408:6;4397:9;4393:22;4372:53;:::i;:::-;4362:63;;4318:117;4502:2;4491:9;4487:18;4474:32;4533:18;4525:6;4522:30;4519:117;;;4555:79;;:::i;:::-;4519:117;4660:62;4714:7;4705:6;4694:9;4690:22;4660:62;:::i;:::-;4650:72;;4445:287;4087:652;;;;;:::o;4745:115::-;4830:23;4847:5;4830:23;:::i;:::-;4825:3;4818:36;4745:115;;:::o;4866:218::-;4957:4;4995:2;4984:9;4980:18;4972:26;;5008:69;5074:1;5063:9;5059:17;5050:6;5008:69;:::i;:::-;4866:218;;;;:::o;5090:126::-;5127:7;5167:42;5160:5;5156:54;5145:65;;5090:126;;;:::o;5222:96::-;5259:7;5288:24;5306:5;5288:24;:::i;:::-;5277:35;;5222:96;;;:::o;5324:122::-;5397:24;5415:5;5397:24;:::i;:::-;5390:5;5387:35;5377:63;;5436:1;5433;5426:12;5377:63;5324:122;:::o;5452:139::-;5498:5;5536:6;5523:20;5514:29;;5552:33;5579:5;5552:33;:::i;:::-;5452:139;;;;:::o;5597:77::-;5634:7;5663:5;5652:16;;5597:77;;;:::o;5680:122::-;5753:24;5771:5;5753:24;:::i;:::-;5746:5;5743:35;5733:63;;5792:1;5789;5782:12;5733:63;5680:122;:::o;5808:139::-;5854:5;5892:6;5879:20;5870:29;;5908:33;5935:5;5908:33;:::i;:::-;5808:139;;;;:::o;5953:619::-;6030:6;6038;6046;6095:2;6083:9;6074:7;6070:23;6066:32;6063:119;;;6101:79;;:::i;:::-;6063:119;6221:1;6246:53;6291:7;6282:6;6271:9;6267:22;6246:53;:::i;:::-;6236:63;;6192:117;6348:2;6374:53;6419:7;6410:6;6399:9;6395:22;6374:53;:::i;:::-;6364:63;;6319:118;6476:2;6502:53;6547:7;6538:6;6527:9;6523:22;6502:53;:::i;:::-;6492:63;;6447:118;5953:619;;;;;:::o;6578:118::-;6665:24;6683:5;6665:24;:::i;:::-;6660:3;6653:37;6578:118;;:::o;6702:222::-;6795:4;6833:2;6822:9;6818:18;6810:26;;6846:71;6914:1;6903:9;6899:17;6890:6;6846:71;:::i;:::-;6702:222;;;;:::o;6930:117::-;7039:1;7036;7029:12;7053:117;7162:1;7159;7152:12;7189:552;7246:8;7256:6;7306:3;7299:4;7291:6;7287:17;7283:27;7273:122;;7314:79;;:::i;:::-;7273:122;7427:6;7414:20;7404:30;;7457:18;7449:6;7446:30;7443:117;;;7479:79;;:::i;:::-;7443:117;7593:4;7585:6;7581:17;7569:29;;7647:3;7639:4;7631:6;7627:17;7617:8;7613:32;7610:41;7607:128;;;7654:79;;:::i;:::-;7607:128;7189:552;;;;;:::o;7747:817::-;7835:6;7843;7851;7859;7908:2;7896:9;7887:7;7883:23;7879:32;7876:119;;;7914:79;;:::i;:::-;7876:119;8034:1;8059:53;8104:7;8095:6;8084:9;8080:22;8059:53;:::i;:::-;8049:63;;8005:117;8161:2;8187:53;8232:7;8223:6;8212:9;8208:22;8187:53;:::i;:::-;8177:63;;8132:118;8317:2;8306:9;8302:18;8289:32;8348:18;8340:6;8337:30;8334:117;;;8370:79;;:::i;:::-;8334:117;8483:64;8539:7;8530:6;8519:9;8515:22;8483:64;:::i;:::-;8465:82;;;;8260:297;7747:817;;;;;;;:::o;8570:98::-;8621:6;8655:5;8649:12;8639:22;;8570:98;;;:::o;8674:168::-;8757:11;8791:6;8786:3;8779:19;8831:4;8826:3;8822:14;8807:29;;8674:168;;;;:::o;8848:246::-;8929:1;8939:113;8953:6;8950:1;8947:13;8939:113;;;9038:1;9033:3;9029:11;9023:18;9019:1;9014:3;9010:11;9003:39;8975:2;8972:1;8968:10;8963:15;;8939:113;;;9086:1;9077:6;9072:3;9068:16;9061:27;8910:184;8848:246;;;:::o;9100:373::-;9186:3;9214:38;9246:5;9214:38;:::i;:::-;9268:70;9331:6;9326:3;9268:70;:::i;:::-;9261:77;;9347:65;9405:6;9400:3;9393:4;9386:5;9382:16;9347:65;:::i;:::-;9437:29;9459:6;9437:29;:::i;:::-;9432:3;9428:39;9421:46;;9190:283;9100:373;;;;:::o;9479:309::-;9590:4;9628:2;9617:9;9613:18;9605:26;;9677:9;9671:4;9667:20;9663:1;9652:9;9648:17;9641:47;9705:76;9776:4;9767:6;9705:76;:::i;:::-;9697:84;;9479:309;;;;:::o;9794:118::-;9881:24;9899:5;9881:24;:::i;:::-;9876:3;9869:37;9794:118;;:::o;9918:442::-;10067:4;10105:2;10094:9;10090:18;10082:26;;10118:71;10186:1;10175:9;10171:17;10162:6;10118:71;:::i;:::-;10199:72;10267:2;10256:9;10252:18;10243:6;10199:72;:::i;:::-;10281;10349:2;10338:9;10334:18;10325:6;10281:72;:::i;:::-;9918:442;;;;;;:::o;10366:169::-;10450:11;10484:6;10479:3;10472:19;10524:4;10519:3;10515:14;10500:29;;10366:169;;;;:::o;10541:159::-;10681:11;10677:1;10669:6;10665:14;10658:35;10541:159;:::o;10706:365::-;10848:3;10869:66;10933:1;10928:3;10869:66;:::i;:::-;10862:73;;10944:93;11033:3;10944:93;:::i;:::-;11062:2;11057:3;11053:12;11046:19;;10706:365;;;:::o;11077:419::-;11243:4;11281:2;11270:9;11266:18;11258:26;;11330:9;11324:4;11320:20;11316:1;11305:9;11301:17;11294:47;11358:131;11484:4;11358:131;:::i;:::-;11350:139;;11077:419;;;:::o;11502:332::-;11623:4;11661:2;11650:9;11646:18;11638:26;;11674:71;11742:1;11731:9;11727:17;11718:6;11674:71;:::i;:::-;11755:72;11823:2;11812:9;11808:18;11799:6;11755:72;:::i;:::-;11502:332;;;;;:::o;11840:116::-;11910:21;11925:5;11910:21;:::i;:::-;11903:5;11900:32;11890:60;;11946:1;11943;11936:12;11890:60;11840:116;:::o;11962:137::-;12016:5;12047:6;12041:13;12032:22;;12063:30;12087:5;12063:30;:::i;:::-;11962:137;;;;:::o;12105:345::-;12172:6;12221:2;12209:9;12200:7;12196:23;12192:32;12189:119;;;12227:79;;:::i;:::-;12189:119;12347:1;12372:61;12425:7;12416:6;12405:9;12401:22;12372:61;:::i;:::-;12362:71;;12318:125;12105:345;;;;:::o;12456:143::-;12513:5;12544:6;12538:13;12529:22;;12560:33;12587:5;12560:33;:::i;:::-;12456:143;;;;:::o;12605:::-;12662:5;12693:6;12687:13;12678:22;;12709:33;12736:5;12709:33;:::i;:::-;12605:143;;;;:::o;12754:663::-;12842:6;12850;12858;12907:2;12895:9;12886:7;12882:23;12878:32;12875:119;;;12913:79;;:::i;:::-;12875:119;13033:1;13058:64;13114:7;13105:6;13094:9;13090:22;13058:64;:::i;:::-;13048:74;;13004:128;13171:2;13197:64;13253:7;13244:6;13233:9;13229:22;13197:64;:::i;:::-;13187:74;;13142:129;13310:2;13336:64;13392:7;13383:6;13372:9;13368:22;13336:64;:::i;:::-;13326:74;;13281:129;12754:663;;;;;:::o;13423:222::-;13516:4;13554:2;13543:9;13539:18;13531:26;;13567:71;13635:1;13624:9;13620:17;13611:6;13567:71;:::i;:::-;13423:222;;;;:::o;13651:351::-;13721:6;13770:2;13758:9;13749:7;13745:23;13741:32;13738:119;;;13776:79;;:::i;:::-;13738:119;13896:1;13921:64;13977:7;13968:6;13957:9;13953:22;13921:64;:::i;:::-;13911:74;;13867:128;13651:351;;;;:::o;14008:165::-;14148:17;14144:1;14136:6;14132:14;14125:41;14008:165;:::o;14179:366::-;14321:3;14342:67;14406:2;14401:3;14342:67;:::i;:::-;14335:74;;14418:93;14507:3;14418:93;:::i;:::-;14536:2;14531:3;14527:12;14520:19;;14179:366;;;:::o;14551:419::-;14717:4;14755:2;14744:9;14740:18;14732:26;;14804:9;14798:4;14794:20;14790:1;14779:9;14775:17;14768:47;14832:131;14958:4;14832:131;:::i;:::-;14824:139;;14551:419;;;:::o;14976:147::-;15077:11;15114:3;15099:18;;14976:147;;;;:::o;15151:327::-;15265:3;15286:88;15367:6;15362:3;15286:88;:::i;:::-;15279:95;;15384:56;15433:6;15428:3;15421:5;15384:56;:::i;:::-;15465:6;15460:3;15456:16;15449:23;;15151:327;;;;;:::o;15484:291::-;15624:3;15646:103;15745:3;15736:6;15728;15646:103;:::i;:::-;15639:110;;15766:3;15759:10;;15484:291;;;;;:::o;15781:180::-;15829:77;15826:1;15819:88;15926:4;15923:1;15916:15;15950:4;15947:1;15940:15;15967:194;16007:4;16027:20;16045:1;16027:20;:::i;:::-;16022:25;;16061:20;16079:1;16061:20;:::i;:::-;16056:25;;16105:1;16102;16098:9;16090:17;;16129:1;16123:4;16120:11;16117:37;;;16134:18;;:::i;:::-;16117:37;15967:194;;;;:::o;16167:104::-;16212:7;16241:24;16259:5;16241:24;:::i;:::-;16230:35;;16167:104;;;:::o;16277:138::-;16358:32;16384:5;16358:32;:::i;:::-;16351:5;16348:43;16338:71;;16405:1;16402;16395:12;16338:71;16277:138;:::o;16421:159::-;16486:5;16517:6;16511:13;16502:22;;16533:41;16568:5;16533:41;:::i;:::-;16421:159;;;;:::o;16586:679::-;16682:6;16690;16698;16747:2;16735:9;16726:7;16722:23;16718:32;16715:119;;;16753:79;;:::i;:::-;16715:119;16873:1;16898:64;16954:7;16945:6;16934:9;16930:22;16898:64;:::i;:::-;16888:74;;16844:128;17011:2;17037:72;17101:7;17092:6;17081:9;17077:22;17037:72;:::i;:::-;17027:82;;16982:137;17158:2;17184:64;17240:7;17231:6;17220:9;17216:22;17184:64;:::i;:::-;17174:74;;17129:129;16586:679;;;;;:::o;17271:180::-;17319:77;17316:1;17309:88;17416:4;17413:1;17406:15;17440:4;17437:1;17430:15;17457:442;17606:4;17644:2;17633:9;17629:18;17621:26;;17657:71;17725:1;17714:9;17710:17;17701:6;17657:71;:::i;:::-;17738:72;17806:2;17795:9;17791:18;17782:6;17738:72;:::i;:::-;17820;17888:2;17877:9;17873:18;17864:6;17820:72;:::i;:::-;17457:442;;;;;;:::o;17905:118::-;17992:24;18010:5;17992:24;:::i;:::-;17987:3;17980:37;17905:118;;:::o;18029:419::-;18168:4;18206:2;18195:9;18191:18;18183:26;;18219:71;18287:1;18276:9;18272:17;18263:6;18219:71;:::i;:::-;18337:9;18331:4;18327:20;18322:2;18311:9;18307:18;18300:48;18365:76;18436:4;18427:6;18365:76;:::i;:::-;18357:84;;18029:419;;;;;:::o;18454:386::-;18558:3;18586:38;18618:5;18586:38;:::i;:::-;18640:88;18721:6;18716:3;18640:88;:::i;:::-;18633:95;;18737:65;18795:6;18790:3;18783:4;18776:5;18772:16;18737:65;:::i;:::-;18827:6;18822:3;18818:16;18811:23;;18562:278;18454:386;;;;:::o;18846:271::-;18976:3;18998:93;19087:3;19078:6;18998:93;:::i;:::-;18991:100;;19108:3;19101:10;;18846:271;;;;:::o;19123:143::-;19180:5;19211:6;19205:13;19196:22;;19227:33;19254:5;19227:33;:::i;:::-;19123:143;;;;:::o;19272:351::-;19342:6;19391:2;19379:9;19370:7;19366:23;19362:32;19359:119;;;19397:79;;:::i;:::-;19359:119;19517:1;19542:64;19598:7;19589:6;19578:9;19574:22;19542:64;:::i;:::-;19532:74;;19488:128;19272:351;;;;:::o;19629:86::-;19664:7;19704:4;19697:5;19693:16;19682:27;;19629:86;;;:::o;19721:112::-;19804:22;19820:5;19804:22;:::i;:::-;19799:3;19792:35;19721:112;;:::o;19839:545::-;20012:4;20050:3;20039:9;20035:19;20027:27;;20064:71;20132:1;20121:9;20117:17;20108:6;20064:71;:::i;:::-;20145:68;20209:2;20198:9;20194:18;20185:6;20145:68;:::i;:::-;20223:72;20291:2;20280:9;20276:18;20267:6;20223:72;:::i;:::-;20305;20373:2;20362:9;20358:18;20349:6;20305:72;:::i;:::-;19839:545;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1072600",
								"executionCost": "1114",
								"totalCost": "1073714"
							},
							"external": {
								"executeCall(address,uint256,bytes)": "infinite",
								"executeCallTransferToken(address,address,uint256)": "infinite",
								"isValidSignature(bytes32,bytes)": "infinite",
								"owner()": "infinite",
								"supportsInterface(bytes4)": "662",
								"token()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 398,
									"end": 2569,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 2569,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122029fd88f0b6740d8295138c5498f836e73e2dee0514633a9a2b29fe1122f050a464736f6c63430008150033",
									".code": [
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH",
											"source": 10,
											"value": "1626BA7E"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH",
											"source": 10,
											"value": "7D6AD95D"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH",
											"source": 10,
											"value": "9E5D4C49"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH",
											"source": 10,
											"value": "FC0C546A"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 398,
											"end": 2569,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1974,
											"end": 2178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1974,
											"end": 2178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1974,
											"end": 2178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2184,
											"end": 2567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 2184,
											"end": 2567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2184,
											"end": 2567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1337,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1337,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1337,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1705,
											"end": 1968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 1705,
											"end": 1968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 508,
											"end": 926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 508,
											"end": 926,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 508,
											"end": 926,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 508,
											"end": 926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 508,
											"end": 926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 508,
											"end": 926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 508,
											"end": 926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 508,
											"end": 926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 926,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 508,
											"end": 926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 926,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 932,
											"end": 1331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 932,
											"end": 1331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2106,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2066,
											"end": 2106,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2066,
											"end": 2106,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2106,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2077,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2106,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2066,
											"end": 2106,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2106,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2106,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2170,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2066,
											"end": 2170,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2170,
											"name": "PUSH",
											"source": 10,
											"value": "EFF4D37800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2122,
											"end": 2170,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2122,
											"end": 2170,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2170,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2133,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2170,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2122,
											"end": 2170,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2170,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2170,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2170,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2066,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2058,
											"end": 2171,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2058,
											"end": 2171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2295,
											"end": 2312,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2340,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2393,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2393,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 2393,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2393,
											"end": 2400,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2393,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2414,
											"end": 2418,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2441,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 2343,
											"end": 2451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2451,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2343,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2496,
											"end": 2530,
											"name": "PUSH",
											"source": 10,
											"value": "1626BA7E"
										},
										{
											"begin": 2496,
											"end": 2530,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2496,
											"end": 2530,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2530,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 2489,
											"end": 2530,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2560,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1507,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1507,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1507,
											"end": 1514,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1507,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1514,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1493,
											"end": 1514,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1503,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1514,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1493,
											"end": 1514,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1514,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1485,
											"end": 1528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1485,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1587,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1597,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1570,
											"end": 1597,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1597,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 1598,
											"end": 1601,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1610,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1570,
											"end": 1611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1570,
											"end": 1611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1633,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1621,
											"end": 1672,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1656,
											"end": 1661,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1661,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1649,
											"end": 1661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1649,
											"end": 1661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1649,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1649,
											"end": 1661,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1672,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1621,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1688,
											"end": 1692,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1743,
											"end": 1750,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1778,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 1801,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1818,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1826,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "PUSH",
											"source": 10,
											"value": "FC0C546A"
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 1822,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 1822,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1762,
											"end": 1847,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1762,
											"end": 1847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1762,
											"end": 1847,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1762,
											"end": 1847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1762,
											"end": 1847,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1762,
											"end": 1847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "CHAINID",
											"source": 10
										},
										{
											"begin": 1861,
											"end": 1868,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1861,
											"end": 1885,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1857,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 1857,
											"end": 1904,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1902,
											"end": 1903,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1904,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 1904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 1904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 1904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 1904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1887,
											"end": 1904,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1857,
											"end": 1904,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 1857,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1930,
											"end": 1943,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1922,
											"end": 1952,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "6352211E"
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 1922,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1922,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1922,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1961,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 508,
											"end": 926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 633,
											"end": 652,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 685,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 685,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 685,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 685,
											"end": 692,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 685,
											"end": 692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 672,
											"end": 681,
											"name": "ORIGIN",
											"source": 10
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 672,
											"end": 692,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 664,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 664,
											"end": 712,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 664,
											"end": 712,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 712,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 664,
											"end": 712,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 664,
											"end": 712,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 664,
											"end": 712,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 664,
											"end": 712,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 664,
											"end": 712,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 664,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 664,
											"end": 712,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 664,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 664,
											"end": 712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 664,
											"end": 712,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 664,
											"end": 712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 664,
											"end": 712,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 712,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 664,
											"end": 712,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 664,
											"end": 712,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 664,
											"end": 712,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 664,
											"end": 712,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 664,
											"end": 712,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 664,
											"end": 712,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 664,
											"end": 712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 723,
											"end": 735,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 767,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 765,
											"end": 772,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 765,
											"end": 772,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 780,
											"end": 785,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 787,
											"end": 791,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 787,
											"end": 791,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 792,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 765,
											"end": 792,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 765,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 765,
											"end": 792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 792,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 792,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 792,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 765,
											"end": 792,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 792,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 765,
											"end": 792,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 765,
											"end": 792,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 792,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 792,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 765,
											"end": 792,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 765,
											"end": 792,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 765,
											"end": 792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 765,
											"end": 792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 765,
											"end": 792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 765,
											"end": 792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 745,
											"end": 792,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 745,
											"end": 792,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 745,
											"end": 792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 745,
											"end": 792,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 745,
											"end": 792,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 745,
											"end": 792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 745,
											"end": 792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 745,
											"end": 792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 808,
											"end": 815,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 803,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 803,
											"end": 920,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 888,
											"end": 894,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 882,
											"end": 895,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 877,
											"end": 879,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 858,
											"end": 896,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 803,
											"end": 920,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 803,
											"end": 920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 654,
											"end": 926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 508,
											"end": 926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1024,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1059,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1073,
											"end": 1088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1127,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1138,
											"end": 1142,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1155,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1130,
											"end": 1155,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1155,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1113,
											"end": 1155,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1113,
											"end": 1155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1236,
											"end": 1240,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1256,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1243,
											"end": 1249,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1243,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1243,
											"end": 1256,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1243,
											"end": 1256,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1243,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1243,
											"end": 1256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1243,
											"end": 1256,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1243,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1212,
											"end": 1265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 1265,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1212,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1324,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1184,
											"end": 1324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1324,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1184,
											"end": 1324,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1184,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1324,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1184,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1324,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1324,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1324,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1014,
											"end": 1380,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1014,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1154,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1201,
											"end": 1205,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1184,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1217,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1184,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1217,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1217,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1247,
											"end": 1282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1252,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1247,
											"end": 1282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1305,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1305,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1247,
											"end": 1305,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1305,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1299,
											"end": 1305,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1305,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1247,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1373,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1246,
											"end": 1373,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1349,
											"end": 1355,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1361,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1363,
											"end": 1372,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1322,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1373,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1322,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1373,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1246,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1373,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1380,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1380,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 2739,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1793,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1903,
											"end": 1916,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1928,
											"end": 1933,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1919,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1919,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1919,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1919,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1903,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1903,
											"end": 1934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1954,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1949,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1940,
											"end": 1972,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1956,
											"end": 1972,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1956,
											"end": 1972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1956,
											"end": 1972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1956,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1956,
											"end": 1972,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1972,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1940,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1992,
											"end": 1997,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 1989,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 1997,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1979,
											"end": 2015,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1979,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1979,
											"end": 2015,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1999,
											"end": 2015,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1999,
											"end": 2015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1999,
											"end": 2015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1999,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1999,
											"end": 2015,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1979,
											"end": 2015,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1979,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2038,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2029,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2038,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2086,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 2021,
											"end": 2086,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2071,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2081,
											"end": 2085,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "PUSH",
											"source": 9,
											"value": "2C4A89FA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2047,
											"end": 2086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2086,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2086,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 2021,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2112,
											"end": 2127,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2143,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2130,
											"end": 2134,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2130,
											"end": 2143,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2151,
											"end": 2166,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2174,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2183,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2151,
											"end": 2183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2151,
											"end": 2183,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2224,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2224,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2244,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2234,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2207,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2413,
											"end": 2417,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2418,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2533,
											"end": 2537,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2529,
											"end": 2538,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2526,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2515,
											"end": 2519,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2513,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2505,
											"end": 2520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2527,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2497,
											"end": 2539,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2490,
											"end": 2495,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2484,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2473,
											"end": 2541,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2598,
											"end": 2602,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2591,
											"end": 2596,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2603,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2716,
											"end": 2720,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2714,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2705,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2694,
											"end": 2699,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2688,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 2671,
											"end": 2721,
											"name": "EXTCODECOPY",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 2739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 2739,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1793,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 2739,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 2739,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 2739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 2739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 2739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 2739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2226,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2285,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2310,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2333,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 2354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2603,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2588,
											"end": 2597,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2584,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2578,
											"end": 2605,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2605,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2652,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2637,
											"end": 2646,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2633,
											"end": 2653,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2654,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2622,
											"end": 2654,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2622,
											"end": 2654,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2709,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2694,
											"end": 2703,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 2710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2684,
											"end": 2711,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2681,
											"end": 2682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2712,
											"name": "BYTE",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2712,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2712,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2757,
											"end": 2761,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2763,
											"end": 2764,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2767,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2746,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2857,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2145,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 2259,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1786,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1929,
											"end": 1933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1958,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1979,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 1989,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2071,
											"name": "PUSH",
											"source": 5,
											"value": "1626BA7E"
										},
										{
											"begin": 2037,
											"end": 2071,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2037,
											"end": 2071,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2077,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2014,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1983,
											"end": 2099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2099,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2099,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2124,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2159,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2159,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2117,
											"end": 2159,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2159,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2159,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2153,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2159,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2159,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2159,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2117,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2251,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2117,
											"end": 2251,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2250,
											"name": "PUSH",
											"source": 5,
											"value": "1626BA7E"
										},
										{
											"begin": 2216,
											"end": 2250,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2216,
											"end": 2250,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2251,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2208,
											"end": 2251,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2251,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2175,
											"end": 2204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2251,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2251,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2117,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2109,
											"end": 2252,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2109,
											"end": 2252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2109,
											"end": 2252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2109,
											"end": 2252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1786,
											"end": 2259,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1786,
											"end": 2259,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1786,
											"end": 2259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1786,
											"end": 2259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1786,
											"end": 2259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1786,
											"end": 2259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1261,
											"end": 1380,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1261,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1317,
											"end": 1329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1374,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1374,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1261,
											"end": 1380,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1261,
											"end": 1380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1261,
											"end": 1380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1261,
											"end": 1380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5097,
											"end": 5104,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5118,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6087,
											"name": "PUSH",
											"source": 4,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6016,
											"end": 6017,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6008,
											"end": 6018,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6087,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6119,
											"end": 6120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6123,
											"end": 6153,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6259,
											"end": 6273,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6286,
											"end": 6290,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6293,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6296,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6298,
											"end": 6299,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6276,
											"end": 6300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6259,
											"end": 6300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6259,
											"end": 6300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6332,
											"end": 6333,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6314,
											"end": 6320,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6310,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6310,
											"end": 6411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6366,
											"end": 6367,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6370,
											"end": 6399,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6310,
											"end": 6411,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6310,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6429,
											"end": 6435,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6437,
											"end": 6457,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 6465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 1991,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 1874,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 1984,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1981,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 1985,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1997,
											"end": 2114,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 1997,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2106,
											"end": 2107,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2104,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2096,
											"end": 2108,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2120,
											"end": 2222,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 2120,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2161,
											"end": 2167,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2196,
											"end": 2201,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2206,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2188,
											"end": 2216,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2216,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2216,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2120,
											"end": 2222,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2120,
											"end": 2222,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2120,
											"end": 2222,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2120,
											"end": 2222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2228,
											"end": 2408,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 2228,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2276,
											"end": 2353,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2273,
											"end": 2274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2354,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2373,
											"end": 2377,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 2370,
											"end": 2371,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2363,
											"end": 2378,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2397,
											"end": 2401,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2394,
											"end": 2395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2402,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2695,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 2414,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 2519,
											"end": 2523,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 2497,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2524,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 2497,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2489,
											"end": 2495,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2525,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2627,
											"end": 2633,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2615,
											"end": 2625,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2612,
											"end": 2634,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2591,
											"end": 2609,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2579,
											"end": 2589,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2576,
											"end": 2610,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2573,
											"end": 2635,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2658,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 2570,
											"end": 2658,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 2638,
											"end": 2656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2658,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 2570,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2678,
											"end": 2688,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2674,
											"end": 2676,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2689,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2701,
											"end": 2830,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 2701,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2741,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 2762,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 2762,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2762,
											"end": 2782,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 2762,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2752,
											"end": 2782,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2752,
											"end": 2782,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2791,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 2819,
											"end": 2823,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2811,
											"end": 2817,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2791,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 2791,
											"end": 2824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2791,
											"end": 2824,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 2791,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2701,
											"end": 2830,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2701,
											"end": 2830,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2701,
											"end": 2830,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2701,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 3143,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 2836,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 2901,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2976,
											"end": 3006,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2973,
											"end": 3029,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2973,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 2973,
											"end": 3029,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3009,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 3009,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 3009,
											"end": 3027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3009,
											"end": 3027,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 3009,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2973,
											"end": 3029,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 2973,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3047,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 3069,
											"end": 3075,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3047,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 3047,
											"end": 3076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3047,
											"end": 3076,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 3047,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3039,
											"end": 3076,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3039,
											"end": 3076,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3131,
											"end": 3135,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3129,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3121,
											"end": 3136,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3113,
											"end": 3136,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3113,
											"end": 3136,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 3143,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 3143,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 3143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3295,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 3149,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3246,
											"end": 3252,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3241,
											"end": 3244,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3236,
											"end": 3239,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3223,
											"end": 3253,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3284,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3273,
											"end": 3276,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3269,
											"end": 3285,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3262,
											"end": 3289,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3295,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3295,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3295,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3301,
											"end": 3724,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 3301,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 3419,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3419,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 3419,
											"end": 3467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3419,
											"end": 3467,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 3419,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3403,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 3403,
											"end": 3468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3403,
											"end": 3468,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 3403,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3394,
											"end": 3468,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3394,
											"end": 3468,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3491,
											"end": 3497,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3489,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3477,
											"end": 3498,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3529,
											"end": 3533,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3534,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3567,
											"end": 3570,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3558,
											"end": 3564,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3553,
											"end": 3556,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3549,
											"end": 3565,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3571,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3543,
											"end": 3655,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3543,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 3543,
											"end": 3655,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3574,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 3574,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 3574,
											"end": 3653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3574,
											"end": 3653,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 3574,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3543,
											"end": 3655,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 3543,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3664,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3706,
											"end": 3709,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3701,
											"end": 3704,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3664,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 3664,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3664,
											"end": 3718,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 3664,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3384,
											"end": 3724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3301,
											"end": 3724,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3301,
											"end": 3724,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3301,
											"end": 3724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3301,
											"end": 3724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3301,
											"end": 3724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3301,
											"end": 3724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3743,
											"end": 4081,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 3743,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3850,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3840,
											"end": 3844,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3832,
											"end": 3838,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 3845,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3851,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3814,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 3814,
											"end": 3936,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3855,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 3855,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 3855,
											"end": 3934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3855,
											"end": 3934,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 3855,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3814,
											"end": 3936,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 3814,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3972,
											"end": 3978,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3979,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 4071,
											"end": 4074,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4063,
											"end": 4069,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4060,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4054,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4061,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 3997,
											"end": 4075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3988,
											"end": 4075,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3988,
											"end": 4075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3804,
											"end": 4081,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3743,
											"end": 4081,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3743,
											"end": 4081,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3743,
											"end": 4081,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3743,
											"end": 4081,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3743,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4087,
											"end": 4739,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 4087,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4164,
											"end": 4170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4178,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4221,
											"end": 4223,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4209,
											"end": 4218,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4200,
											"end": 4207,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4196,
											"end": 4219,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4192,
											"end": 4224,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4308,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 4189,
											"end": 4308,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4227,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 4227,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 4227,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4227,
											"end": 4306,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 4227,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4308,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 4189,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4347,
											"end": 4348,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 4417,
											"end": 4424,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4397,
											"end": 4406,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4393,
											"end": 4415,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4372,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 4372,
											"end": 4425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4372,
											"end": 4425,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 4372,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4425,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4318,
											"end": 4435,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4502,
											"end": 4504,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4487,
											"end": 4505,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4474,
											"end": 4506,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4533,
											"end": 4551,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4525,
											"end": 4531,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4522,
											"end": 4552,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4519,
											"end": 4636,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4519,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 4519,
											"end": 4636,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 4555,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 4555,
											"end": 4634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4634,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 4555,
											"end": 4634,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4519,
											"end": 4636,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 4519,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4660,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 4714,
											"end": 4721,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4705,
											"end": 4711,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4694,
											"end": 4703,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4690,
											"end": 4712,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4660,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 4660,
											"end": 4722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4660,
											"end": 4722,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 4660,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4650,
											"end": 4722,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4650,
											"end": 4722,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4445,
											"end": 4732,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4087,
											"end": 4739,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4087,
											"end": 4739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4087,
											"end": 4739,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4087,
											"end": 4739,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4087,
											"end": 4739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4087,
											"end": 4739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4860,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 4745,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 4847,
											"end": 4852,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 4830,
											"end": 4853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4825,
											"end": 4828,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4818,
											"end": 4854,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4860,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4860,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4866,
											"end": 5084,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4866,
											"end": 5084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 4997,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4984,
											"end": 4993,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4972,
											"end": 4998,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4972,
											"end": 4998,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5008,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 5074,
											"end": 5075,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5063,
											"end": 5072,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5050,
											"end": 5056,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5008,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 5008,
											"end": 5077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5008,
											"end": 5077,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 5008,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4866,
											"end": 5084,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4866,
											"end": 5084,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4866,
											"end": 5084,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4866,
											"end": 5084,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4866,
											"end": 5084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5216,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 5090,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5127,
											"end": 5134,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5209,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5160,
											"end": 5165,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5210,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5145,
											"end": 5210,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5145,
											"end": 5210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5216,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5216,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5216,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5222,
											"end": 5318,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 5222,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5259,
											"end": 5266,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 5306,
											"end": 5311,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 5288,
											"end": 5312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5312,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 5288,
											"end": 5312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5222,
											"end": 5318,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5222,
											"end": 5318,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5222,
											"end": 5318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5222,
											"end": 5318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5324,
											"end": 5446,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 5324,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 5415,
											"end": 5420,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 5397,
											"end": 5421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5421,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 5397,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5390,
											"end": 5395,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5387,
											"end": 5422,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5377,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 5377,
											"end": 5440,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5436,
											"end": 5437,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5434,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5426,
											"end": 5438,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5377,
											"end": 5440,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 5377,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5324,
											"end": 5446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5324,
											"end": 5446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5591,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 5452,
											"end": 5591,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5498,
											"end": 5503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5542,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5523,
											"end": 5543,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5514,
											"end": 5543,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5514,
											"end": 5543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 5579,
											"end": 5584,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 5552,
											"end": 5585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5552,
											"end": 5585,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 5552,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5591,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5591,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5591,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5591,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5597,
											"end": 5674,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 5597,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5634,
											"end": 5641,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5663,
											"end": 5668,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5652,
											"end": 5668,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5652,
											"end": 5668,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5597,
											"end": 5674,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5597,
											"end": 5674,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5597,
											"end": 5674,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5597,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5680,
											"end": 5802,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 5680,
											"end": 5802,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5753,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 5771,
											"end": 5776,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5753,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 5753,
											"end": 5777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5753,
											"end": 5777,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 5753,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5746,
											"end": 5751,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5743,
											"end": 5778,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5733,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 5733,
											"end": 5796,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5792,
											"end": 5793,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5790,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5782,
											"end": 5794,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5733,
											"end": 5796,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 5733,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5680,
											"end": 5802,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5680,
											"end": 5802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5808,
											"end": 5947,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 5808,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 5859,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5892,
											"end": 5898,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5879,
											"end": 5899,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5870,
											"end": 5899,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5870,
											"end": 5899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5908,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 5935,
											"end": 5940,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5908,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 5908,
											"end": 5941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5908,
											"end": 5941,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 5908,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5808,
											"end": 5947,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5808,
											"end": 5947,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5808,
											"end": 5947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5808,
											"end": 5947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5808,
											"end": 5947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5953,
											"end": 6572,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 5953,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6030,
											"end": 6036,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6038,
											"end": 6044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6046,
											"end": 6052,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6095,
											"end": 6097,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6083,
											"end": 6092,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6074,
											"end": 6081,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6070,
											"end": 6093,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6066,
											"end": 6098,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6063,
											"end": 6182,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6063,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 6063,
											"end": 6182,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6101,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 6101,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 6101,
											"end": 6180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6101,
											"end": 6180,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 6101,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6063,
											"end": 6182,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 6063,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6221,
											"end": 6222,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6246,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6288,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6280,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6246,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 6246,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6246,
											"end": 6299,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 6246,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6236,
											"end": 6299,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6236,
											"end": 6299,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6192,
											"end": 6309,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6348,
											"end": 6350,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6374,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 6419,
											"end": 6426,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6410,
											"end": 6416,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6399,
											"end": 6408,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6395,
											"end": 6417,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6374,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 6374,
											"end": 6427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6374,
											"end": 6427,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 6374,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6364,
											"end": 6427,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6364,
											"end": 6427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6476,
											"end": 6478,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6502,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 6547,
											"end": 6554,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6538,
											"end": 6544,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6527,
											"end": 6536,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6523,
											"end": 6545,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6502,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 6502,
											"end": 6555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6502,
											"end": 6555,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 6502,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6492,
											"end": 6555,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6492,
											"end": 6555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6447,
											"end": 6565,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5953,
											"end": 6572,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5953,
											"end": 6572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5953,
											"end": 6572,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5953,
											"end": 6572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5953,
											"end": 6572,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5953,
											"end": 6572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6578,
											"end": 6696,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 6578,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6665,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 6683,
											"end": 6688,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6665,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 6665,
											"end": 6689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6665,
											"end": 6689,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 6665,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6660,
											"end": 6663,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6653,
											"end": 6690,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6578,
											"end": 6696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6578,
											"end": 6696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6578,
											"end": 6696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6702,
											"end": 6924,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 6702,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6795,
											"end": 6799,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6822,
											"end": 6831,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6818,
											"end": 6836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6810,
											"end": 6836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6810,
											"end": 6836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6846,
											"end": 6917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 6914,
											"end": 6915,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6903,
											"end": 6912,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6899,
											"end": 6916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6890,
											"end": 6896,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6846,
											"end": 6917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 6846,
											"end": 6917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6846,
											"end": 6917,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 6846,
											"end": 6917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6702,
											"end": 6924,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6702,
											"end": 6924,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6702,
											"end": 6924,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6702,
											"end": 6924,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6702,
											"end": 6924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6930,
											"end": 7047,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 6930,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7039,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7036,
											"end": 7037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7029,
											"end": 7041,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7053,
											"end": 7170,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 7053,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7162,
											"end": 7163,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7159,
											"end": 7160,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7152,
											"end": 7164,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7189,
											"end": 7741,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 7189,
											"end": 7741,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7246,
											"end": 7254,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7256,
											"end": 7262,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7306,
											"end": 7309,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7299,
											"end": 7303,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 7291,
											"end": 7297,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7287,
											"end": 7304,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7283,
											"end": 7310,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7273,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 7273,
											"end": 7395,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7314,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 7314,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 7314,
											"end": 7393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7314,
											"end": 7393,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 7314,
											"end": 7393,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7273,
											"end": 7395,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 7273,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7427,
											"end": 7433,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7404,
											"end": 7434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7404,
											"end": 7434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7457,
											"end": 7475,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7455,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7446,
											"end": 7476,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7443,
											"end": 7560,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7443,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 7443,
											"end": 7560,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7479,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 7479,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 7479,
											"end": 7558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7479,
											"end": 7558,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 7479,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7443,
											"end": 7560,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 7443,
											"end": 7560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7585,
											"end": 7591,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7581,
											"end": 7598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7647,
											"end": 7650,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7631,
											"end": 7637,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7627,
											"end": 7644,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 7617,
											"end": 7625,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7613,
											"end": 7645,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7651,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7735,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 7607,
											"end": 7735,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7654,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 7654,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 7654,
											"end": 7733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7654,
											"end": 7733,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 7654,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7735,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 7607,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7189,
											"end": 7741,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7189,
											"end": 7741,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7189,
											"end": 7741,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7189,
											"end": 7741,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7189,
											"end": 7741,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7189,
											"end": 7741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7747,
											"end": 8564,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 7747,
											"end": 8564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7835,
											"end": 7841,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7843,
											"end": 7849,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7851,
											"end": 7857,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7859,
											"end": 7865,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7910,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7896,
											"end": 7905,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7883,
											"end": 7906,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7879,
											"end": 7911,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7995,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 7876,
											"end": 7995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7914,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 7914,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 7914,
											"end": 7993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7914,
											"end": 7993,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 7914,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7995,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 7876,
											"end": 7995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8034,
											"end": 8035,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 8104,
											"end": 8111,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8095,
											"end": 8101,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8084,
											"end": 8093,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8080,
											"end": 8102,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8059,
											"end": 8112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 8059,
											"end": 8112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8059,
											"end": 8112,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 8059,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8049,
											"end": 8112,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8049,
											"end": 8112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8005,
											"end": 8122,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8161,
											"end": 8163,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8187,
											"end": 8240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 8232,
											"end": 8239,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8223,
											"end": 8229,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8212,
											"end": 8221,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8208,
											"end": 8230,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8187,
											"end": 8240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 8187,
											"end": 8240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8187,
											"end": 8240,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 8187,
											"end": 8240,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8240,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8240,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8132,
											"end": 8250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8317,
											"end": 8319,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8306,
											"end": 8315,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8302,
											"end": 8320,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8289,
											"end": 8321,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8348,
											"end": 8366,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8340,
											"end": 8346,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8334,
											"end": 8451,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8334,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 8334,
											"end": 8451,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8370,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 8370,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 8370,
											"end": 8449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8370,
											"end": 8449,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 8370,
											"end": 8449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8334,
											"end": 8451,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 8334,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8483,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 8539,
											"end": 8546,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8530,
											"end": 8536,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8519,
											"end": 8528,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8515,
											"end": 8537,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8483,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 8483,
											"end": 8547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8483,
											"end": 8547,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 8483,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8465,
											"end": 8547,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8465,
											"end": 8547,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8465,
											"end": 8547,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8465,
											"end": 8547,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8260,
											"end": 8557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7747,
											"end": 8564,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7747,
											"end": 8564,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 7747,
											"end": 8564,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7747,
											"end": 8564,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7747,
											"end": 8564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7747,
											"end": 8564,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7747,
											"end": 8564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7747,
											"end": 8564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8570,
											"end": 8668,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 8570,
											"end": 8668,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8621,
											"end": 8627,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8655,
											"end": 8660,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8649,
											"end": 8661,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8639,
											"end": 8661,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8639,
											"end": 8661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8570,
											"end": 8668,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8570,
											"end": 8668,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8570,
											"end": 8668,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8570,
											"end": 8668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8674,
											"end": 8842,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 8674,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8757,
											"end": 8768,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8791,
											"end": 8797,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8786,
											"end": 8789,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8779,
											"end": 8798,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8831,
											"end": 8835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8826,
											"end": 8829,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8822,
											"end": 8836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8807,
											"end": 8836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8807,
											"end": 8836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8674,
											"end": 8842,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8674,
											"end": 8842,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8674,
											"end": 8842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8674,
											"end": 8842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8674,
											"end": 8842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8848,
											"end": 9094,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 8848,
											"end": 9094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8929,
											"end": 8930,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8939,
											"end": 9052,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 8939,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 8959,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8950,
											"end": 8951,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8947,
											"end": 8960,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8939,
											"end": 9052,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8939,
											"end": 9052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 8939,
											"end": 9052,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9038,
											"end": 9039,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9033,
											"end": 9036,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9029,
											"end": 9040,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9023,
											"end": 9041,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9019,
											"end": 9020,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9014,
											"end": 9017,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9010,
											"end": 9021,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9003,
											"end": 9042,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8975,
											"end": 8977,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8972,
											"end": 8973,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8968,
											"end": 8978,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8963,
											"end": 8978,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8963,
											"end": 8978,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8939,
											"end": 9052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 8939,
											"end": 9052,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8939,
											"end": 9052,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 8939,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9086,
											"end": 9087,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9077,
											"end": 9083,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9072,
											"end": 9075,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9068,
											"end": 9084,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9061,
											"end": 9088,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8910,
											"end": 9094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8848,
											"end": 9094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8848,
											"end": 9094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8848,
											"end": 9094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8848,
											"end": 9094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9100,
											"end": 9473,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 9100,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9186,
											"end": 9189,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9214,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 9246,
											"end": 9251,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9214,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 9214,
											"end": 9252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9214,
											"end": 9252,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 9214,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 9331,
											"end": 9337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9326,
											"end": 9329,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 9268,
											"end": 9338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9338,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 9268,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9261,
											"end": 9338,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9261,
											"end": 9338,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9347,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 9405,
											"end": 9411,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9400,
											"end": 9403,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9393,
											"end": 9397,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9386,
											"end": 9391,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9382,
											"end": 9398,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9347,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 9347,
											"end": 9412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9347,
											"end": 9412,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 9347,
											"end": 9412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9437,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 9459,
											"end": 9465,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9437,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 9437,
											"end": 9466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9437,
											"end": 9466,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 9437,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9432,
											"end": 9435,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9428,
											"end": 9467,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9421,
											"end": 9467,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9421,
											"end": 9467,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9190,
											"end": 9473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9100,
											"end": 9473,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9100,
											"end": 9473,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9100,
											"end": 9473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9100,
											"end": 9473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9100,
											"end": 9473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9479,
											"end": 9788,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 9479,
											"end": 9788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9590,
											"end": 9594,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9628,
											"end": 9630,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9617,
											"end": 9626,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9605,
											"end": 9631,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9605,
											"end": 9631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9677,
											"end": 9686,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9671,
											"end": 9675,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9667,
											"end": 9687,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9663,
											"end": 9664,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9652,
											"end": 9661,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9648,
											"end": 9665,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9641,
											"end": 9688,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9705,
											"end": 9781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 9776,
											"end": 9780,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9767,
											"end": 9773,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9705,
											"end": 9781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 9705,
											"end": 9781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9705,
											"end": 9781,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 9705,
											"end": 9781,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9697,
											"end": 9781,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9697,
											"end": 9781,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9479,
											"end": 9788,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9479,
											"end": 9788,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9479,
											"end": 9788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9479,
											"end": 9788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9479,
											"end": 9788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9794,
											"end": 9912,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 9794,
											"end": 9912,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9881,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 9899,
											"end": 9904,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9881,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 9881,
											"end": 9905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9881,
											"end": 9905,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 9881,
											"end": 9905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9879,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9869,
											"end": 9906,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9794,
											"end": 9912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9794,
											"end": 9912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9794,
											"end": 9912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 10360,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 9918,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10071,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10105,
											"end": 10107,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10094,
											"end": 10103,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10090,
											"end": 10108,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10082,
											"end": 10108,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10082,
											"end": 10108,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 10186,
											"end": 10187,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10175,
											"end": 10184,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10171,
											"end": 10188,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10162,
											"end": 10168,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 10118,
											"end": 10189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10189,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 10118,
											"end": 10189,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10199,
											"end": 10271,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 10267,
											"end": 10269,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10256,
											"end": 10265,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10270,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10243,
											"end": 10249,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10199,
											"end": 10271,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 10199,
											"end": 10271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10199,
											"end": 10271,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 10199,
											"end": 10271,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10281,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 10349,
											"end": 10351,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10338,
											"end": 10347,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10334,
											"end": 10352,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10325,
											"end": 10331,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10281,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 10281,
											"end": 10353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10281,
											"end": 10353,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 10281,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 10360,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 10360,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 10360,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 10360,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 10360,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 10360,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9918,
											"end": 10360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10366,
											"end": 10535,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 10366,
											"end": 10535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10450,
											"end": 10461,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10484,
											"end": 10490,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10479,
											"end": 10482,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10472,
											"end": 10491,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10524,
											"end": 10528,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10519,
											"end": 10522,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10515,
											"end": 10529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10500,
											"end": 10529,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10500,
											"end": 10529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10366,
											"end": 10535,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10366,
											"end": 10535,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10366,
											"end": 10535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10366,
											"end": 10535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10366,
											"end": 10535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10541,
											"end": 10700,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 10541,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10681,
											"end": 10692,
											"name": "PUSH",
											"source": 12,
											"value": "6E6F74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10677,
											"end": 10678,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10669,
											"end": 10675,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10665,
											"end": 10679,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10658,
											"end": 10693,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10541,
											"end": 10700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10541,
											"end": 10700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10706,
											"end": 11071,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 10706,
											"end": 11071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10848,
											"end": 10851,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10869,
											"end": 10935,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 10933,
											"end": 10934,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 10928,
											"end": 10931,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10869,
											"end": 10935,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 10869,
											"end": 10935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10869,
											"end": 10935,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 10869,
											"end": 10935,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10862,
											"end": 10935,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10862,
											"end": 10935,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10944,
											"end": 11037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 11033,
											"end": 11036,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10944,
											"end": 11037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 10944,
											"end": 11037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10944,
											"end": 11037,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 10944,
											"end": 11037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11062,
											"end": 11064,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11057,
											"end": 11060,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11053,
											"end": 11065,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11046,
											"end": 11065,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11046,
											"end": 11065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10706,
											"end": 11071,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10706,
											"end": 11071,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10706,
											"end": 11071,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10706,
											"end": 11071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11077,
											"end": 11496,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 11077,
											"end": 11496,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11243,
											"end": 11247,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11281,
											"end": 11283,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11270,
											"end": 11279,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11266,
											"end": 11284,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11258,
											"end": 11284,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11258,
											"end": 11284,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11330,
											"end": 11339,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11324,
											"end": 11328,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11320,
											"end": 11340,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11316,
											"end": 11317,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11305,
											"end": 11314,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11301,
											"end": 11318,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11294,
											"end": 11341,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11358,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 11484,
											"end": 11488,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11358,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 11358,
											"end": 11489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11358,
											"end": 11489,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 11358,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11350,
											"end": 11489,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11350,
											"end": 11489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11077,
											"end": 11496,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11077,
											"end": 11496,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11077,
											"end": 11496,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11077,
											"end": 11496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11502,
											"end": 11834,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 11502,
											"end": 11834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11623,
											"end": 11627,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11661,
											"end": 11663,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11650,
											"end": 11659,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11646,
											"end": 11664,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11638,
											"end": 11664,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11638,
											"end": 11664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11674,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 11742,
											"end": 11743,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11731,
											"end": 11740,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11727,
											"end": 11744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11718,
											"end": 11724,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11674,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 11674,
											"end": 11745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11674,
											"end": 11745,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 11674,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11755,
											"end": 11827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 11823,
											"end": 11825,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11812,
											"end": 11821,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11808,
											"end": 11826,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11799,
											"end": 11805,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11755,
											"end": 11827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 11755,
											"end": 11827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11755,
											"end": 11827,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 11755,
											"end": 11827,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11502,
											"end": 11834,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11502,
											"end": 11834,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11502,
											"end": 11834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11502,
											"end": 11834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11502,
											"end": 11834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11502,
											"end": 11834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11840,
											"end": 11956,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 11840,
											"end": 11956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11910,
											"end": 11931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 11925,
											"end": 11930,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11910,
											"end": 11931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 11910,
											"end": 11931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11910,
											"end": 11931,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 11910,
											"end": 11931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11903,
											"end": 11908,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11900,
											"end": 11932,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 11890,
											"end": 11950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 11890,
											"end": 11950,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11946,
											"end": 11947,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11943,
											"end": 11944,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11936,
											"end": 11948,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11890,
											"end": 11950,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 11890,
											"end": 11950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11840,
											"end": 11956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11840,
											"end": 11956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11962,
											"end": 12099,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 11962,
											"end": 12099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12016,
											"end": 12021,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12047,
											"end": 12053,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12041,
											"end": 12054,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12032,
											"end": 12054,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12032,
											"end": 12054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12063,
											"end": 12093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 12087,
											"end": 12092,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12063,
											"end": 12093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 12063,
											"end": 12093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12063,
											"end": 12093,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 12063,
											"end": 12093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11962,
											"end": 12099,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11962,
											"end": 12099,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11962,
											"end": 12099,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11962,
											"end": 12099,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11962,
											"end": 12099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12105,
											"end": 12450,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12105,
											"end": 12450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12172,
											"end": 12178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12221,
											"end": 12223,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12209,
											"end": 12218,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12200,
											"end": 12207,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12196,
											"end": 12219,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12192,
											"end": 12224,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 12189,
											"end": 12308,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12189,
											"end": 12308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 12189,
											"end": 12308,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12227,
											"end": 12306,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 12227,
											"end": 12306,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 12227,
											"end": 12306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12227,
											"end": 12306,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 12227,
											"end": 12306,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12189,
											"end": 12308,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 12189,
											"end": 12308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12347,
											"end": 12348,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12372,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 12425,
											"end": 12432,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12416,
											"end": 12422,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12405,
											"end": 12414,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12401,
											"end": 12423,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12372,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 12372,
											"end": 12433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12372,
											"end": 12433,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 12372,
											"end": 12433,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12362,
											"end": 12433,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12362,
											"end": 12433,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12443,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12105,
											"end": 12450,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12105,
											"end": 12450,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12105,
											"end": 12450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12105,
											"end": 12450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12105,
											"end": 12450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12456,
											"end": 12599,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 12456,
											"end": 12599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12513,
											"end": 12518,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12544,
											"end": 12550,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12538,
											"end": 12551,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12529,
											"end": 12551,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12529,
											"end": 12551,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12560,
											"end": 12593,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 12587,
											"end": 12592,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12560,
											"end": 12593,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 12560,
											"end": 12593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12560,
											"end": 12593,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 12560,
											"end": 12593,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12456,
											"end": 12599,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12456,
											"end": 12599,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12456,
											"end": 12599,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12456,
											"end": 12599,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12456,
											"end": 12599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12605,
											"end": 12748,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 12605,
											"end": 12748,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12662,
											"end": 12667,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12693,
											"end": 12699,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12687,
											"end": 12700,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12678,
											"end": 12700,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12678,
											"end": 12700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12709,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 12736,
											"end": 12741,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12709,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 12709,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12709,
											"end": 12742,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 12709,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12605,
											"end": 12748,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12605,
											"end": 12748,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12605,
											"end": 12748,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12605,
											"end": 12748,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12605,
											"end": 12748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12754,
											"end": 13417,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 12754,
											"end": 13417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12842,
											"end": 12848,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12850,
											"end": 12856,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12858,
											"end": 12864,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12907,
											"end": 12909,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 12895,
											"end": 12904,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12886,
											"end": 12893,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12882,
											"end": 12905,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12878,
											"end": 12910,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 12875,
											"end": 12994,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12875,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 12875,
											"end": 12994,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12913,
											"end": 12992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 12913,
											"end": 12992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 12913,
											"end": 12992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12913,
											"end": 12992,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 12913,
											"end": 12992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12875,
											"end": 12994,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 12875,
											"end": 12994,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13033,
											"end": 13034,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13058,
											"end": 13122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 13114,
											"end": 13121,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13105,
											"end": 13111,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13094,
											"end": 13103,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13090,
											"end": 13112,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13058,
											"end": 13122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 13058,
											"end": 13122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13058,
											"end": 13122,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 13058,
											"end": 13122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13122,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13122,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13004,
											"end": 13132,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13171,
											"end": 13173,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13197,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 13253,
											"end": 13260,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13244,
											"end": 13250,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13233,
											"end": 13242,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13229,
											"end": 13251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13197,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 13197,
											"end": 13261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13197,
											"end": 13261,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 13197,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13187,
											"end": 13261,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13187,
											"end": 13261,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13142,
											"end": 13271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13310,
											"end": 13312,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13336,
											"end": 13400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 13392,
											"end": 13399,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13383,
											"end": 13389,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13372,
											"end": 13381,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13368,
											"end": 13390,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13336,
											"end": 13400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 13336,
											"end": 13400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13336,
											"end": 13400,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 13336,
											"end": 13400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13326,
											"end": 13400,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13326,
											"end": 13400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13281,
											"end": 13410,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12754,
											"end": 13417,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12754,
											"end": 13417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12754,
											"end": 13417,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12754,
											"end": 13417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12754,
											"end": 13417,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12754,
											"end": 13417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13423,
											"end": 13645,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 13423,
											"end": 13645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13516,
											"end": 13520,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13554,
											"end": 13556,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13543,
											"end": 13552,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13539,
											"end": 13557,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13531,
											"end": 13557,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13531,
											"end": 13557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13567,
											"end": 13638,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 13635,
											"end": 13636,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13624,
											"end": 13633,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13620,
											"end": 13637,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13611,
											"end": 13617,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13567,
											"end": 13638,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 13567,
											"end": 13638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13567,
											"end": 13638,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 13567,
											"end": 13638,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13423,
											"end": 13645,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13423,
											"end": 13645,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13423,
											"end": 13645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13423,
											"end": 13645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13423,
											"end": 13645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13651,
											"end": 14002,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 13651,
											"end": 14002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13721,
											"end": 13727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13770,
											"end": 13772,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13758,
											"end": 13767,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13749,
											"end": 13756,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13745,
											"end": 13768,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13741,
											"end": 13773,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 13738,
											"end": 13857,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13738,
											"end": 13857,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 13738,
											"end": 13857,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13776,
											"end": 13855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 13776,
											"end": 13855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 13776,
											"end": 13855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13776,
											"end": 13855,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 13776,
											"end": 13855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13738,
											"end": 13857,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 13738,
											"end": 13857,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13896,
											"end": 13897,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13921,
											"end": 13985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 13977,
											"end": 13984,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13968,
											"end": 13974,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13957,
											"end": 13966,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13953,
											"end": 13975,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13921,
											"end": 13985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 13921,
											"end": 13985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13921,
											"end": 13985,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 13921,
											"end": 13985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13911,
											"end": 13985,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13911,
											"end": 13985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13867,
											"end": 13995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13651,
											"end": 14002,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13651,
											"end": 14002,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13651,
											"end": 14002,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13651,
											"end": 14002,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13651,
											"end": 14002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14008,
											"end": 14173,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 14008,
											"end": 14173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14148,
											"end": 14165,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F7420746F6B656E206F776E65720000000000000000000000000000000000"
										},
										{
											"begin": 14144,
											"end": 14145,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14136,
											"end": 14142,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14132,
											"end": 14146,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14125,
											"end": 14166,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14008,
											"end": 14173,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14008,
											"end": 14173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14179,
											"end": 14545,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 14179,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14321,
											"end": 14324,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14342,
											"end": 14409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 14406,
											"end": 14408,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 14401,
											"end": 14404,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14342,
											"end": 14409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 14342,
											"end": 14409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14342,
											"end": 14409,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 14342,
											"end": 14409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14335,
											"end": 14409,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14335,
											"end": 14409,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14418,
											"end": 14511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 14507,
											"end": 14510,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14418,
											"end": 14511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 14418,
											"end": 14511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14418,
											"end": 14511,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 14418,
											"end": 14511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14536,
											"end": 14538,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14531,
											"end": 14534,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14527,
											"end": 14539,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14520,
											"end": 14539,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14520,
											"end": 14539,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14179,
											"end": 14545,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14179,
											"end": 14545,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14179,
											"end": 14545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14179,
											"end": 14545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14551,
											"end": 14970,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 14551,
											"end": 14970,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14717,
											"end": 14721,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14755,
											"end": 14757,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14744,
											"end": 14753,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14740,
											"end": 14758,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14732,
											"end": 14758,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14732,
											"end": 14758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14804,
											"end": 14813,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14798,
											"end": 14802,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14794,
											"end": 14814,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14790,
											"end": 14791,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14779,
											"end": 14788,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14775,
											"end": 14792,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14768,
											"end": 14815,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14832,
											"end": 14963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 14958,
											"end": 14962,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14832,
											"end": 14963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 14832,
											"end": 14963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14832,
											"end": 14963,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 14832,
											"end": 14963,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14824,
											"end": 14963,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14824,
											"end": 14963,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14551,
											"end": 14970,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14551,
											"end": 14970,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14551,
											"end": 14970,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14551,
											"end": 14970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14976,
											"end": 15123,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 14976,
											"end": 15123,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15077,
											"end": 15088,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15114,
											"end": 15117,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15099,
											"end": 15117,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15099,
											"end": 15117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14976,
											"end": 15123,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14976,
											"end": 15123,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14976,
											"end": 15123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14976,
											"end": 15123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14976,
											"end": 15123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15151,
											"end": 15478,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 15151,
											"end": 15478,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15265,
											"end": 15268,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15286,
											"end": 15374,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 15367,
											"end": 15373,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15362,
											"end": 15365,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15286,
											"end": 15374,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 15286,
											"end": 15374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15286,
											"end": 15374,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 15286,
											"end": 15374,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15279,
											"end": 15374,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15279,
											"end": 15374,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15384,
											"end": 15440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 15433,
											"end": 15439,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15428,
											"end": 15431,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15421,
											"end": 15426,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15384,
											"end": 15440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 15384,
											"end": 15440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15384,
											"end": 15440,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 15384,
											"end": 15440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15465,
											"end": 15471,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15460,
											"end": 15463,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15456,
											"end": 15472,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15449,
											"end": 15472,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15449,
											"end": 15472,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15151,
											"end": 15478,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15151,
											"end": 15478,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15151,
											"end": 15478,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15151,
											"end": 15478,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15151,
											"end": 15478,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15151,
											"end": 15478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15484,
											"end": 15775,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 15484,
											"end": 15775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15624,
											"end": 15627,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15646,
											"end": 15749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 15745,
											"end": 15748,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15736,
											"end": 15742,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15728,
											"end": 15734,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15646,
											"end": 15749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 15646,
											"end": 15749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15646,
											"end": 15749,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 15646,
											"end": 15749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15639,
											"end": 15749,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15639,
											"end": 15749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15766,
											"end": 15769,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15759,
											"end": 15769,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15759,
											"end": 15769,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15484,
											"end": 15775,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15484,
											"end": 15775,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15484,
											"end": 15775,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15484,
											"end": 15775,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15484,
											"end": 15775,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15484,
											"end": 15775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15781,
											"end": 15961,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 15781,
											"end": 15961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15829,
											"end": 15906,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15826,
											"end": 15827,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15819,
											"end": 15907,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15926,
											"end": 15930,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 15923,
											"end": 15924,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15916,
											"end": 15931,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15950,
											"end": 15954,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15947,
											"end": 15948,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15940,
											"end": 15955,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 15967,
											"end": 16161,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 15967,
											"end": 16161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16007,
											"end": 16011,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16027,
											"end": 16047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 16045,
											"end": 16046,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16027,
											"end": 16047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 16027,
											"end": 16047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16027,
											"end": 16047,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 16027,
											"end": 16047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16022,
											"end": 16047,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16022,
											"end": 16047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16061,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 16079,
											"end": 16080,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16061,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 16061,
											"end": 16081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16061,
											"end": 16081,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 16061,
											"end": 16081,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16056,
											"end": 16081,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16056,
											"end": 16081,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16105,
											"end": 16106,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16102,
											"end": 16103,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16098,
											"end": 16107,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16090,
											"end": 16107,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16090,
											"end": 16107,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16129,
											"end": 16130,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16123,
											"end": 16127,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16120,
											"end": 16131,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 16117,
											"end": 16154,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16117,
											"end": 16154,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 16117,
											"end": 16154,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16134,
											"end": 16152,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 16134,
											"end": 16152,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 16134,
											"end": 16152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16134,
											"end": 16152,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 16134,
											"end": 16152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16117,
											"end": 16154,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 16117,
											"end": 16154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15967,
											"end": 16161,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15967,
											"end": 16161,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15967,
											"end": 16161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15967,
											"end": 16161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15967,
											"end": 16161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16167,
											"end": 16271,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 16167,
											"end": 16271,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16212,
											"end": 16219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16241,
											"end": 16265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 16259,
											"end": 16264,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16241,
											"end": 16265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 16241,
											"end": 16265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16241,
											"end": 16265,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 16241,
											"end": 16265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16230,
											"end": 16265,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16230,
											"end": 16265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16167,
											"end": 16271,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16167,
											"end": 16271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16167,
											"end": 16271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16167,
											"end": 16271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16277,
											"end": 16415,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 16277,
											"end": 16415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16358,
											"end": 16390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 16384,
											"end": 16389,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16358,
											"end": 16390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 16358,
											"end": 16390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16358,
											"end": 16390,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 16358,
											"end": 16390,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16351,
											"end": 16356,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16348,
											"end": 16391,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 16338,
											"end": 16409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 16338,
											"end": 16409,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16405,
											"end": 16406,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16402,
											"end": 16403,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16395,
											"end": 16407,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16338,
											"end": 16409,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 16338,
											"end": 16409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16277,
											"end": 16415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16277,
											"end": 16415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16421,
											"end": 16580,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 16421,
											"end": 16580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16486,
											"end": 16491,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16517,
											"end": 16523,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16511,
											"end": 16524,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16502,
											"end": 16524,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16502,
											"end": 16524,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16533,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 16568,
											"end": 16573,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16533,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 16533,
											"end": 16574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16533,
											"end": 16574,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 16533,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16421,
											"end": 16580,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16421,
											"end": 16580,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16421,
											"end": 16580,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16421,
											"end": 16580,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16421,
											"end": 16580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16586,
											"end": 17265,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 16586,
											"end": 17265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16682,
											"end": 16688,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16690,
											"end": 16696,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16698,
											"end": 16704,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16747,
											"end": 16749,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 16735,
											"end": 16744,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16726,
											"end": 16733,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16722,
											"end": 16745,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16718,
											"end": 16750,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 16715,
											"end": 16834,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16715,
											"end": 16834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 16715,
											"end": 16834,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16753,
											"end": 16832,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 16753,
											"end": 16832,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 16753,
											"end": 16832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16753,
											"end": 16832,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 16753,
											"end": 16832,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16715,
											"end": 16834,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 16715,
											"end": 16834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16873,
											"end": 16874,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16898,
											"end": 16962,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 16954,
											"end": 16961,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16945,
											"end": 16951,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16934,
											"end": 16943,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 16930,
											"end": 16952,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16898,
											"end": 16962,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 16898,
											"end": 16962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16898,
											"end": 16962,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 16898,
											"end": 16962,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16888,
											"end": 16962,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16888,
											"end": 16962,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16844,
											"end": 16972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17011,
											"end": 17013,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17037,
											"end": 17109,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 17101,
											"end": 17108,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17092,
											"end": 17098,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17081,
											"end": 17090,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 17077,
											"end": 17099,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17037,
											"end": 17109,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 17037,
											"end": 17109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17037,
											"end": 17109,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 17037,
											"end": 17109,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17027,
											"end": 17109,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17027,
											"end": 17109,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16982,
											"end": 17119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17158,
											"end": 17160,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17184,
											"end": 17248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 17240,
											"end": 17247,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17231,
											"end": 17237,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17220,
											"end": 17229,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 17216,
											"end": 17238,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17184,
											"end": 17248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 17184,
											"end": 17248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17184,
											"end": 17248,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 17184,
											"end": 17248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17174,
											"end": 17248,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17174,
											"end": 17248,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17129,
											"end": 17258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16586,
											"end": 17265,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16586,
											"end": 17265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16586,
											"end": 17265,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16586,
											"end": 17265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16586,
											"end": 17265,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16586,
											"end": 17265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17271,
											"end": 17451,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 17271,
											"end": 17451,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17319,
											"end": 17396,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17316,
											"end": 17317,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17309,
											"end": 17397,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17416,
											"end": 17420,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 17413,
											"end": 17414,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17406,
											"end": 17421,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17440,
											"end": 17444,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17437,
											"end": 17438,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17430,
											"end": 17445,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17457,
											"end": 17899,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 17457,
											"end": 17899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17606,
											"end": 17610,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17644,
											"end": 17646,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 17633,
											"end": 17642,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17629,
											"end": 17647,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17621,
											"end": 17647,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17621,
											"end": 17647,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17657,
											"end": 17728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 17725,
											"end": 17726,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17714,
											"end": 17723,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17710,
											"end": 17727,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17701,
											"end": 17707,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17657,
											"end": 17728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 17657,
											"end": 17728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17657,
											"end": 17728,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 17657,
											"end": 17728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17738,
											"end": 17810,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 17806,
											"end": 17808,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17795,
											"end": 17804,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17791,
											"end": 17809,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17782,
											"end": 17788,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17738,
											"end": 17810,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 17738,
											"end": 17810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17738,
											"end": 17810,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 17738,
											"end": 17810,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17820,
											"end": 17892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 17888,
											"end": 17890,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17877,
											"end": 17886,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17873,
											"end": 17891,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17864,
											"end": 17870,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17820,
											"end": 17892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 17820,
											"end": 17892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17820,
											"end": 17892,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 17820,
											"end": 17892,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17457,
											"end": 17899,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 17457,
											"end": 17899,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17457,
											"end": 17899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17457,
											"end": 17899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17457,
											"end": 17899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17457,
											"end": 17899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17457,
											"end": 17899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17905,
											"end": 18023,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 17905,
											"end": 18023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17992,
											"end": 18016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 18010,
											"end": 18015,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17992,
											"end": 18016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 17992,
											"end": 18016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17992,
											"end": 18016,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 17992,
											"end": 18016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17987,
											"end": 17990,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17980,
											"end": 18017,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17905,
											"end": 18023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17905,
											"end": 18023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17905,
											"end": 18023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18029,
											"end": 18448,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 18029,
											"end": 18448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18168,
											"end": 18172,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18206,
											"end": 18208,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18195,
											"end": 18204,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18191,
											"end": 18209,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18183,
											"end": 18209,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18183,
											"end": 18209,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18219,
											"end": 18290,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 18287,
											"end": 18288,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18276,
											"end": 18285,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18272,
											"end": 18289,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18263,
											"end": 18269,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18219,
											"end": 18290,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 18219,
											"end": 18290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18219,
											"end": 18290,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 18219,
											"end": 18290,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18337,
											"end": 18346,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18331,
											"end": 18335,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18327,
											"end": 18347,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18322,
											"end": 18324,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18311,
											"end": 18320,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18307,
											"end": 18325,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18300,
											"end": 18348,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18365,
											"end": 18441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 18436,
											"end": 18440,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18427,
											"end": 18433,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18365,
											"end": 18441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 18365,
											"end": 18441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18365,
											"end": 18441,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 18365,
											"end": 18441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18357,
											"end": 18441,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18357,
											"end": 18441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18029,
											"end": 18448,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 18029,
											"end": 18448,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18029,
											"end": 18448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18029,
											"end": 18448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18029,
											"end": 18448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18029,
											"end": 18448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18454,
											"end": 18840,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 18454,
											"end": 18840,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18558,
											"end": 18561,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18586,
											"end": 18624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 18618,
											"end": 18623,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18586,
											"end": 18624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 18586,
											"end": 18624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18586,
											"end": 18624,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 18586,
											"end": 18624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18640,
											"end": 18728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 18721,
											"end": 18727,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18716,
											"end": 18719,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18640,
											"end": 18728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 18640,
											"end": 18728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18640,
											"end": 18728,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 18640,
											"end": 18728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18633,
											"end": 18728,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 18633,
											"end": 18728,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18737,
											"end": 18802,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 18795,
											"end": 18801,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18790,
											"end": 18793,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18783,
											"end": 18787,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18776,
											"end": 18781,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18772,
											"end": 18788,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18737,
											"end": 18802,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 18737,
											"end": 18802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18737,
											"end": 18802,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 18737,
											"end": 18802,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18827,
											"end": 18833,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18822,
											"end": 18825,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18818,
											"end": 18834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18811,
											"end": 18834,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18811,
											"end": 18834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18562,
											"end": 18840,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18454,
											"end": 18840,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18454,
											"end": 18840,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18454,
											"end": 18840,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18454,
											"end": 18840,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18454,
											"end": 18840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18846,
											"end": 19117,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 18846,
											"end": 19117,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18976,
											"end": 18979,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18998,
											"end": 19091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 19087,
											"end": 19090,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19078,
											"end": 19084,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18998,
											"end": 19091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 18998,
											"end": 19091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18998,
											"end": 19091,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 18998,
											"end": 19091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18991,
											"end": 19091,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18991,
											"end": 19091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19108,
											"end": 19111,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19101,
											"end": 19111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19101,
											"end": 19111,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18846,
											"end": 19117,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18846,
											"end": 19117,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18846,
											"end": 19117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18846,
											"end": 19117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18846,
											"end": 19117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19123,
											"end": 19266,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 19123,
											"end": 19266,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19180,
											"end": 19185,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19211,
											"end": 19217,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19205,
											"end": 19218,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19196,
											"end": 19218,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19196,
											"end": 19218,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19227,
											"end": 19260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 19254,
											"end": 19259,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19227,
											"end": 19260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 19227,
											"end": 19260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19227,
											"end": 19260,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 19227,
											"end": 19260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19123,
											"end": 19266,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19123,
											"end": 19266,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19123,
											"end": 19266,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19123,
											"end": 19266,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19123,
											"end": 19266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19272,
											"end": 19623,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 19272,
											"end": 19623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19342,
											"end": 19348,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19391,
											"end": 19393,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19379,
											"end": 19388,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19370,
											"end": 19377,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19366,
											"end": 19389,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19362,
											"end": 19394,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 19359,
											"end": 19478,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19359,
											"end": 19478,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 19359,
											"end": 19478,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19397,
											"end": 19476,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 19397,
											"end": 19476,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 19397,
											"end": 19476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19397,
											"end": 19476,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 19397,
											"end": 19476,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19359,
											"end": 19478,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 19359,
											"end": 19478,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19517,
											"end": 19518,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19542,
											"end": 19606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 19598,
											"end": 19605,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19589,
											"end": 19595,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19578,
											"end": 19587,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19574,
											"end": 19596,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 19542,
											"end": 19606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19606,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 19542,
											"end": 19606,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19532,
											"end": 19606,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19532,
											"end": 19606,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19488,
											"end": 19616,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19272,
											"end": 19623,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19272,
											"end": 19623,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19272,
											"end": 19623,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19272,
											"end": 19623,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19272,
											"end": 19623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19629,
											"end": 19715,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 19629,
											"end": 19715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19664,
											"end": 19671,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19704,
											"end": 19708,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 19697,
											"end": 19702,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19693,
											"end": 19709,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19682,
											"end": 19709,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19682,
											"end": 19709,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19629,
											"end": 19715,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19629,
											"end": 19715,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19629,
											"end": 19715,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19629,
											"end": 19715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19721,
											"end": 19833,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 19721,
											"end": 19833,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19804,
											"end": 19826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 19820,
											"end": 19825,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19804,
											"end": 19826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 19804,
											"end": 19826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19804,
											"end": 19826,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 19804,
											"end": 19826,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19799,
											"end": 19802,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19792,
											"end": 19827,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19721,
											"end": 19833,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19721,
											"end": 19833,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19721,
											"end": 19833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19839,
											"end": 20384,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 19839,
											"end": 20384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20012,
											"end": 20016,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20050,
											"end": 20053,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 20039,
											"end": 20048,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20035,
											"end": 20054,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20027,
											"end": 20054,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20027,
											"end": 20054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20064,
											"end": 20135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 20132,
											"end": 20133,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20121,
											"end": 20130,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20117,
											"end": 20134,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20108,
											"end": 20114,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 20064,
											"end": 20135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 20064,
											"end": 20135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20064,
											"end": 20135,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 20064,
											"end": 20135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20145,
											"end": 20213,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 20209,
											"end": 20211,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20198,
											"end": 20207,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20194,
											"end": 20212,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20185,
											"end": 20191,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 20145,
											"end": 20213,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 20145,
											"end": 20213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20145,
											"end": 20213,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 20145,
											"end": 20213,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20223,
											"end": 20295,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 20291,
											"end": 20293,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 20280,
											"end": 20289,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20276,
											"end": 20294,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20267,
											"end": 20273,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20223,
											"end": 20295,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 20223,
											"end": 20295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20223,
											"end": 20295,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 20223,
											"end": 20295,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20305,
											"end": 20377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 20373,
											"end": 20375,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 20362,
											"end": 20371,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20358,
											"end": 20376,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20349,
											"end": 20355,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20305,
											"end": 20377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 20305,
											"end": 20377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20305,
											"end": 20377,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 20305,
											"end": 20377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19839,
											"end": 20384,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 19839,
											"end": 20384,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 19839,
											"end": 20384,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19839,
											"end": 20384,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19839,
											"end": 20384,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19839,
											"end": 20384,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19839,
											"end": 20384,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19839,
											"end": 20384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"Bytecode.sol",
								"ERC6551Account.sol",
								"IERC6551Account.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"executeCall(address,uint256,bytes)": "9e5d4c49",
							"executeCallTransferToken(address,address,uint256)": "7d6ad95d",
							"isValidSignature(bytes32,bytes)": "1626ba7e",
							"owner()": "8da5cb5b",
							"supportsInterface(bytes4)": "01ffc9a7",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"InvalidCodeAtRange\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"executeCallTransferToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeCall(address,uint256,bytes)\":{\"details\":\"Executes `call` on address `to`, with value `value` and calldata `data`. MUST revert and bubble up errors if call fails. By default, token bound accounts MUST allow the owner of the ERC-721 token which owns the account to execute arbitrary calls using `executeCall`. Token bound accounts MAY implement additional authorization mechanisms which limit the ability of the ERC-721 token holder to execute calls. Token bound accounts MAY implement additional execution functions which grant execution permissions to other non-owner accounts.\",\"returns\":{\"result\":\"The result of the call\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}},\"owner()\":{\"details\":\"Returns the owner of the ERC-721 token which controls the account if the token exists. This is value is obtained by calling `ownerOf` on the ERC-721 contract.\",\"returns\":{\"_0\":\"Address of the owner of the ERC-721 token which owns the account\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"token()\":{\"details\":\"Returns identifier of the ERC-721 token which owns the account The return value of this function MUST be constant - it MUST NOT change over time.\",\"returns\":{\"chainId\":\"The EIP-155 ID of the chain the ERC-721 token exists on\",\"tokenContract\":\"The contract address of the ERC-721 token\",\"tokenId\":\"The ID of the ERC-721 token\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC6551Account.sol\":\"ExampleERC6551Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf26647553721236b84a0687ea322ccaeb4241141408442fdc471a1c0a26118c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1acb6443850848b6003fb94e9435305cbb33bb5fd55e2f201b8e9fecf5efd07\",\"dweb:/ipfs/QmRei3tvaveDPEYG6EaLYaUTX5Be7AYUuC81MhF4xZtyEX\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"Bytecode.sol\":{\"keccak256\":\"0x0088e4b682739d435694d1e9586706cd933c17a8d2b471c999308b7e50cd2f7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://751b131ee7d1b49e97dd5d8f12b19a956fb0e259c18aa9445ec78d6bcf5848e4\",\"dweb:/ipfs/QmcNooimfYnZh3xvDi6bANzCHuZBGxQybwv3xsVZi4XLM2\"]},\"ERC6551Account.sol\":{\"keccak256\":\"0x5b6d566ceec1a3ac81ec9c6ee943dbc2f0a27f3bc9e500dce08a3182fd61c0d7\",\"urls\":[\"bzz-raw://933ccb12ba5b80d3e7bad876a953be0d2452f78d533de1d235f11be8032e1532\",\"dweb:/ipfs/QmSk1ZVagmEgU3Kv6Brh6DKcGPPcJXpJhYhh6VkkaFGddh\"]},\"IERC6551Account.sol\":{\"keccak256\":\"0x883166a9ae010963ea8194310ca4ed0f6c99dc7d2f43e9f3686af298b4d5965a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2adcd8793133c904644960c4ba07690e5b74b57c27d3df8c55a331be281e7b1e\",\"dweb:/ipfs/Qmbojmu8f4DuwtKsP4tmGmXFhi2TSqHngxzCDMcRDNoXYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC6551Account.sol": {
				"IERC6551Account": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "executeCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "the ERC-165 identifier for this interface is `0x400a0398`",
						"kind": "dev",
						"methods": {
							"executeCall(address,uint256,bytes)": {
								"details": "Executes `call` on address `to`, with value `value` and calldata `data`. MUST revert and bubble up errors if call fails. By default, token bound accounts MUST allow the owner of the ERC-721 token which owns the account to execute arbitrary calls using `executeCall`. Token bound accounts MAY implement additional authorization mechanisms which limit the ability of the ERC-721 token holder to execute calls. Token bound accounts MAY implement additional execution functions which grant execution permissions to other non-owner accounts.",
								"returns": {
									"_0": "The result of the call"
								}
							},
							"owner()": {
								"details": "Returns the owner of the ERC-721 token which controls the account if the token exists. This is value is obtained by calling `ownerOf` on the ERC-721 contract.",
								"returns": {
									"_0": "Address of the owner of the ERC-721 token which owns the account"
								}
							},
							"token()": {
								"details": "Returns identifier of the ERC-721 token which owns the account The return value of this function MUST be constant - it MUST NOT change over time.",
								"returns": {
									"chainId": "The EIP-155 ID of the chain the ERC-721 token exists on",
									"tokenContract": "The contract address of the ERC-721 token",
									"tokenId": "The ID of the ERC-721 token"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"executeCall(address,uint256,bytes)": "9e5d4c49",
							"owner()": "8da5cb5b",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"the ERC-165 identifier for this interface is `0x400a0398`\",\"kind\":\"dev\",\"methods\":{\"executeCall(address,uint256,bytes)\":{\"details\":\"Executes `call` on address `to`, with value `value` and calldata `data`. MUST revert and bubble up errors if call fails. By default, token bound accounts MUST allow the owner of the ERC-721 token which owns the account to execute arbitrary calls using `executeCall`. Token bound accounts MAY implement additional authorization mechanisms which limit the ability of the ERC-721 token holder to execute calls. Token bound accounts MAY implement additional execution functions which grant execution permissions to other non-owner accounts.\",\"returns\":{\"_0\":\"The result of the call\"}},\"owner()\":{\"details\":\"Returns the owner of the ERC-721 token which controls the account if the token exists. This is value is obtained by calling `ownerOf` on the ERC-721 contract.\",\"returns\":{\"_0\":\"Address of the owner of the ERC-721 token which owns the account\"}},\"token()\":{\"details\":\"Returns identifier of the ERC-721 token which owns the account The return value of this function MUST be constant - it MUST NOT change over time.\",\"returns\":{\"chainId\":\"The EIP-155 ID of the chain the ERC-721 token exists on\",\"tokenContract\":\"The contract address of the ERC-721 token\",\"tokenId\":\"The ID of the ERC-721 token\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC6551Account.sol\":\"IERC6551Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC6551Account.sol\":{\"keccak256\":\"0x883166a9ae010963ea8194310ca4ed0f6c99dc7d2f43e9f3686af298b4d5965a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2adcd8793133c904644960c4ba07690e5b74b57c27d3df8c55a331be281e7b1e\",\"dweb:/ipfs/Qmbojmu8f4DuwtKsP4tmGmXFhi2TSqHngxzCDMcRDNoXYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> ERC6551Account.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ERC6551Account.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1271.sol",
					"exportedSymbols": {
						"IERC1271": [
							13
						]
					},
					"id": 14,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1271",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "117:189:0",
								"text": " @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "IERC1271",
							"nameLocation": "317:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "332:220:0",
										"text": " @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"
									},
									"functionSelector": "1626ba7e",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "566:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "591:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "583:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "610:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "597:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 6,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "597:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:38:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "651:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "644:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 9,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "644:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "643:19:0"
									},
									"scope": 13,
									"src": "557:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 14,
							"src": "307:358:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "92:574:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							91
						]
					},
					"id": 92,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 15,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 16,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 25,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 34,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 91,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 91,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 91,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 91,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 78,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 75,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 91,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 91,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 92,
							"src": "202:2534:1",
							"usedErrors": [],
							"usedEvents": [
								25,
								34
							]
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							913
						],
						"IERC721": [
							207
						]
					},
					"id": 208,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 94,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 208,
							"sourceUnit": 914,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 96,
										"name": "IERC165",
										"nameLocations": [
											"271:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 913,
										"src": "271:7:2"
									},
									"id": 97,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 95,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 207,
							"linearizedBaseContracts": [
								207,
								913
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 106,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 115,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 124,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 207,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 207,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1843:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1835:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1857:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1849:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1869:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1861:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1893:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1878:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1878:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:64:2"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:2"
									},
									"scope": 207,
									"src": "1809:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "1914:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2615:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2640:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2632:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2632:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2654:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2646:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2666:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2658:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2631:43:2"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2683:0:2"
									},
									"scope": 207,
									"src": "2606:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "2690:732:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3436:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3457:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "3449:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3471:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "3463:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3483:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "3475:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3448:43:2"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3500:0:2"
									},
									"scope": 207,
									"src": "3427:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "3507:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3973:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3989:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "3981:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3981:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4001:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "3993:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:29:2"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4018:0:2"
									},
									"scope": 207,
									"src": "3964:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "4025:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4348:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4374:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "4366:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4389:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "4384:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:33:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4407:0:2"
									},
									"scope": 207,
									"src": "4339:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "4414:148:2",
										"text": " @dev Returns the account approved for `tokenId` token.custodian\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4576:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4596:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4588:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4587:17:2"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4636:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4628:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:18:2"
									},
									"scope": 207,
									"src": "4567:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "4652:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4804:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4829:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "4821:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4821:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4844:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "4836:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4820:33:2"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "4877:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4877:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4876:6:2"
									},
									"scope": 207,
									"src": "4795:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 208,
							"src": "250:4635:2",
							"usedErrors": [],
							"usedEvents": [
								106,
								115,
								124
							]
						}
					],
					"src": "108:4778:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1779
						],
						"SignedMath": [
							1884
						],
						"Strings": [
							436
						]
					},
					"id": 437,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 209,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 210,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 437,
							"sourceUnit": 1780,
							"src": "126:25:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 211,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 437,
							"sourceUnit": 1885,
							"src": "152:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 212,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:3",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 436,
							"linearizedBaseContracts": [
								436
							],
							"name": "Strings",
							"nameLocation": "228:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 215,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 436,
									"src": "242:54:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 213,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 214,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 218,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 436,
									"src": "302:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 216,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 217,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "518:625:3",
										"statements": [
											{
												"id": 264,
												"nodeType": "UncheckedBlock",
												"src": "528:609:3",
												"statements": [
													{
														"assignments": [
															227
														],
														"declarations": [
															{
																"constant": false,
																"id": 227,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 264,
																"src": "552:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 226,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 234,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 230,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "580:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 228,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "569:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1779_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:3",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1616,
																	"src": "569:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:3"
													},
													{
														"assignments": [
															236
														],
														"declarations": [
															{
																"constant": false,
																"id": 236,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 264,
																"src": "604:20:3",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 235,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 241,
														"initialValue": {
															"arguments": [
																{
																	"id": 239,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "638:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 237,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:3"
													},
													{
														"assignments": [
															243
														],
														"declarations": [
															{
																"constant": false,
																"id": 243,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:3",
																"nodeType": "VariableDeclaration",
																"scope": 264,
																"src": "659:11:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 242,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 244,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:3"
													},
													{
														"AST": {
															"nativeSrc": "740:67:3",
															"nodeType": "YulBlock",
															"src": "740:67:3",
															"statements": [
																{
																	"nativeSrc": "758:35:3",
																	"nodeType": "YulAssignment",
																	"src": "758:35:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "769:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "781:2:3",
																						"nodeType": "YulLiteral",
																						"src": "781:2:3",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "785:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "777:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:3"
																				},
																				"nativeSrc": "777:15:3",
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "765:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:3"
																		},
																		"nativeSrc": "765:28:3",
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:3"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "758:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:3"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 236,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:3",
																"valueSize": 1
															},
															{
																"declaration": 227,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:3",
																"valueSize": 1
															},
															{
																"declaration": 243,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:3",
																"valueSize": 1
															}
														],
														"id": 245,
														"nodeType": "InlineAssembly",
														"src": "731:76:3"
													},
													{
														"body": {
															"id": 260,
															"nodeType": "Block",
															"src": "833:267:3",
															"statements": [
																{
																	"expression": {
																		"id": 248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:3",
																		"subExpression": {
																			"id": 247,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 243,
																			"src": "851:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 249,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:3"
																},
																{
																	"AST": {
																		"nativeSrc": "934:84:3",
																		"nodeType": "YulBlock",
																		"src": "934:84:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "964:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "978:5:3",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:3"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "985:2:3",
																											"nodeType": "YulLiteral",
																											"src": "985:2:3",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "974:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:3"
																									},
																									"nativeSrc": "974:14:3",
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:3"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "990:8:3",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:3"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "969:4:3",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:3"
																							},
																							"nativeSrc": "969:30:3",
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:3"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "956:7:3",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:3"
																					},
																					"nativeSrc": "956:44:3",
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:3"
																				},
																				"nativeSrc": "956:44:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:3"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 215,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 243,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 221,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:3",
																			"valueSize": 1
																		}
																	],
																	"id": 250,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:3"
																},
																{
																	"expression": {
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 251,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "1035:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 254,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 255,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "1068:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 259,
																	"nodeType": "IfStatement",
																	"src": "1064:21:3",
																	"trueBody": {
																		"id": 258,
																		"nodeType": "Break",
																		"src": "1080:5:3"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 261,
														"nodeType": "WhileStatement",
														"src": "820:280:3"
													},
													{
														"expression": {
															"id": 262,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "1120:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 225,
														"id": 263,
														"nodeType": "Return",
														"src": "1113:13:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "465:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:3"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "503:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 223,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:3"
									},
									"scope": 436,
									"src": "447:696:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "1313:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 278,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 269,
																			"src": "1354:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:3",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 287,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 269,
																					"src": "1400:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 285,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1884,
																					"src": "1385:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$1884_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:3",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1883,
																				"src": "1385:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 284,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			266,
																			294
																		],
																		"referencedDeclaration": 266,
																		"src": "1376:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 276,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:3",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 274,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 273,
												"id": 292,
												"nodeType": "Return",
												"src": "1323:86:3"
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:3",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "1261:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 268,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:3"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "1298:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 271,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:3"
									},
									"scope": 436,
									"src": "1243:173:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "1595:100:3",
										"statements": [
											{
												"id": 312,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 303,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 297,
																	"src": "1648:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 306,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 297,
																				"src": "1667:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 304,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1779,
																				"src": "1655:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1779_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:3",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1739,
																			"src": "1655:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 302,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	314,
																	390,
																	410
																],
																"referencedDeclaration": 390,
																"src": "1636:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 301,
														"id": 311,
														"nodeType": "Return",
														"src": "1629:49:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "1542:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:3"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "1580:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 299,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:3"
									},
									"scope": 436,
									"src": "1521:174:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "1908:347:3",
										"statements": [
											{
												"assignments": [
													325
												],
												"declarations": [
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "1918:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 324,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 329,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "1954:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 326,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:3"
											},
											{
												"expression": {
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 335,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "1975:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 337,
														"indexExpression": {
															"hexValue": "30",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:3"
											},
											{
												"expression": {
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 341,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "2000:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 343,
														"indexExpression": {
															"hexValue": "31",
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:3"
											},
											{
												"body": {
													"id": 375,
													"nodeType": "Block",
													"src": "2070:83:3",
													"statements": [
														{
															"expression": {
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 361,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 325,
																		"src": "2084:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 363,
																	"indexExpression": {
																		"id": 362,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "2091:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 364,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2096:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 368,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 365,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 317,
																			"src": "2105:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 370,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:3"
														},
														{
															"expression": {
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 371,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "2131:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 374,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 355,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "2058:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 376,
												"initializationExpression": {
													"assignments": [
														348
													],
													"declarations": [
														{
															"constant": false,
															"id": 348,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 376,
															"src": "2030:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 347,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 354,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 350,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "2046:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:3"
												},
												"loopExpression": {
													"expression": {
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:3",
														"subExpression": {
															"id": 358,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "2067:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 360,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:3"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 378,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "2170:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 377,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 386,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "2241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 384,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 323,
												"id": 388,
												"nodeType": "Return",
												"src": "2227:21:3"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1839:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1854:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:3"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1893:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:3"
									},
									"scope": 436,
									"src": "1818:437:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "2480:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 403,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2525:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 401,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 399,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 406,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2533:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 398,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															314,
															390,
															410
														],
														"referencedDeclaration": 390,
														"src": "2497:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 397,
												"id": 408,
												"nodeType": "Return",
												"src": "2490:59:3"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:3",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "2428:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:3"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "2465:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 395,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:3"
									},
									"scope": 436,
									"src": "2407:149:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "2711:66:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 423,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "2744:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 421,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 420,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 429,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "2767:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 427,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 426,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 419,
												"id": 433,
												"nodeType": "Return",
												"src": "2721:49:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:3",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "2648:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 412,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "2665:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 414,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:3"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "2705:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:3"
									},
									"scope": 436,
									"src": "2633:144:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 437,
							"src": "220:2559:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2679:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							802
						],
						"Math": [
							1779
						],
						"SignedMath": [
							1884
						],
						"Strings": [
							436
						]
					},
					"id": 803,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 438,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 439,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 803,
							"sourceUnit": 437,
							"src": "137:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 440,
								"nodeType": "StructuredDocumentation",
								"src": "163:205:4",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 802,
							"linearizedBaseContracts": [
								802
							],
							"name": "ECDSA",
							"nameLocation": "377:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 446,
									"members": [
										{
											"id": 441,
											"name": "NoError",
											"nameLocation": "417:7:4",
											"nodeType": "EnumValue",
											"src": "417:7:4"
										},
										{
											"id": 442,
											"name": "InvalidSignature",
											"nameLocation": "434:16:4",
											"nodeType": "EnumValue",
											"src": "434:16:4"
										},
										{
											"id": 443,
											"name": "InvalidSignatureLength",
											"nameLocation": "460:22:4",
											"nodeType": "EnumValue",
											"src": "460:22:4"
										},
										{
											"id": 444,
											"name": "InvalidSignatureS",
											"nameLocation": "492:17:4",
											"nodeType": "EnumValue",
											"src": "492:17:4"
										},
										{
											"id": 445,
											"name": "InvalidSignatureV",
											"nameLocation": "519:17:4",
											"nodeType": "EnumValue",
											"src": "519:17:4"
										}
									],
									"name": "RecoverError",
									"nameLocation": "394:12:4",
									"nodeType": "EnumDefinition",
									"src": "389:175:4"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "624:457:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$446",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 452,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "638:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$446",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 453,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "647:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$446_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "660:7:4",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 441,
														"src": "647:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$446",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "638:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$446",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 458,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "734:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$446",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 459,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "743:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$446_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "756:16:4",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 442,
															"src": "743:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$446",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "734:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$446",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "843:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$446",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 468,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "852:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$446_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "865:22:4",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 443,
																"src": "852:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$446",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "843:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$446",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 476,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "965:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$446",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 477,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "974:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$446_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "987:17:4",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 444,
																	"src": "974:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$446",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "965:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 485,
															"nodeType": "IfStatement",
															"src": "961:114:4",
															"trueBody": {
																"id": 484,
																"nodeType": "Block",
																"src": "1006:69:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
																					"id": 481,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1027:36:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					},
																					"value": "ECDSA: invalid signature 's' value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					}
																				],
																				"id": 480,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "1020:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1020:44:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 483,
																		"nodeType": "ExpressionStatement",
																		"src": "1020:44:4"
																	}
																]
															}
														},
														"id": 486,
														"nodeType": "IfStatement",
														"src": "839:236:4",
														"trueBody": {
															"id": 475,
															"nodeType": "Block",
															"src": "889:66:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																				"id": 472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "910:33:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				},
																				"value": "ECDSA: invalid signature length"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				}
																			],
																			"id": 471,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "903:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "903:41:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 474,
																	"nodeType": "ExpressionStatement",
																	"src": "903:41:4"
																}
															]
														}
													},
													"id": 487,
													"nodeType": "IfStatement",
													"src": "730:345:4",
													"trueBody": {
														"id": 466,
														"nodeType": "Block",
														"src": "774:59:4",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																			"id": 463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "795:26:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			},
																			"value": "ECDSA: invalid signature"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			}
																		],
																		"id": 462,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "788:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "788:34:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 465,
																"nodeType": "ExpressionStatement",
																"src": "788:34:4"
															}
														]
													}
												},
												"id": 488,
												"nodeType": "IfStatement",
												"src": "634:441:4",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "669:55:4",
													"statements": [
														{
															"functionReturnParameters": 451,
															"id": 456,
															"nodeType": "Return",
															"src": "683:7:4"
														}
													]
												}
											}
										]
									},
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "579:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "604:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "591:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$446",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 448,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 447,
														"name": "RecoverError",
														"nameLocations": [
															"591:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 446,
														"src": "591:12:4"
													},
													"referencedDeclaration": 446,
													"src": "591:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$446",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:20:4"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:0:4"
									},
									"scope": 802,
									"src": "570:511:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "2249:626:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 503,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "2263:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2273:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2283:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2263:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 533,
													"nodeType": "Block",
													"src": "2788:81:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2818:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2810:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 525,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2810:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2810:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 529,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 446,
																			"src": "2822:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$446_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2835:22:4",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 443,
																		"src": "2822:35:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$446",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 531,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2809:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$446_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 502,
															"id": 532,
															"nodeType": "Return",
															"src": "2802:56:4"
														}
													]
												},
												"id": 534,
												"nodeType": "IfStatement",
												"src": "2259:610:4",
												"trueBody": {
													"id": 524,
													"nodeType": "Block",
													"src": "2287:495:4",
													"statements": [
														{
															"assignments": [
																508
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 508,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2309:1:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 524,
																	"src": "2301:9:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 507,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2301:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 509,
															"nodeType": "VariableDeclarationStatement",
															"src": "2301:9:4"
														},
														{
															"assignments": [
																511
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 511,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2332:1:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 524,
																	"src": "2324:9:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 510,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2324:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 512,
															"nodeType": "VariableDeclarationStatement",
															"src": "2324:9:4"
														},
														{
															"assignments": [
																514
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 514,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2353:1:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 524,
																	"src": "2347:7:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 513,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2347:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 515,
															"nodeType": "VariableDeclarationStatement",
															"src": "2347:7:4"
														},
														{
															"AST": {
																"nativeSrc": "2555:171:4",
																"nodeType": "YulBlock",
																"src": "2555:171:4",
																"statements": [
																	{
																		"nativeSrc": "2573:32:4",
																		"nodeType": "YulAssignment",
																		"src": "2573:32:4",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2588:9:4",
																							"nodeType": "YulIdentifier",
																							"src": "2588:9:4"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2599:4:4",
																							"nodeType": "YulLiteral",
																							"src": "2599:4:4",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2584:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "2584:3:4"
																					},
																					"nativeSrc": "2584:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2584:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2578:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2578:5:4"
																			},
																			"nativeSrc": "2578:27:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2578:27:4"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2573:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "2573:1:4"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2622:32:4",
																		"nodeType": "YulAssignment",
																		"src": "2622:32:4",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2637:9:4",
																							"nodeType": "YulIdentifier",
																							"src": "2637:9:4"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2648:4:4",
																							"nodeType": "YulLiteral",
																							"src": "2648:4:4",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2633:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "2633:3:4"
																					},
																					"nativeSrc": "2633:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2633:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2627:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2627:5:4"
																			},
																			"nativeSrc": "2627:27:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2627:27:4"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2622:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "2622:1:4"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2671:41:4",
																		"nodeType": "YulAssignment",
																		"src": "2671:41:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2681:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2681:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2694:9:4",
																									"nodeType": "YulIdentifier",
																									"src": "2694:9:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2705:4:4",
																									"nodeType": "YulLiteral",
																									"src": "2705:4:4",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2690:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "2690:3:4"
																							},
																							"nativeSrc": "2690:20:4",
																							"nodeType": "YulFunctionCall",
																							"src": "2690:20:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2684:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2684:5:4"
																					},
																					"nativeSrc": "2684:27:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2684:27:4"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2676:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "2676:4:4"
																			},
																			"nativeSrc": "2676:36:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2676:36:4"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2671:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "2671:1:4"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 508,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2573:1:4",
																	"valueSize": 1
																},
																{
																	"declaration": 511,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2622:1:4",
																	"valueSize": 1
																},
																{
																	"declaration": 495,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2588:9:4",
																	"valueSize": 1
																},
																{
																	"declaration": 495,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2637:9:4",
																	"valueSize": 1
																},
																{
																	"declaration": 495,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2694:9:4",
																	"valueSize": 1
																},
																{
																	"declaration": 514,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2671:1:4",
																	"valueSize": 1
																}
															],
															"id": 516,
															"nodeType": "InlineAssembly",
															"src": "2546:180:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 518,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "2757:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 519,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "2763:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 520,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "2766:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 521,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "2769:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 517,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		536,
																		610,
																		704
																	],
																	"referencedDeclaration": 704,
																	"src": "2746:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$446_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2746:25:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$446_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 502,
															"id": 523,
															"nodeType": "Return",
															"src": "2739:32:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "1087:1053:4",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2154:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2173:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2165:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 492,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2192:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2179:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 494,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2179:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:38:4"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2226:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2235:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$446",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 500,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 499,
														"name": "RecoverError",
														"nameLocations": [
															"2235:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 446,
														"src": "2235:12:4"
													},
													"referencedDeclaration": 446,
													"src": "2235:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$446",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2225:23:4"
									},
									"scope": 802,
									"src": "2145:730:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "3748:140:4",
										"statements": [
											{
												"assignments": [
													547,
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3767:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "3759:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 546,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3759:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3791:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "3778:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$446",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 549,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 548,
																"name": "RecoverError",
																"nameLocations": [
																	"3778:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 446,
																"src": "3778:12:4"
															},
															"referencedDeclaration": 446,
															"src": "3778:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$446",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 555,
												"initialValue": {
													"arguments": [
														{
															"id": 552,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "3811:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 553,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "3817:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 551,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															536,
															610,
															704
														],
														"referencedDeclaration": 536,
														"src": "3800:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$446_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3800:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$446_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3758:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 557,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3849:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$446",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$446",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 556,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "3837:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$446_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3837:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "3837:18:4"
											},
											{
												"expression": {
													"id": 560,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 547,
													"src": "3872:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 545,
												"id": 561,
												"nodeType": "Return",
												"src": "3865:16:4"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "2881:775:4",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3670:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3686:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3678:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 538,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3678:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3705:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3692:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 540,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3692:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3677:38:4"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3739:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:9:4"
									},
									"scope": 802,
									"src": "3661:227:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "4245:203:4",
										"statements": [
											{
												"assignments": [
													579
												],
												"declarations": [
													{
														"constant": false,
														"id": 579,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "4263:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 609,
														"src": "4255:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 578,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4255:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 580,
														"name": "vs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "4267:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4280:66:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																},
																"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																}
															],
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4272:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 581,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4272:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4272:75:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4267:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4255:92:4"
											},
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "4363:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 609,
														"src": "4357:7:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 587,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4357:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 601,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 593,
																					"name": "vs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 570,
																					"src": "4382:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 592,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4374:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 591,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4374:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4374:11:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"hexValue": "323535",
																			"id": 595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4389:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"value": "255"
																		},
																		"src": "4374:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 597,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4373:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3237",
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4396:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_27_by_1",
																	"typeString": "int_const 27"
																},
																"value": "27"
															},
															"src": "4373:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4367:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 589,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4367:5:4",
															"typeDescriptions": {}
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4367:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4357:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 603,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "4427:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 604,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "4433:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 605,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "4436:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 606,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "4439:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 602,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															536,
															610,
															704
														],
														"referencedDeclaration": 704,
														"src": "4416:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$446_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4416:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$446_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 577,
												"id": 608,
												"nodeType": "Return",
												"src": "4409:32:4"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "3894:243:4",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"
									},
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4151:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4170:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "4162:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 565,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4162:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4184:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "4176:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 567,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4176:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4195:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "4187:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 569,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4161:37:4"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "4222:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "4231:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$446",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 575,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 574,
														"name": "RecoverError",
														"nameLocations": [
															"4231:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 446,
														"src": "4231:12:4"
													},
													"referencedDeclaration": 446,
													"src": "4231:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$446",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4221:23:4"
									},
									"scope": 802,
									"src": "4142:306:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "4699:136:4",
										"statements": [
											{
												"assignments": [
													623,
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4718:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "4710:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 622,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4710:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4742:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "4729:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$446",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 625,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 624,
																"name": "RecoverError",
																"nameLocations": [
																	"4729:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 446,
																"src": "4729:12:4"
															},
															"referencedDeclaration": 446,
															"src": "4729:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$446",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 632,
												"initialValue": {
													"arguments": [
														{
															"id": 628,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "4762:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 629,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "4768:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 630,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "4771:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 627,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															536,
															610,
															704
														],
														"referencedDeclaration": 610,
														"src": "4751:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$446_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4751:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$446_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4709:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 634,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4796:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$446",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$446",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 633,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "4784:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$446_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4784:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "4784:18:4"
											},
											{
												"expression": {
													"id": 637,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 623,
													"src": "4819:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 621,
												"id": 638,
												"nodeType": "Return",
												"src": "4812:16:4"
											}
										]
									},
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "4454:154:4",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4622:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4638:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4630:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 612,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4630:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4652:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4644:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 614,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4663:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4655:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 616,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4655:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4629:37:4"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4690:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4690:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4689:9:4"
									},
									"scope": 802,
									"src": "4613:222:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "5120:1345:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 659,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "6016:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6008:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 657,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6008:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6008:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6021:66:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6008:79:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 672,
												"nodeType": "IfStatement",
												"src": "6004:161:4",
												"trueBody": {
													"id": 671,
													"nodeType": "Block",
													"src": "6089:76:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 665,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6119:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6111:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 663,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6111:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6111:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 667,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 446,
																			"src": "6123:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$446_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6136:17:4",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 444,
																		"src": "6123:30:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$446",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 669,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6110:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$446_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 656,
															"id": 670,
															"nodeType": "Return",
															"src": "6103:51:4"
														}
													]
												}
											},
											{
												"assignments": [
													674
												],
												"declarations": [
													{
														"constant": false,
														"id": 674,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6267:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 703,
														"src": "6259:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 673,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6259:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 681,
												"initialValue": {
													"arguments": [
														{
															"id": 676,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "6286:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 677,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "6292:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 678,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "6295:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 679,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "6298:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 675,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6276:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6276:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6259:41:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 682,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "6314:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6332:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6324:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 683,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6324:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6324:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6314:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 697,
												"nodeType": "IfStatement",
												"src": "6310:101:4",
												"trueBody": {
													"id": 696,
													"nodeType": "Block",
													"src": "6336:75:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6366:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6358:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 688,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6358:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6358:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 692,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 446,
																			"src": "6370:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$446_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6383:16:4",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 442,
																		"src": "6370:29:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$446",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 694,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6357:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$446_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 656,
															"id": 695,
															"nodeType": "Return",
															"src": "6350:50:4"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 698,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "6429:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 699,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "6437:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$446_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6450:7:4",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 441,
															"src": "6437:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$446",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"id": 701,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6428:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$446_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 656,
												"id": 702,
												"nodeType": "Return",
												"src": "6421:37:4"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "4841:163:4",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5018:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5037:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "5029:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 642,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5049:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "5043:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 644,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5043:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5060:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "5052:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 646,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5052:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5071:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "5063:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 648,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5028:45:4"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "5097:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5097:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "5106:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$446",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 654,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 653,
														"name": "RecoverError",
														"nameLocations": [
															"5106:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 446,
														"src": "5106:12:4"
													},
													"referencedDeclaration": 446,
													"src": "5106:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$446",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5096:23:4"
									},
									"scope": 802,
									"src": "5009:1456:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "6692:138:4",
										"statements": [
											{
												"assignments": [
													719,
													722
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6711:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "6703:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 718,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6703:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 722,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6735:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "6722:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$446",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 721,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 720,
																"name": "RecoverError",
																"nameLocations": [
																	"6722:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 446,
																"src": "6722:12:4"
															},
															"referencedDeclaration": 446,
															"src": "6722:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$446",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 729,
												"initialValue": {
													"arguments": [
														{
															"id": 724,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "6755:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 725,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "6761:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 726,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "6764:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 727,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "6767:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 723,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															536,
															610,
															704
														],
														"referencedDeclaration": 704,
														"src": "6744:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$446_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6744:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$446_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6702:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 731,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "6791:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$446",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$446",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 730,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "6779:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$446_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6779:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "6779:18:4"
											},
											{
												"expression": {
													"id": 734,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 719,
													"src": "6814:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 717,
												"id": 735,
												"nodeType": "Return",
												"src": "6807:16:4"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "6471:122:4",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6607:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6623:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "6615:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 706,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6615:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6635:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "6629:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 708,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6629:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6646:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "6638:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 710,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6657:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "6649:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 712,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6649:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6614:45:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "6683:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6683:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6682:9:4"
									},
									"scope": 802,
									"src": "6598:232:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "7206:310:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "7362:148:4",
													"nodeType": "YulBlock",
													"src": "7362:148:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7383:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7383:4:4",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "7389:34:4",
																		"nodeType": "YulLiteral",
																		"src": "7389:34:4",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7376:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7376:6:4"
																},
																"nativeSrc": "7376:48:4",
																"nodeType": "YulFunctionCall",
																"src": "7376:48:4"
															},
															"nativeSrc": "7376:48:4",
															"nodeType": "YulExpressionStatement",
															"src": "7376:48:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7444:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7444:4:4",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "hash",
																		"nativeSrc": "7450:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "7450:4:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7437:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7437:6:4"
																},
																"nativeSrc": "7437:18:4",
																"nodeType": "YulFunctionCall",
																"src": "7437:18:4"
															},
															"nativeSrc": "7437:18:4",
															"nodeType": "YulExpressionStatement",
															"src": "7437:18:4"
														},
														{
															"nativeSrc": "7468:32:4",
															"nodeType": "YulAssignment",
															"src": "7468:32:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7489:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7489:4:4",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7495:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7495:4:4",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "7479:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "7479:9:4"
																},
																"nativeSrc": "7479:21:4",
																"nodeType": "YulFunctionCall",
																"src": "7479:21:4"
															},
															"variableNames": [
																{
																	"name": "message",
																	"nativeSrc": "7468:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "7468:7:4"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 740,
														"isOffset": false,
														"isSlot": false,
														"src": "7450:4:4",
														"valueSize": 1
													},
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "7468:7:4",
														"valueSize": 1
													}
												],
												"id": 745,
												"nodeType": "InlineAssembly",
												"src": "7353:157:4"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "6836:279:4",
										"text": " @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "7129:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "7160:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7152:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 739,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7152:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7151:14:4"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "7197:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7189:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 742,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7189:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7188:17:4"
									},
									"scope": 802,
									"src": "7120:396:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "7881:116:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7925:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 761,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 750,
																				"src": "7976:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7978:6:4",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "7976:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 759,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 436,
																			"src": "7959:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$436_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7967:8:4",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 266,
																		"src": "7959:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7959:26:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 764,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "7987:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 756,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7908:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7912:12:4",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "7908:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7908:81:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 755,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7898:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7898:92:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 754,
												"id": 767,
												"nodeType": "Return",
												"src": "7891:99:4"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "7522:274:4",
										"text": " @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "7810:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "7846:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "7833:14:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 749,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7833:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7832:16:4"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "7872:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 752,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7872:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7871:9:4"
									},
									"scope": 802,
									"src": "7801:196:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "8443:290:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8505:222:4",
													"nodeType": "YulBlock",
													"src": "8505:222:4",
													"statements": [
														{
															"nativeSrc": "8519:22:4",
															"nodeType": "YulVariableDeclaration",
															"src": "8519:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8536:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8536:4:4",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8530:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8530:5:4"
																},
																"nativeSrc": "8530:11:4",
																"nodeType": "YulFunctionCall",
																"src": "8530:11:4"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "8523:3:4",
																	"nodeType": "YulTypedName",
																	"src": "8523:3:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8561:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8561:3:4"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "8566:10:4",
																		"nodeType": "YulLiteral",
																		"src": "8566:10:4",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8554:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8554:6:4"
																},
																"nativeSrc": "8554:23:4",
																"nodeType": "YulFunctionCall",
																"src": "8554:23:4"
															},
															"nativeSrc": "8554:23:4",
															"nodeType": "YulExpressionStatement",
															"src": "8554:23:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8601:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "8601:3:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8606:4:4",
																				"nodeType": "YulLiteral",
																				"src": "8606:4:4",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8597:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8597:3:4"
																		},
																		"nativeSrc": "8597:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8597:14:4"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "8613:15:4",
																		"nodeType": "YulIdentifier",
																		"src": "8613:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8590:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8590:6:4"
																},
																"nativeSrc": "8590:39:4",
																"nodeType": "YulFunctionCall",
																"src": "8590:39:4"
															},
															"nativeSrc": "8590:39:4",
															"nodeType": "YulExpressionStatement",
															"src": "8590:39:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8653:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "8653:3:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8658:4:4",
																				"nodeType": "YulLiteral",
																				"src": "8658:4:4",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8649:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8649:3:4"
																		},
																		"nativeSrc": "8649:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8649:14:4"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "8665:10:4",
																		"nodeType": "YulIdentifier",
																		"src": "8665:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8642:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8642:6:4"
																},
																"nativeSrc": "8642:34:4",
																"nodeType": "YulFunctionCall",
																"src": "8642:34:4"
															},
															"nativeSrc": "8642:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "8642:34:4"
														},
														{
															"nativeSrc": "8689:28:4",
															"nodeType": "YulAssignment",
															"src": "8689:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8707:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8707:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8712:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8712:4:4",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "8697:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "8697:9:4"
																},
																"nativeSrc": "8697:20:4",
																"nodeType": "YulFunctionCall",
																"src": "8697:20:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8689:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8689:4:4"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 777,
														"isOffset": false,
														"isSlot": false,
														"src": "8689:4:4",
														"valueSize": 1
													},
													{
														"declaration": 772,
														"isOffset": false,
														"isSlot": false,
														"src": "8613:15:4",
														"valueSize": 1
													},
													{
														"declaration": 774,
														"isOffset": false,
														"isSlot": false,
														"src": "8665:10:4",
														"valueSize": 1
													}
												],
												"id": 779,
												"nodeType": "InlineAssembly",
												"src": "8496:231:4"
											}
										]
									},
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "8003:328:4",
										"text": " @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."
									},
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "8345:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "8369:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "8361:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 771,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8361:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "8394:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "8386:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 773,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8386:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8360:45:4"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8437:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "8429:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 776,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8429:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8428:14:4"
									},
									"scope": 802,
									"src": "8336:397:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "9048:80:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9092:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 795,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "9104:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 796,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "9115:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 792,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9075:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9079:12:4",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "9075:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9075:45:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 791,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9065:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9065:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 790,
												"id": 799,
												"nodeType": "Return",
												"src": "9058:63:4"
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "8739:193:4",
										"text": " @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "8946:31:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "8986:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "8978:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8978:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9010:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "8997:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 785,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8997:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8977:38:4"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "9039:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 788,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9038:9:4"
									},
									"scope": 802,
									"src": "8937:191:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 803,
							"src": "369:8761:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:9019:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
					"exportedSymbols": {
						"ECDSA": [
							802
						],
						"IERC1271": [
							13
						],
						"Math": [
							1779
						],
						"SignatureChecker": [
							901
						],
						"SignedMath": [
							1884
						],
						"Strings": [
							436
						]
					},
					"id": 902,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 804,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "./ECDSA.sol",
							"id": 805,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 902,
							"sourceUnit": 803,
							"src": "148:21:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1271.sol",
							"file": "../../interfaces/IERC1271.sol",
							"id": 806,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 902,
							"sourceUnit": 14,
							"src": "170:39:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignatureChecker",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 807,
								"nodeType": "StructuredDocumentation",
								"src": "211:294:5",
								"text": " @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n Argent and Gnosis Safe.\n _Available since v4.1._"
							},
							"fullyImplemented": true,
							"id": 901,
							"linearizedBaseContracts": [
								901
							],
							"name": "SignatureChecker",
							"nameLocation": "514:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "1126:254:5",
										"statements": [
											{
												"assignments": [
													820,
													823
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "1145:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "1137:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 819,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 823,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "1175:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "1156:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$446",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 822,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 821,
																"name": "ECDSA.RecoverError",
																"nameLocations": [
																	"1156:5:5",
																	"1162:12:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 446,
																"src": "1156:18:5"
															},
															"referencedDeclaration": 446,
															"src": "1156:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$446",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 829,
												"initialValue": {
													"arguments": [
														{
															"id": 826,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "1201:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 827,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "1207:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 824,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "1184:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$802_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1190:10:5",
														"memberName": "tryRecover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 536,
														"src": "1184:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$446_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1184:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$446_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1136:81:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_RecoverError_$446",
																		"typeString": "enum ECDSA.RecoverError"
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 830,
																		"name": "error",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 823,
																		"src": "1247:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$446",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"expression": {
																				"id": 831,
																				"name": "ECDSA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 802,
																				"src": "1256:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ECDSA_$802_$",
																					"typeString": "type(library ECDSA)"
																				}
																			},
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1262:12:5",
																			"memberName": "RecoverError",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 446,
																			"src": "1256:18:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$446_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1275:7:5",
																		"memberName": "NoError",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 441,
																		"src": "1256:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$446",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	"src": "1247:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 835,
																		"name": "recovered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "1286:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 836,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "1299:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1286:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1247:58:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 839,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1246:60:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 841,
																"name": "signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "1349:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 842,
																"name": "hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "1357:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 843,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "1363:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 840,
															"name": "isValidERC1271SignatureNow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "1322:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (address,bytes32,bytes memory) view returns (bool)"
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1322:51:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1246:127:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 818,
												"id": 846,
												"nodeType": "Return",
												"src": "1227:146:5"
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "537:472:5",
										"text": " @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignatureNow",
									"nameLocation": "1023:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1051:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1043:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1067:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1059:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 811,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1086:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1073:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1073:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:54:5"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1120:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 816,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1120:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:6:5"
									},
									"scope": 901,
									"src": "1014:366:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "1935:324:5",
										"statements": [
											{
												"assignments": [
													861,
													863
												],
												"declarations": [
													{
														"constant": false,
														"id": 861,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1951:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "1946:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 860,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1946:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "1973:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "1960:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 862,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1960:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 875,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 868,
																			"name": "IERC1271",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "2037:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1271_$13_$",
																				"typeString": "type(contract IERC1271)"
																			}
																		},
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2046:16:5",
																		"memberName": "isValidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 12,
																		"src": "2037:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																			"typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
																		}
																	},
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2063:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2037:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 871,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "2073:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 872,
																	"name": "signature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "2079:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 866,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2014:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2018:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2014:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2014:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 864,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "1983:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1990:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "1983:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1983:116:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1945:154:5"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 876,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "2117:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 877,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 863,
																			"src": "2140:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2147:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2140:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "3332",
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2157:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"src": "2140:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2117:42:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 884,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 863,
																			"src": "2186:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"components": [
																				{
																					"id": 886,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2195:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 885,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "2195:7:5",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"id": 887,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2194:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			}
																		],
																		"expression": {
																			"id": 882,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2175:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2179:6:5",
																		"memberName": "decode",
																		"nodeType": "MemberAccess",
																		"src": "2175:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2175:29:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 891,
																					"name": "IERC1271",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 13,
																					"src": "2216:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC1271_$13_$",
																						"typeString": "type(contract IERC1271)"
																					}
																				},
																				"id": 892,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2225:16:5",
																				"memberName": "isValidSignature",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 12,
																				"src": "2216:25:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
																				}
																			},
																			"id": 893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2242:8:5",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2216:34:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2208:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 889,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "2208:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2208:43:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2175:76:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2117:134:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 897,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2116:136:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 859,
												"id": 898,
												"nodeType": "Return",
												"src": "2109:143:5"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1386:395:5",
										"text": " @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n against the signer smart contract using ERC1271.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidERC1271SignatureNow",
									"nameLocation": "1795:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1839:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "1831:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1863:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "1855:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 852,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1855:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1890:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "1877:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 854,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1877:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1821:84:5"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "1929:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 857,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1929:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1928:6:5"
									},
									"scope": 901,
									"src": "1786:473:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 902,
							"src": "506:1755:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:2139:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							913
						]
					},
					"id": 914,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 903,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 904,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 913,
							"linearizedBaseContracts": [
								913
							],
							"name": "IERC165",
							"nameLocation": "415:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 912,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "801:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 906,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:6"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "844:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 909,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:6"
									},
									"scope": 913,
									"src": "774:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 914,
							"src": "405:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1779
						]
					},
					"id": 1780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 915,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 916,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:7",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1779,
							"linearizedBaseContracts": [
								1779
							],
							"name": "Math",
							"nameLocation": "210:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 920,
									"members": [
										{
											"id": 917,
											"name": "Down",
											"nameLocation": "245:4:7",
											"nodeType": "EnumValue",
											"src": "245:4:7"
										},
										{
											"id": 918,
											"name": "Up",
											"nameLocation": "287:2:7",
											"nodeType": "EnumValue",
											"src": "287:2:7"
										},
										{
											"id": 919,
											"name": "Zero",
											"nameLocation": "318:4:7",
											"nodeType": "EnumValue",
											"src": "318:4:7"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:7",
									"nodeType": "EnumDefinition",
									"src": "221:122:7"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "480:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 930,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "497:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 931,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "501:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 934,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "509:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:7",
													"trueExpression": {
														"id": 933,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "505:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 929,
												"id": 936,
												"nodeType": "Return",
												"src": "490:20:7"
											}
										]
									},
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:7",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "426:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "437:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:7"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "471:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:7"
									},
									"scope": 1779,
									"src": "413:104:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "655:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 948,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "672:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 949,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "676:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 952,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "684:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:7",
													"trueExpression": {
														"id": 951,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "680:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 947,
												"id": 954,
												"nodeType": "Return",
												"src": "665:20:7"
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:7",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "601:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "612:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:7"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "646:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:7"
									},
									"scope": 1779,
									"src": "588:104:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "876:82:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 966,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "931:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 967,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "935:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 969,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 970,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "941:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 971,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "945:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 973,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 965,
												"id": 977,
												"nodeType": "Return",
												"src": "923:28:7"
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:7",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "822:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "833:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:7"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "867:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:7"
									},
									"scope": 1779,
									"src": "805:153:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "1228:123:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 989,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "1316:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 993,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 982,
																			"src": "1330:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 996,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 997,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "1339:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:7",
													"trueExpression": {
														"hexValue": "30",
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 988,
												"id": 1002,
												"nodeType": "Return",
												"src": "1309:35:7"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:7",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "1174:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "1185:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:7"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "1219:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:7"
									},
									"scope": 1779,
									"src": "1157:194:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "1765:4115:7",
										"statements": [
											{
												"id": 1125,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:7",
												"statements": [
													{
														"assignments": [
															1017
														],
														"declarations": [
															{
																"constant": false,
																"id": 1017,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 1125,
																"src": "2096:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1016,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1018,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:7"
													},
													{
														"assignments": [
															1020
														],
														"declarations": [
															{
																"constant": false,
																"id": 1020,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 1125,
																"src": "2168:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1019,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1021,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:7"
													},
													{
														"AST": {
															"nativeSrc": "2248:157:7",
															"nodeType": "YulBlock",
															"src": "2248:157:7",
															"statements": [
																{
																	"nativeSrc": "2266:30:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2283:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:7"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2286:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2293:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2289:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:7"
																				},
																				"nativeSrc": "2289:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2276:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:7"
																		},
																		"nativeSrc": "2276:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:7"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2270:2:7",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2313:18:7",
																	"nodeType": "YulAssignment",
																	"src": "2313:18:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2326:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:7"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2329:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2322:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:7"
																		},
																		"nativeSrc": "2322:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2313:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:7"
																		}
																	]
																},
																{
																	"nativeSrc": "2348:43:7",
																	"nodeType": "YulAssignment",
																	"src": "2348:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2365:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:7"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2369:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2361:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:7"
																				},
																				"nativeSrc": "2361:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2380:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:7"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2384:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:7"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2377:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:7"
																				},
																				"nativeSrc": "2377:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2357:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:7"
																		},
																		"nativeSrc": "2357:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2348:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1017,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1017,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1017,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1020,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1007,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1007,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1009,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1009,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:7",
																"valueSize": 1
															}
														],
														"id": 1022,
														"nodeType": "InlineAssembly",
														"src": "2239:166:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1023,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "2486:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1031,
														"nodeType": "IfStatement",
														"src": "2482:368:7",
														"trueBody": {
															"id": 1030,
															"nodeType": "Block",
															"src": "2498:352:7",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1026,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1017,
																			"src": "2816:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1027,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1011,
																			"src": "2824:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1015,
																	"id": 1029,
																	"nodeType": "Return",
																	"src": "2809:26:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1033,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1011,
																		"src": "2960:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1034,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1020,
																		"src": "2974:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1032,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1038,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:7"
													},
													{
														"assignments": [
															1040
														],
														"declarations": [
															{
																"constant": false,
																"id": 1040,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:7",
																"nodeType": "VariableDeclaration",
																"scope": 1125,
																"src": "3261:17:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1039,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1041,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:7"
													},
													{
														"AST": {
															"nativeSrc": "3301:291:7",
															"nodeType": "YulBlock",
															"src": "3301:291:7",
															"statements": [
																{
																	"nativeSrc": "3370:38:7",
																	"nodeType": "YulAssignment",
																	"src": "3370:38:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3390:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:7"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3393:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:7"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3396:11:7",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3383:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:7"
																		},
																		"nativeSrc": "3383:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:7"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3370:9:7",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:7"
																		}
																	]
																},
																{
																	"nativeSrc": "3490:41:7",
																	"nodeType": "YulAssignment",
																	"src": "3490:41:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3503:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3513:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:7"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3524:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:7"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3510:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:7"
																				},
																				"nativeSrc": "3510:20:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3499:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:7"
																		},
																		"nativeSrc": "3499:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3490:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:7"
																		}
																	]
																},
																{
																	"nativeSrc": "3548:30:7",
																	"nodeType": "YulAssignment",
																	"src": "3548:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3561:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:7"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3568:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3557:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:7"
																		},
																		"nativeSrc": "3557:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3548:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1011,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1017,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1017,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1017,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1020,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1020,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1040,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1040,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1040,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1007,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1009,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:7",
																"valueSize": 1
															}
														],
														"id": 1042,
														"nodeType": "InlineAssembly",
														"src": "3292:300:7"
													},
													{
														"assignments": [
															1044
														],
														"declarations": [
															{
																"constant": false,
																"id": 1044,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:7",
																"nodeType": "VariableDeclaration",
																"scope": 1125,
																"src": "3899:12:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1043,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1052,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1045,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "3914:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:7",
																			"subExpression": {
																				"id": 1046,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1011,
																				"src": "3930:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1050,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:7"
													},
													{
														"AST": {
															"nativeSrc": "3969:362:7",
															"nodeType": "YulBlock",
															"src": "3969:362:7",
															"statements": [
																{
																	"nativeSrc": "4034:37:7",
																	"nodeType": "YulAssignment",
																	"src": "4034:37:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "4053:11:7",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:7"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4066:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4049:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:7"
																		},
																		"nativeSrc": "4049:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:7"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "4034:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:7"
																		}
																	]
																},
																{
																	"nativeSrc": "4138:25:7",
																	"nodeType": "YulAssignment",
																	"src": "4138:25:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "4151:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:7"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4158:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4147:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:7"
																		},
																		"nativeSrc": "4147:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4138:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:7"
																		}
																	]
																},
																{
																	"nativeSrc": "4278:39:7",
																	"nodeType": "YulAssignment",
																	"src": "4278:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4298:1:7",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:7",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4301:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4294:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:7"
																						},
																						"nativeSrc": "4294:12:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:7"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4308:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4290:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:7"
																				},
																				"nativeSrc": "4290:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4315:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4286:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:7"
																		},
																		"nativeSrc": "4286:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:7"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "4278:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1011,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1011,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1017,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1017,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1044,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1044,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1044,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1044,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1044,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:7",
																"valueSize": 1
															}
														],
														"id": 1053,
														"nodeType": "InlineAssembly",
														"src": "3960:371:7"
													},
													{
														"expression": {
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1054,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "4397:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1055,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "4406:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1056,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "4414:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1059,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:7"
													},
													{
														"assignments": [
															1061
														],
														"declarations": [
															{
																"constant": false,
																"id": 1061,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:7",
																"nodeType": "VariableDeclaration",
																"scope": 1125,
																"src": "4736:15:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1060,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1068,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1063,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1011,
																			"src": "4759:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1065,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:7"
													},
													{
														"expression": {
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1069,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "4992:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1071,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1011,
																		"src": "5007:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1072,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "5021:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1076,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:7"
													},
													{
														"expression": {
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1077,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "5061:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1079,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1011,
																		"src": "5076:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1080,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "5090:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1084,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:7"
													},
													{
														"expression": {
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1085,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "5131:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1087,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1011,
																		"src": "5146:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1088,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "5160:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1092,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:7"
													},
													{
														"expression": {
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1093,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "5201:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1095,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1011,
																		"src": "5216:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1096,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "5230:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1100,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:7"
													},
													{
														"expression": {
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1101,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "5271:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1103,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1011,
																		"src": "5286:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1104,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "5300:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1108,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:7"
													},
													{
														"expression": {
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1109,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "5342:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1111,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1011,
																		"src": "5357:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1112,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "5371:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1116,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:7"
													},
													{
														"expression": {
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1117,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "5812:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1118,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "5821:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1119,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "5829:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1122,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:7"
													},
													{
														"expression": {
															"id": 1123,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "5857:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1015,
														"id": 1124,
														"nodeType": "Return",
														"src": "5850:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:7",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1683:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1694:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1705:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:7"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1749:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:7"
									},
									"scope": 1779,
									"src": "1667:4213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "6122:189:7",
										"statements": [
											{
												"assignments": [
													1143
												],
												"declarations": [
													{
														"constant": false,
														"id": 1143,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1170,
														"src": "6132:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1142,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1149,
												"initialValue": {
													"arguments": [
														{
															"id": 1145,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "6156:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1146,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "6159:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1147,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "6162:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1144,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1127,
															1171
														],
														"referencedDeclaration": 1127,
														"src": "6149:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$920",
															"typeString": "enum Math.Rounding"
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1150,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "6188:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$920",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1151,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "6200:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$920_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:7",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 918,
															"src": "6200:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$920",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1155,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1130,
																	"src": "6222:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1156,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "6225:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1157,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "6228:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1154,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1167,
												"nodeType": "IfStatement",
												"src": "6184:98:7",
												"trueBody": {
													"id": 1166,
													"nodeType": "Block",
													"src": "6246:36:7",
													"statements": [
														{
															"expression": {
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1162,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "6260:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1165,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1168,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1143,
													"src": "6298:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1169,
												"nodeType": "Return",
												"src": "6291:13:7"
											}
										]
									},
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:7",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "6028:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "6039:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "6050:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "6071:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$920",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1136,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1135,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 920,
														"src": "6071:8:7"
													},
													"referencedDeclaration": 920,
													"src": "6071:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$920",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:7"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "6113:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:7"
									},
									"scope": 1779,
									"src": "6012:299:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "6587:1585:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1179,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "6601:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1185,
												"nodeType": "IfStatement",
												"src": "6597:45:7",
												"trueBody": {
													"id": 1184,
													"nodeType": "Block",
													"src": "6609:33:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1178,
															"id": 1183,
															"nodeType": "Return",
															"src": "6623:8:7"
														}
													]
												}
											},
											{
												"assignments": [
													1187
												],
												"declarations": [
													{
														"constant": false,
														"id": 1187,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1282,
														"src": "7321:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1186,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1196,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1190,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1174,
																			"src": "7349:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1189,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1451,
																			1487
																		],
																		"referencedDeclaration": 1451,
																		"src": "7344:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1194,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:7"
											},
											{
												"id": 1281,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:7",
												"statements": [
													{
														"expression": {
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1197,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "7782:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1198,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "7792:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1199,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1174,
																					"src": "7801:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1200,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "7805:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1203,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1207,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:7"
													},
													{
														"expression": {
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1208,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "7831:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1209,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "7841:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1210,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1174,
																					"src": "7850:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1211,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "7854:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1214,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1218,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:7"
													},
													{
														"expression": {
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1219,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "7880:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1220,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "7890:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1223,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1221,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1174,
																					"src": "7899:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1222,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "7903:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1225,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1229,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:7"
													},
													{
														"expression": {
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1230,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "7929:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1231,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "7939:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1232,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1174,
																					"src": "7948:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1233,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "7952:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1236,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1240,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:7"
													},
													{
														"expression": {
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1241,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "7978:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1242,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "7988:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1243,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1174,
																					"src": "7997:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1244,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "8001:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1247,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1251,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:7"
													},
													{
														"expression": {
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1252,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "8027:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1253,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "8037:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1254,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1174,
																					"src": "8046:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1255,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "8050:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1258,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1262,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:7"
													},
													{
														"expression": {
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1263,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "8076:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1264,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "8086:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1267,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1265,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1174,
																					"src": "8095:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1266,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "8099:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1269,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1273,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1275,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "8136:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1276,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "8144:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1277,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "8148:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1274,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 956,
																"src": "8132:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1178,
														"id": 1280,
														"nodeType": "Return",
														"src": "8125:30:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:7",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "6544:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:7"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "6578:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:7"
									},
									"scope": 1779,
									"src": "6530:1642:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "8348:161:7",
										"statements": [
											{
												"id": 1317,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:7",
												"statements": [
													{
														"assignments": [
															1295
														],
														"declarations": [
															{
																"constant": false,
																"id": 1295,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1317,
																"src": "8382:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1294,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1299,
														"initialValue": {
															"arguments": [
																{
																	"id": 1297,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "8404:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1296,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1283,
																	1319
																],
																"referencedDeclaration": 1283,
																"src": "8399:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1300,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "8427:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$920",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1304,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1301,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1289,
																					"src": "8437:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$920",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1302,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 920,
																						"src": "8449:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$920_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 918,
																					"src": "8449:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$920",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1307,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1305,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1295,
																						"src": "8464:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1306,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1295,
																						"src": "8473:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1308,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1286,
																					"src": "8482:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1314,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1293,
														"id": 1316,
														"nodeType": "Return",
														"src": "8420:72:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:7",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8286:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8297:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$920",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1288,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1287,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 920,
														"src": "8297:8:7"
													},
													"referencedDeclaration": 920,
													"src": "8297:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$920",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:7"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8339:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:7"
									},
									"scope": 1779,
									"src": "8272:237:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1450,
										"nodeType": "Block",
										"src": "8694:922:7",
										"statements": [
											{
												"assignments": [
													1328
												],
												"declarations": [
													{
														"constant": false,
														"id": 1328,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1450,
														"src": "8704:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1327,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"initialValue": {
													"hexValue": "30",
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:7"
											},
											{
												"id": 1447,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1331,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "8760:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1345,
														"nodeType": "IfStatement",
														"src": "8756:99:7",
														"trueBody": {
															"id": 1344,
															"nodeType": "Block",
															"src": "8778:77:7",
															"statements": [
																{
																	"expression": {
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1336,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "8796:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1339,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:7"
																},
																{
																	"expression": {
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1340,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "8827:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1343,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1346,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "8872:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1360,
														"nodeType": "IfStatement",
														"src": "8868:96:7",
														"trueBody": {
															"id": 1359,
															"nodeType": "Block",
															"src": "8889:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 1353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1351,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "8907:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1354,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:7"
																},
																{
																	"expression": {
																		"id": 1357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1355,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "8937:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1358,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1361,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "8981:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1375,
														"nodeType": "IfStatement",
														"src": "8977:96:7",
														"trueBody": {
															"id": 1374,
															"nodeType": "Block",
															"src": "8998:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1366,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "9016:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1369,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:7"
																},
																{
																	"expression": {
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1370,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "9046:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1373,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1376,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "9090:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1390,
														"nodeType": "IfStatement",
														"src": "9086:96:7",
														"trueBody": {
															"id": 1389,
															"nodeType": "Block",
															"src": "9107:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "9125:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1384,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:7"
																},
																{
																	"expression": {
																		"id": 1387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1385,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "9155:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1388,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1391,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "9199:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1405,
														"nodeType": "IfStatement",
														"src": "9195:93:7",
														"trueBody": {
															"id": 1404,
															"nodeType": "Block",
															"src": "9215:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1396,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "9233:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1399,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:7"
																},
																{
																	"expression": {
																		"id": 1402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1400,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "9262:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1403,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1406,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "9305:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1420,
														"nodeType": "IfStatement",
														"src": "9301:93:7",
														"trueBody": {
															"id": 1419,
															"nodeType": "Block",
															"src": "9321:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1411,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "9339:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1414,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:7"
																},
																{
																	"expression": {
																		"id": 1417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1415,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "9368:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1418,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1421,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "9411:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1435,
														"nodeType": "IfStatement",
														"src": "9407:93:7",
														"trueBody": {
															"id": 1434,
															"nodeType": "Block",
															"src": "9427:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1426,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "9445:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1429,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:7"
																},
																{
																	"expression": {
																		"id": 1432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1430,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "9474:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1433,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1436,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "9517:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1446,
														"nodeType": "IfStatement",
														"src": "9513:64:7",
														"trueBody": {
															"id": 1445,
															"nodeType": "Block",
															"src": "9533:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1441,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "9551:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1444,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1448,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1328,
													"src": "9603:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1326,
												"id": 1449,
												"nodeType": "Return",
												"src": "9596:13:7"
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:7",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "8647:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:7"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "8685:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:7"
									},
									"scope": 1779,
									"src": "8633:983:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "9849:165:7",
										"statements": [
											{
												"id": 1485,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:7",
												"statements": [
													{
														"assignments": [
															1463
														],
														"declarations": [
															{
																"constant": false,
																"id": 1463,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1485,
																"src": "9883:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1462,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1467,
														"initialValue": {
															"arguments": [
																{
																	"id": 1465,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1454,
																	"src": "9905:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1464,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1451,
																	1487
																],
																"referencedDeclaration": 1451,
																"src": "9900:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1468,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "9932:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$920",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1469,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1457,
																					"src": "9942:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$920",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1470,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 920,
																						"src": "9954:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$920_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1471,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 918,
																					"src": "9954:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$920",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1475,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1473,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1474,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1463,
																						"src": "9974:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1476,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1454,
																					"src": "9983:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1482,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1461,
														"id": 1484,
														"nodeType": "Return",
														"src": "9925:72:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:7",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "9783:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "9798:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$920",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1456,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1455,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 920,
														"src": "9798:8:7"
													},
													"referencedDeclaration": 920,
													"src": "9798:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$920",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:7"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "9840:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:7"
									},
									"scope": 1779,
									"src": "9769:245:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "10201:854:7",
										"statements": [
											{
												"assignments": [
													1496
												],
												"declarations": [
													{
														"constant": false,
														"id": 1496,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1615,
														"src": "10211:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1495,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1498,
												"initialValue": {
													"hexValue": "30",
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:7"
											},
											{
												"id": 1612,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1499,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "10267:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1515,
														"nodeType": "IfStatement",
														"src": "10263:103:7",
														"trueBody": {
															"id": 1514,
															"nodeType": "Block",
															"src": "10286:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 1508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1504,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "10304:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1509,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:7"
																},
																{
																	"expression": {
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1510,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "10339:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1513,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1516,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "10383:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1532,
														"nodeType": "IfStatement",
														"src": "10379:103:7",
														"trueBody": {
															"id": 1531,
															"nodeType": "Block",
															"src": "10402:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1521,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "10420:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1522,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1526,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:7"
																},
																{
																	"expression": {
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1527,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "10455:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1530,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "10499:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1549,
														"nodeType": "IfStatement",
														"src": "10495:103:7",
														"trueBody": {
															"id": 1548,
															"nodeType": "Block",
															"src": "10518:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1538,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "10536:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1543,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:7"
																},
																{
																	"expression": {
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1544,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "10571:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1547,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1550,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "10615:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1566,
														"nodeType": "IfStatement",
														"src": "10611:100:7",
														"trueBody": {
															"id": 1565,
															"nodeType": "Block",
															"src": "10633:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1555,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "10651:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1560,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:7"
																},
																{
																	"expression": {
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1561,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "10685:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1564,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1567,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "10728:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1583,
														"nodeType": "IfStatement",
														"src": "10724:100:7",
														"trueBody": {
															"id": 1582,
															"nodeType": "Block",
															"src": "10746:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1572,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "10764:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1577,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:7"
																},
																{
																	"expression": {
																		"id": 1580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1578,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "10798:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1581,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1584,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "10841:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1600,
														"nodeType": "IfStatement",
														"src": "10837:100:7",
														"trueBody": {
															"id": 1599,
															"nodeType": "Block",
															"src": "10859:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1589,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "10877:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1590,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1594,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:7"
																},
																{
																	"expression": {
																		"id": 1597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1595,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "10911:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1598,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1601,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "10954:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1611,
														"nodeType": "IfStatement",
														"src": "10950:66:7",
														"trueBody": {
															"id": 1610,
															"nodeType": "Block",
															"src": "10972:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1606,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "10990:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1609,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1613,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1496,
													"src": "11042:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1494,
												"id": 1614,
												"nodeType": "Return",
												"src": "11035:13:7"
											}
										]
									},
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:7",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "10154:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:7"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "10192:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:7"
									},
									"scope": 1779,
									"src": "10139:916:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1651,
										"nodeType": "Block",
										"src": "11290:167:7",
										"statements": [
											{
												"id": 1650,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:7",
												"statements": [
													{
														"assignments": [
															1628
														],
														"declarations": [
															{
																"constant": false,
																"id": 1628,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1650,
																"src": "11324:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1627,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1632,
														"initialValue": {
															"arguments": [
																{
																	"id": 1630,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "11347:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1629,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1616,
																	1652
																],
																"referencedDeclaration": 1616,
																"src": "11341:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1633,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1628,
																"src": "11374:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$920",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1637,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1634,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1622,
																					"src": "11384:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$920",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1635,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 920,
																						"src": "11396:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$920_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1636,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 918,
																					"src": "11396:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$920",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1640,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1638,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1639,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1628,
																						"src": "11417:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1619,
																					"src": "11426:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1647,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1626,
														"id": 1649,
														"nodeType": "Return",
														"src": "11367:73:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:7",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "11224:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "11239:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$920",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1621,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1620,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 920,
														"src": "11239:8:7"
													},
													"referencedDeclaration": 920,
													"src": "11239:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$920",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:7"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "11281:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:7"
									},
									"scope": 1779,
									"src": "11209:248:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "11771:600:7",
										"statements": [
											{
												"assignments": [
													1661
												],
												"declarations": [
													{
														"constant": false,
														"id": 1661,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1738,
														"src": "11781:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1660,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1663,
												"initialValue": {
													"hexValue": "30",
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:7"
											},
											{
												"id": 1735,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1664,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "11837:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1678,
														"nodeType": "IfStatement",
														"src": "11833:98:7",
														"trueBody": {
															"id": 1677,
															"nodeType": "Block",
															"src": "11855:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1669,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1655,
																			"src": "11873:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1672,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:7"
																},
																{
																	"expression": {
																		"id": 1675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1673,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "11904:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1676,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1679,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "11948:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1693,
														"nodeType": "IfStatement",
														"src": "11944:95:7",
														"trueBody": {
															"id": 1692,
															"nodeType": "Block",
															"src": "11965:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1684,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1655,
																			"src": "11983:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1687,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:7"
																},
																{
																	"expression": {
																		"id": 1690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1688,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "12013:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1691,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1694,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "12056:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1708,
														"nodeType": "IfStatement",
														"src": "12052:95:7",
														"trueBody": {
															"id": 1707,
															"nodeType": "Block",
															"src": "12073:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1699,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1655,
																			"src": "12091:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1702,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:7"
																},
																{
																	"expression": {
																		"id": 1705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1703,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "12121:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1706,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1709,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "12164:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1723,
														"nodeType": "IfStatement",
														"src": "12160:95:7",
														"trueBody": {
															"id": 1722,
															"nodeType": "Block",
															"src": "12181:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1714,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1655,
																			"src": "12199:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1717,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:7"
																},
																{
																	"expression": {
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1718,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "12229:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1721,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1724,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "12272:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1734,
														"nodeType": "IfStatement",
														"src": "12268:64:7",
														"trueBody": {
															"id": 1733,
															"nodeType": "Block",
															"src": "12288:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1729,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "12306:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1732,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1736,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1661,
													"src": "12358:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1659,
												"id": 1737,
												"nodeType": "Return",
												"src": "12351:13:7"
											}
										]
									},
									"documentation": {
										"id": 1653,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:7",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "11724:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:7"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "11762:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:7"
									},
									"scope": 1779,
									"src": "11708:663:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "12608:174:7",
										"statements": [
											{
												"id": 1776,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:7",
												"statements": [
													{
														"assignments": [
															1751
														],
														"declarations": [
															{
																"constant": false,
																"id": 1751,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1776,
																"src": "12642:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1750,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1755,
														"initialValue": {
															"arguments": [
																{
																	"id": 1753,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1742,
																	"src": "12666:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1752,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1739,
																	1778
																],
																"referencedDeclaration": 1739,
																"src": "12659:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1756,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1751,
																"src": "12693:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$920",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1757,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1745,
																					"src": "12703:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$920",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1758,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 920,
																						"src": "12715:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$920_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1759,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 918,
																					"src": "12715:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$920",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1768,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1766,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1761,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1764,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1762,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1751,
																									"src": "12736:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1763,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1765,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1767,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1742,
																					"src": "12751:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1773,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1749,
														"id": 1775,
														"nodeType": "Return",
														"src": "12686:79:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:7",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "12542:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "12557:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$920",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1744,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1743,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 920,
														"src": "12557:8:7"
													},
													"referencedDeclaration": 920,
													"src": "12557:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$920",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:7"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "12599:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:7"
									},
									"scope": 1779,
									"src": "12526:256:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1780,
							"src": "202:12582:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12682:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1884
						]
					},
					"id": 1885,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1782,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:8",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1884,
							"linearizedBaseContracts": [
								1884
							],
							"name": "SignedMath",
							"nameLocation": "223:10:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1799,
										"nodeType": "Block",
										"src": "375:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1792,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "392:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1793,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "396:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1796,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "404:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:8",
													"trueExpression": {
														"id": 1795,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1785,
														"src": "400:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1791,
												"id": 1798,
												"nodeType": "Return",
												"src": "385:20:8"
											}
										]
									},
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:8",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "324:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1784,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "334:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1786,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:8"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "367:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1789,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:8"
									},
									"scope": 1884,
									"src": "311:101:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1817,
										"nodeType": "Block",
										"src": "554:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1810,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "571:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1811,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "575:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1814,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "583:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:8",
													"trueExpression": {
														"id": 1813,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "579:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1809,
												"id": 1816,
												"nodeType": "Return",
												"src": "564:20:8"
											}
										]
									},
									"documentation": {
										"id": 1801,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:8",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "503:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1802,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "513:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1804,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:8"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "546:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1807,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:8"
									},
									"scope": 1884,
									"src": "490:101:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1861,
										"nodeType": "Block",
										"src": "796:162:8",
										"statements": [
											{
												"assignments": [
													1829
												],
												"declarations": [
													{
														"constant": false,
														"id": 1829,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "858:8:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1828,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1842,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1830,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "870:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1831,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1823,
																	"src": "874:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1833,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1834,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1821,
																				"src": "881:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1835,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1823,
																				"src": "885:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1837,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1840,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1843,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "910:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1848,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1829,
																						"src": "930:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1847,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1846,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1844,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1853,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1821,
																				"src": "944:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1854,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1823,
																				"src": "948:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1856,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1858,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1827,
												"id": 1860,
												"nodeType": "Return",
												"src": "903:48:8"
											}
										]
									},
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:8",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "745:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1820,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "755:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1822,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:8"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "788:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1825,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:8"
									},
									"scope": 1884,
									"src": "728:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1882,
										"nodeType": "Block",
										"src": "1102:158:8",
										"statements": [
											{
												"id": 1881,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1872,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1865,
																			"src": "1227:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:8",
																		"subExpression": {
																			"id": 1876,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1865,
																			"src": "1241:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:8",
																	"trueExpression": {
																		"id": 1875,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1865,
																		"src": "1236:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1870,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1869,
														"id": 1880,
														"nodeType": "Return",
														"src": "1212:31:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:8",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "1060:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1864,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:8"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "1093:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:8"
									},
									"scope": 1884,
									"src": "1047:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1885,
							"src": "215:1047:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1154:8"
				},
				"id": 8
			},
			"Bytecode.sol": {
				"ast": {
					"absolutePath": "Bytecode.sol",
					"exportedSymbols": {
						"Bytecode": [
							1996
						]
					},
					"id": 1997,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1886,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Bytecode",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1996,
							"linearizedBaseContracts": [
								1996
							],
							"name": "Bytecode",
							"nameLocation": "66:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "2c4a89fa",
									"id": 1894,
									"name": "InvalidCodeAtRange",
									"nameLocation": "85:18:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "_size",
												"nameLocation": "112:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "104:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "104:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "127:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "119:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "_end",
												"nameLocation": "143:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "135:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "103:45:9"
									},
									"src": "79:70:9"
								},
								{
									"body": {
										"id": 1914,
										"nodeType": "Block",
										"src": "460:618:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "63",
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "980:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b42b6393c1f53060fe3ddbfcd7aadcca894465a5a438f69c87d790b2299b9b2",
																"typeString": "literal_string \"c\""
															},
															"value": "c"
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1907,
																		"name": "_code",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1897,
																		"src": "1002:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1008:6:9",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1002:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "995:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint32_$",
																	"typeString": "type(uint32)"
																},
																"typeName": {
																	"id": 1905,
																	"name": "uint32",
																	"nodeType": "ElementaryTypeName",
																	"src": "995:6:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "995:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"hexValue": "80600e6000396000f3",
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1023:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e60bf27c198d7ff49e9b26b4f7eb58903fb9b75165f2451681c67000b3f2895e",
																"typeString": "literal_string hex\"80600e6000396000f3\""
															}
														},
														{
															"id": 1911,
															"name": "_code",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1897,
															"src": "1062:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_0b42b6393c1f53060fe3ddbfcd7aadcca894465a5a438f69c87d790b2299b9b2",
																"typeString": "literal_string \"c\""
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_stringliteral_e60bf27c198d7ff49e9b26b4f7eb58903fb9b75165f2451681c67000b3f2895e",
																"typeString": "literal_string hex\"80600e6000396000f3\""
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1902,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "956:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "960:12:9",
														"memberName": "encodePacked",
														"nodeType": "MemberAccess",
														"src": "956:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "956:117:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1901,
												"id": 1913,
												"nodeType": "Return",
												"src": "949:124:9"
											}
										]
									},
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "153:222:9",
										"text": "@notice Generate a creation code that results on a contract with `_code` as bytecode\n@param _code The returning value of the resulting `creationCode`\n@return creationCode (constructor) for new contract"
									},
									"id": 1915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "creationCodeFor",
									"nameLocation": "387:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "_code",
												"nameLocation": "416:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "403:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1896,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "403:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:20:9"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "446:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1899,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "446:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "445:14:9"
									},
									"scope": 1996,
									"src": "378:700:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1924,
										"nodeType": "Block",
										"src": "1331:49:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1346:30:9",
													"nodeType": "YulBlock",
													"src": "1346:30:9",
													"statements": [
														{
															"nativeSrc": "1348:26:9",
															"nodeType": "YulAssignment",
															"src": "1348:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_addr",
																		"nativeSrc": "1368:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1368:5:9"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "1356:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "1356:11:9"
																},
																"nativeSrc": "1356:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1356:18:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1348:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1348:4:9"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1918,
														"isOffset": false,
														"isSlot": false,
														"src": "1368:5:9",
														"valueSize": 1
													},
													{
														"declaration": 1921,
														"isOffset": false,
														"isSlot": false,
														"src": "1348:4:9",
														"valueSize": 1
													}
												],
												"id": 1923,
												"nodeType": "InlineAssembly",
												"src": "1337:39:9"
											}
										]
									},
									"documentation": {
										"id": 1916,
										"nodeType": "StructuredDocumentation",
										"src": "1082:176:9",
										"text": "@notice Returns the size of the code on a given address\n@param _addr Address that may or may not contain code\n@return size of the code on the given `_addr`"
									},
									"id": 1925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "codeSize",
									"nameLocation": "1270:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1287:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "1279:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1278:15:9"
									},
									"returnParameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "size",
												"nameLocation": "1325:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "1317:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1317:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:14:9"
									},
									"scope": 1996,
									"src": "1261:119:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1994,
										"nodeType": "Block",
										"src": "1897:842:9",
										"statements": [
											{
												"assignments": [
													1938
												],
												"declarations": [
													{
														"constant": false,
														"id": 1938,
														"mutability": "mutable",
														"name": "csize",
														"nameLocation": "1911:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1994,
														"src": "1903:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1937,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1903:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1942,
												"initialValue": {
													"arguments": [
														{
															"id": 1940,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1928,
															"src": "1928:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1939,
														"name": "codeSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1925,
														"src": "1919:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:15:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1903:31:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1943,
														"name": "csize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "1944:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1953:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1944:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1951,
												"nodeType": "IfStatement",
												"src": "1940:32:9",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "",
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1969:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1963:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": {
																"id": 1946,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "1963:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 1949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1963:9:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"functionReturnParameters": 1936,
													"id": 1950,
													"nodeType": "Return",
													"src": "1956:16:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1952,
														"name": "_start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1930,
														"src": "1983:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1953,
														"name": "csize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "1992:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1983:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1960,
												"nodeType": "IfStatement",
												"src": "1979:36:9",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "",
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2012:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2006:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": {
																"id": 1955,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "2006:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2006:9:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"functionReturnParameters": 1936,
													"id": 1959,
													"nodeType": "Return",
													"src": "1999:16:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1961,
														"name": "_end",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1932,
														"src": "2025:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1962,
														"name": "_start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1930,
														"src": "2032:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2025:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1970,
												"nodeType": "IfStatement",
												"src": "2021:65:9",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1965,
																"name": "csize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "2066:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1966,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1930,
																"src": "2073:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1967,
																"name": "_end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1932,
																"src": "2081:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1964,
															"name": "InvalidCodeAtRange",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "2047:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																"typeString": "function (uint256,uint256,uint256) pure"
															}
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2047:39:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1969,
													"nodeType": "RevertStatement",
													"src": "2040:46:9"
												}
											},
											{
												"id": 1993,
												"nodeType": "UncheckedBlock",
												"src": "2094:641:9",
												"statements": [
													{
														"assignments": [
															1972
														],
														"declarations": [
															{
																"constant": false,
																"id": 1972,
																"mutability": "mutable",
																"name": "reqSize",
																"nameLocation": "2120:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 1993,
																"src": "2112:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1971,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2112:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1976,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1973,
																"name": "_end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1932,
																"src": "2130:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1974,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1930,
																"src": "2137:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2130:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2112:31:9"
													},
													{
														"assignments": [
															1978
														],
														"declarations": [
															{
																"constant": false,
																"id": 1978,
																"mutability": "mutable",
																"name": "maxSize",
																"nameLocation": "2159:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 1993,
																"src": "2151:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1977,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2151:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1982,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1979,
																"name": "csize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "2169:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1980,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1930,
																"src": "2177:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2169:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2151:32:9"
													},
													{
														"assignments": [
															1984
														],
														"declarations": [
															{
																"constant": false,
																"id": 1984,
																"mutability": "mutable",
																"name": "size",
																"nameLocation": "2200:4:9",
																"nodeType": "VariableDeclaration",
																"scope": 1993,
																"src": "2192:12:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1983,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2192:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1991,
														"initialValue": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1985,
																	"name": "maxSize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1978,
																	"src": "2207:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1986,
																	"name": "reqSize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1972,
																	"src": "2217:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2207:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 1989,
																"name": "reqSize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1972,
																"src": "2237:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "2207:37:9",
															"trueExpression": {
																"id": 1988,
																"name": "maxSize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1978,
																"src": "2227:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2192:52:9"
													},
													{
														"AST": {
															"nativeSrc": "2262:467:9",
															"nodeType": "YulBlock",
															"src": "2262:467:9",
															"statements": [
																{
																	"nativeSrc": "2398:20:9",
																	"nodeType": "YulAssignment",
																	"src": "2398:20:9",
																	"value": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2413:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2413:4:9",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2407:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2407:5:9"
																		},
																		"nativeSrc": "2407:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2407:11:9"
																	},
																	"variableNames": [
																		{
																			"name": "oCode",
																			"nativeSrc": "2398:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2398:5:9"
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2480:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2480:4:9",
																				"type": "",
																				"value": "0x40"
																			},
																			{
																				"arguments": [
																					{
																						"name": "oCode",
																						"nativeSrc": "2490:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2490:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "size",
																												"nativeSrc": "2509:4:9",
																												"nodeType": "YulIdentifier",
																												"src": "2509:4:9"
																											},
																											{
																												"kind": "number",
																												"nativeSrc": "2515:4:9",
																												"nodeType": "YulLiteral",
																												"src": "2515:4:9",
																												"type": "",
																												"value": "0x20"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2505:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "2505:3:9"
																										},
																										"nativeSrc": "2505:15:9",
																										"nodeType": "YulFunctionCall",
																										"src": "2505:15:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2522:4:9",
																										"nodeType": "YulLiteral",
																										"src": "2522:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2501:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2501:3:9"
																								},
																								"nativeSrc": "2501:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2501:26:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2533:4:9",
																										"nodeType": "YulLiteral",
																										"src": "2533:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2529:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2529:3:9"
																								},
																								"nativeSrc": "2529:9:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2529:9:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "2497:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2497:3:9"
																						},
																						"nativeSrc": "2497:42:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2497:42:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2486:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2486:3:9"
																				},
																				"nativeSrc": "2486:54:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2486:54:9"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "2473:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2473:6:9"
																		},
																		"nativeSrc": "2473:68:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2473:68:9"
																	},
																	"nativeSrc": "2473:68:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "2473:68:9"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "oCode",
																				"nativeSrc": "2591:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2591:5:9"
																			},
																			{
																				"name": "size",
																				"nativeSrc": "2598:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2598:4:9"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "2584:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2584:6:9"
																		},
																		"nativeSrc": "2584:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2584:19:9"
																	},
																	"nativeSrc": "2584:19:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "2584:19:9"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "_addr",
																				"nativeSrc": "2683:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2683:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "oCode",
																						"nativeSrc": "2694:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2694:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2701:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2701:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2690:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2690:3:9"
																				},
																				"nativeSrc": "2690:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2690:16:9"
																			},
																			{
																				"name": "_start",
																				"nativeSrc": "2708:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2708:6:9"
																			},
																			{
																				"name": "size",
																				"nativeSrc": "2716:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2716:4:9"
																			}
																		],
																		"functionName": {
																			"name": "extcodecopy",
																			"nativeSrc": "2671:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "2671:11:9"
																		},
																		"nativeSrc": "2671:50:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2671:50:9"
																	},
																	"nativeSrc": "2671:50:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "2671:50:9"
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1928,
																"isOffset": false,
																"isSlot": false,
																"src": "2683:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1930,
																"isOffset": false,
																"isSlot": false,
																"src": "2708:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "2398:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "2490:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "2591:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "2694:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1984,
																"isOffset": false,
																"isSlot": false,
																"src": "2509:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1984,
																"isOffset": false,
																"isSlot": false,
																"src": "2598:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1984,
																"isOffset": false,
																"isSlot": false,
																"src": "2716:4:9",
																"valueSize": 1
															}
														],
														"id": 1992,
														"nodeType": "InlineAssembly",
														"src": "2253:476:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "1384:406:9",
										"text": "@notice Returns the code of a given address\n@dev It will fail if `_end < _start`\n@param _addr Address that may or may not contain code\n@param _start number of bytes of code to skip on read\n@param _end index before which to end extraction\n@return oCode read from `_addr` deployed bytecode\nForked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd"
									},
									"id": 1995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "codeAt",
									"nameLocation": "1802:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1817:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "1809:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "1832:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "1824:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "_end",
												"nameLocation": "1848:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "1840:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:45:9"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "oCode",
												"nameLocation": "1890:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "1877:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1934,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1877:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1876:20:9"
									},
									"scope": 1996,
									"src": "1793:946:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1997,
							"src": "58:2683:9",
							"usedErrors": [
								1894
							],
							"usedEvents": []
						}
					],
					"src": "32:2709:9"
				},
				"id": 9
			},
			"ERC6551Account.sol": {
				"ast": {
					"absolutePath": "ERC6551Account.sol",
					"exportedSymbols": {
						"Bytecode": [
							1996
						],
						"ECDSA": [
							802
						],
						"ExampleERC6551Account": [
							2224
						],
						"IERC1271": [
							13
						],
						"IERC165": [
							913
						],
						"IERC20": [
							91
						],
						"IERC6551Account": [
							2260
						],
						"IERC721": [
							207
						],
						"Math": [
							1779
						],
						"SignatureChecker": [
							901
						],
						"SignedMath": [
							1884
						],
						"Strings": [
							436
						]
					},
					"id": 2225,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1998,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1999,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2225,
							"sourceUnit": 914,
							"src": "26:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 2000,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2225,
							"sourceUnit": 208,
							"src": "92:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1271.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC1271.sol",
							"id": 2001,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2225,
							"sourceUnit": 14,
							"src": "151:57:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
							"id": 2002,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2225,
							"sourceUnit": 902,
							"src": "209:73:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Bytecode.sol",
							"file": "./Bytecode.sol",
							"id": 2003,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2225,
							"sourceUnit": 1997,
							"src": "283:24:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2004,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2225,
							"sourceUnit": 92,
							"src": "308:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC6551Account.sol",
							"file": "./IERC6551Account.sol",
							"id": 2005,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2225,
							"sourceUnit": 2261,
							"src": "365:31:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2006,
										"name": "IERC165",
										"nameLocations": [
											"432:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 913,
										"src": "432:7:10"
									},
									"id": 2007,
									"nodeType": "InheritanceSpecifier",
									"src": "432:7:10"
								},
								{
									"baseName": {
										"id": 2008,
										"name": "IERC1271",
										"nameLocations": [
											"441:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 13,
										"src": "441:8:10"
									},
									"id": 2009,
									"nodeType": "InheritanceSpecifier",
									"src": "441:8:10"
								},
								{
									"baseName": {
										"id": 2010,
										"name": "IERC6551Account",
										"nameLocations": [
											"451:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2260,
										"src": "451:15:10"
									},
									"id": 2011,
									"nodeType": "InheritanceSpecifier",
									"src": "451:15:10"
								}
							],
							"canonicalName": "ExampleERC6551Account",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2224,
							"linearizedBaseContracts": [
								2224,
								2260,
								13,
								913
							],
							"name": "ExampleERC6551Account",
							"nameLocation": "407:21:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2231
									],
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "500:2:10",
										"statements": []
									},
									"id": 2015,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "480:2:10"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "500:0:10"
									},
									"scope": 2224,
									"src": "473:29:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2243
									],
									"body": {
										"id": 2054,
										"nodeType": "Block",
										"src": "654:272:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2027,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967270,
																	"src": "672:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "675:6:10",
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"src": "672:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2029,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2171,
																	"src": "685:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "685:7:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "672:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746f6b656e206f776e6572",
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "694:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9",
																"typeString": "literal_string \"Not token owner\""
															},
															"value": "Not token owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9",
																"typeString": "literal_string \"Not token owner\""
															}
														],
														"id": 2026,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "664:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "664:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2034,
												"nodeType": "ExpressionStatement",
												"src": "664:48:10"
											},
											{
												"assignments": [
													2036
												],
												"declarations": [
													{
														"constant": false,
														"id": 2036,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "728:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2054,
														"src": "723:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2035,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "723:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2037,
												"nodeType": "VariableDeclarationStatement",
												"src": "723:12:10"
											},
											{
												"expression": {
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2038,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2036,
																"src": "746:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 2039,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2024,
																"src": "755:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 2040,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "745:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2045,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2021,
																"src": "787:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"expression": {
																	"id": 2041,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2017,
																	"src": "765:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "768:4:10",
																"memberName": "call",
																"nodeType": "MemberAccess",
																"src": "765:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 2043,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2019,
																	"src": "780:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "765:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "765:27:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"src": "745:47:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2048,
												"nodeType": "ExpressionStatement",
												"src": "745:47:10"
											},
											{
												"condition": {
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "807:8:10",
													"subExpression": {
														"id": 2049,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2036,
														"src": "808:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2053,
												"nodeType": "IfStatement",
												"src": "803:117:10",
												"trueBody": {
													"id": 2052,
													"nodeType": "Block",
													"src": "817:103:10",
													"statements": [
														{
															"AST": {
																"nativeSrc": "840:70:10",
																"nodeType": "YulBlock",
																"src": "840:70:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "result",
																							"nativeSrc": "869:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "869:6:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "877:2:10",
																							"nodeType": "YulLiteral",
																							"src": "877:2:10",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "865:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "865:3:10"
																					},
																					"nativeSrc": "865:15:10",
																					"nodeType": "YulFunctionCall",
																					"src": "865:15:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "result",
																							"nativeSrc": "888:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "888:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "882:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "882:5:10"
																					},
																					"nativeSrc": "882:13:10",
																					"nodeType": "YulFunctionCall",
																					"src": "882:13:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "858:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "858:6:10"
																			},
																			"nativeSrc": "858:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "858:38:10"
																		},
																		"nativeSrc": "858:38:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "858:38:10"
																	}
																]
															},
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 2024,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "869:6:10",
																	"valueSize": 1
																},
																{
																	"declaration": 2024,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "888:6:10",
																	"valueSize": 1
																}
															],
															"id": 2051,
															"nodeType": "InlineAssembly",
															"src": "831:79:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "9e5d4c49",
									"id": 2055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeCall",
									"nameLocation": "517:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "546:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "538:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "566:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "558:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "558:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "596:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "581:19:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "581:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:78:10"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "646:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "633:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2023,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "633:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "632:21:10"
									},
									"scope": 2224,
									"src": "508:418:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2253
									],
									"body": {
										"id": 2095,
										"nodeType": "Block",
										"src": "1103:228:10",
										"statements": [
											{
												"assignments": [
													2065
												],
												"declarations": [
													{
														"constant": false,
														"id": 2065,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1121:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2095,
														"src": "1113:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2064,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1113:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2072,
												"initialValue": {
													"expression": {
														"expression": {
															"arguments": [
																{
																	"id": 2068,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1138:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ExampleERC6551Account_$2224",
																		"typeString": "contract ExampleERC6551Account"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ExampleERC6551Account_$2224",
																		"typeString": "contract ExampleERC6551Account"
																	}
																],
																"id": 2067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1130:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2066,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1130:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1130:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1144:4:10",
														"memberName": "code",
														"nodeType": "MemberAccess",
														"src": "1130:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1149:6:10",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1130:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1113:42:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2079,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1236:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ExampleERC6551Account_$2224",
																				"typeString": "contract ExampleERC6551Account"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ExampleERC6551Account_$2224",
																				"typeString": "contract ExampleERC6551Account"
																			}
																		],
																		"id": 2078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1228:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2077,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1228:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1228:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2081,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2065,
																		"src": "1243:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "30783630",
																		"id": 2082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1252:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "0x60"
																	},
																	"src": "1243:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2084,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2065,
																	"src": "1258:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2075,
																	"name": "Bytecode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1996,
																	"src": "1212:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Bytecode_$1996_$",
																		"typeString": "type(library Bytecode)"
																	}
																},
																"id": 2076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1221:6:10",
																"memberName": "codeAt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1995,
																"src": "1212:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (address,uint256,uint256) view returns (bytes memory)"
																}
															},
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1212:53:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 2087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1284:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2086,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1284:7:10",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 2089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1293:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2088,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1293:7:10",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 2091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1302:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2090,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1302:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 2092,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1283:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
																"typeString": "tuple(type(uint256),type(address),type(uint256))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
																"typeString": "tuple(type(uint256),type(address),type(uint256))"
															}
														],
														"expression": {
															"id": 2073,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1184:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2074,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1188:6:10",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "1184:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1184:140:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_payable_$_t_uint256_$",
														"typeString": "tuple(uint256,address payable,uint256)"
													}
												},
												"functionReturnParameters": 2063,
												"id": 2094,
												"nodeType": "Return",
												"src": "1165:159:10"
											}
										]
									},
									"functionSelector": "fc0c546a",
									"id": 2096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "941:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "946:2:10"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "1017:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "1009:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "tokenContract",
												"nameLocation": "1046:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "1038:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1081:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "1073:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "995:103:10"
									},
									"scope": 2224,
									"src": "932:399:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2137,
										"nodeType": "Block",
										"src": "1475:224:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2108,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1493:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1497:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1493:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2110,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2171,
																	"src": "1507:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1507:7:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1493:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f776e6572",
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1516:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 2107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1485:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1485:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2115,
												"nodeType": "ExpressionStatement",
												"src": "1485:43:10"
											},
											{
												"assignments": [
													2117
												],
												"declarations": [
													{
														"constant": false,
														"id": 2117,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1543:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2137,
														"src": "1538:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2116,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1538:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2118,
												"nodeType": "VariableDeclarationStatement",
												"src": "1538:12:10"
											},
											{
												"expression": {
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2119,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2117,
														"src": "1560:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2124,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2098,
																"src": "1598:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2125,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2102,
																"src": "1603:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 2121,
																		"name": "_tokenAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2100,
																		"src": "1577:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2120,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "1570:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$91_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1570:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$91",
																	"typeString": "contract IERC20"
																}
															},
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1589:8:10",
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 58,
															"src": "1570:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														"id": 2126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1570:41:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1560:51:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2128,
												"nodeType": "ExpressionStatement",
												"src": "1560:51:10"
											},
											{
												"condition": {
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1625:8:10",
													"subExpression": {
														"id": 2129,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2117,
														"src": "1626:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2134,
												"nodeType": "IfStatement",
												"src": "1621:51:10",
												"trueBody": {
													"id": 2133,
													"nodeType": "Block",
													"src": "1635:37:10",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1656:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2106,
															"id": 2132,
															"nodeType": "Return",
															"src": "1649:12:10"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2135,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1688:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2106,
												"id": 2136,
												"nodeType": "Return",
												"src": "1681:11:10"
											}
										]
									},
									"functionSelector": "7d6ad95d",
									"id": 2138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeCallTransferToken",
									"nameLocation": "1346:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1388:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "1380:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "_tokenAddr",
												"nameLocation": "1409:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "1401:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1401:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1437:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "1429:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1370:80:10"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "1469:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:6:10"
									},
									"scope": 2224,
									"src": "1337:362:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2259
									],
									"body": {
										"id": 2170,
										"nodeType": "Block",
										"src": "1752:216:10",
										"statements": [
											{
												"assignments": [
													2144,
													2146,
													2148
												],
												"declarations": [
													{
														"constant": false,
														"id": 2144,
														"mutability": "mutable",
														"name": "chainId",
														"nameLocation": "1771:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2170,
														"src": "1763:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1763:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2146,
														"mutability": "mutable",
														"name": "tokenContract",
														"nameLocation": "1788:13:10",
														"nodeType": "VariableDeclaration",
														"scope": 2170,
														"src": "1780:21:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2145,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1780:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2148,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1811:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2170,
														"src": "1803:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2147,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1803:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2152,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2149,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1822:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ExampleERC6551Account_$2224",
																"typeString": "contract ExampleERC6551Account"
															}
														},
														"id": 2150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1840:5:10",
														"memberName": "token",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2096,
														"src": "1822:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_address_$_t_uint256_$",
															"typeString": "function () view external returns (uint256,address,uint256)"
														}
													},
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1822:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint256_$",
														"typeString": "tuple(uint256,address,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1762:85:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2153,
														"name": "chainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2144,
														"src": "1861:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 2154,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1872:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1878:7:10",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "1872:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1861:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2162,
												"nodeType": "IfStatement",
												"src": "1857:47:10",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1902:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1894:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2157,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1894:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1894:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"functionReturnParameters": 2142,
													"id": 2161,
													"nodeType": "Return",
													"src": "1887:17:10"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2167,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2148,
															"src": "1953:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2164,
																	"name": "tokenContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2146,
																	"src": "1930:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2163,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "1922:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$207_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1922:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$207",
																"typeString": "contract IERC721"
															}
														},
														"id": 2166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1945:7:10",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "1922:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view external returns (address)"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1922:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2142,
												"id": 2169,
												"nodeType": "Return",
												"src": "1915:46:10"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 2171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1714:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1719:2:10"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "1743:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1743:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:9:10"
									},
									"scope": 2224,
									"src": "1705:263:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										912
									],
									"body": {
										"id": 2193,
										"nodeType": "Block",
										"src": "2048:130:10",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 2183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2178,
																	"name": "interfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2173,
																	"src": "2066:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 2180,
																				"name": "IERC165",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 913,
																				"src": "2086:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC165_$913_$",
																					"typeString": "type(contract IERC165)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_contract$_IERC165_$913_$",
																					"typeString": "type(contract IERC165)"
																				}
																			],
																			"id": 2179,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "2081:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2081:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$913",
																			"typeString": "type(contract IERC165)"
																		}
																	},
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2095:11:10",
																	"memberName": "interfaceId",
																	"nodeType": "MemberAccess",
																	"src": "2081:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "2066:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2184,
																	"name": "interfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2173,
																	"src": "2122:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 2186,
																				"name": "IERC6551Account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2260,
																				"src": "2142:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC6551Account_$2260_$",
																					"typeString": "type(contract IERC6551Account)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_contract$_IERC6551Account_$2260_$",
																					"typeString": "type(contract IERC6551Account)"
																				}
																			],
																			"id": 2185,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "2137:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2137:21:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_contract$_IERC6551Account_$2260",
																			"typeString": "type(contract IERC6551Account)"
																		}
																	},
																	"id": 2188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2159:11:10",
																	"memberName": "interfaceId",
																	"nodeType": "MemberAccess",
																	"src": "2137:33:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "2122:48:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2066:104:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2191,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2065:106:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2177,
												"id": 2192,
												"nodeType": "Return",
												"src": "2058:113:10"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 2194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1983:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2008:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "2001:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2172,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2001:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:20:10"
									},
									"returnParameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "2042:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:6:10"
									},
									"scope": 2224,
									"src": "1974:204:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										12
									],
									"body": {
										"id": 2222,
										"nodeType": "Block",
										"src": "2318:249:10",
										"statements": [
											{
												"assignments": [
													2204
												],
												"declarations": [
													{
														"constant": false,
														"id": 2204,
														"mutability": "mutable",
														"name": "isValid",
														"nameLocation": "2333:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2222,
														"src": "2328:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2203,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2328:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2212,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2207,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2171,
																"src": "2393:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2393:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2209,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2196,
															"src": "2414:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2210,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2198,
															"src": "2432:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2205,
															"name": "SignatureChecker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "2343:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SignatureChecker_$901_$",
																"typeString": "type(library SignatureChecker)"
															}
														},
														"id": 2206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2360:19:10",
														"memberName": "isValidSignatureNow",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 848,
														"src": "2343:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,bytes32,bytes memory) view returns (bool)"
														}
													},
													"id": 2211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2343:108:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2328:123:10"
											},
											{
												"condition": {
													"id": 2213,
													"name": "isValid",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2204,
													"src": "2466:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2219,
												"nodeType": "IfStatement",
												"src": "2462:79:10",
												"trueBody": {
													"id": 2218,
													"nodeType": "Block",
													"src": "2475:66:10",
													"statements": [
														{
															"expression": {
																"expression": {
																	"expression": {
																		"id": 2214,
																		"name": "IERC1271",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 13,
																		"src": "2496:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1271_$13_$",
																			"typeString": "type(contract IERC1271)"
																		}
																	},
																	"id": 2215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2505:16:10",
																	"memberName": "isValidSignature",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 12,
																	"src": "2496:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
																	}
																},
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2522:8:10",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "2496:34:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"functionReturnParameters": 2202,
															"id": 2217,
															"nodeType": "Return",
															"src": "2489:41:10"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "",
													"id": 2220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2558:2:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2202,
												"id": 2221,
												"nodeType": "Return",
												"src": "2551:9:10"
											}
										]
									},
									"functionSelector": "1626ba7e",
									"id": 2223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "2193:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2218:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "2210:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2195,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2237:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "2224:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2197,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2224:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:38:10"
									},
									"returnParameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "2302:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "2295:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2200,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2295:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2294:19:10"
									},
									"scope": 2224,
									"src": "2184:383:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2225,
							"src": "398:2171:10",
							"usedErrors": [
								1894
							],
							"usedEvents": []
						}
					],
					"src": "0:2570:10"
				},
				"id": 10
			},
			"IERC6551Account.sol": {
				"ast": {
					"absolutePath": "IERC6551Account.sol",
					"exportedSymbols": {
						"IERC6551Account": [
							2260
						]
					},
					"id": 2261,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2226,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC6551Account",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2227,
								"nodeType": "StructuredDocumentation",
								"src": "63:67:11",
								"text": "@dev the ERC-165 identifier for this interface is `0x400a0398`"
							},
							"fullyImplemented": false,
							"id": 2260,
							"linearizedBaseContracts": [
								2260
							],
							"name": "IERC6551Account",
							"nameLocation": "140:15:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2228,
										"nodeType": "StructuredDocumentation",
										"src": "162:197:11",
										"text": "@dev Token bound accounts MUST implement a `receive` function.\n Token bound accounts MAY perform arbitrary logic to restrict conditions\n under which Ether can be received."
									},
									"id": 2231,
									"implemented": false,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:2:11"
									},
									"returnParameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:0:11"
									},
									"scope": 2260,
									"src": "364:27:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2232,
										"nodeType": "StructuredDocumentation",
										"src": "397:688:11",
										"text": "@dev Executes `call` on address `to`, with value `value` and calldata\n `data`.\n MUST revert and bubble up errors if call fails.\n By default, token bound accounts MUST allow the owner of the ERC-721 token\n which owns the account to execute arbitrary calls using `executeCall`.\n Token bound accounts MAY implement additional authorization mechanisms\n which limit the ability of the ERC-721 token holder to execute calls.\n Token bound accounts MAY implement additional execution functions which\n grant execution permissions to other non-owner accounts.\n @return The result of the call"
									},
									"functionSelector": "9e5d4c49",
									"id": 2243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeCall",
									"nameLocation": "1099:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1128:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2243,
												"src": "1120:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1148:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2243,
												"src": "1140:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1140:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1178:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2243,
												"src": "1163:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1163:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1110:78:11"
									},
									"returnParameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2243,
												"src": "1215:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1215:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1214:14:11"
									},
									"scope": 2260,
									"src": "1090:139:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2244,
										"nodeType": "StructuredDocumentation",
										"src": "1235:398:11",
										"text": "@dev Returns identifier of the ERC-721 token which owns the\n account\n The return value of this function MUST be constant - it MUST NOT change\n over time.\n @return chainId The EIP-155 ID of the chain the ERC-721 token exists on\n @return tokenContract The contract address of the ERC-721 token\n @return tokenId The ID of the ERC-721 token"
									},
									"functionSelector": "fc0c546a",
									"id": 2253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "1647:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:11"
									},
									"returnParameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "1723:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "1715:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "tokenContract",
												"nameLocation": "1752:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "1744:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1787:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "1779:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1701:103:11"
									},
									"scope": 2260,
									"src": "1638:167:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2254,
										"nodeType": "StructuredDocumentation",
										"src": "1811:280:11",
										"text": "@dev Returns the owner of the ERC-721 token which controls the account\n if the token exists.\n This is value is obtained by calling `ownerOf` on the ERC-721 contract.\n @return Address of the owner of the ERC-721 token which owns the account"
									},
									"functionSelector": "8da5cb5b",
									"id": 2259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2105:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2110:2:11"
									},
									"returnParameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "2136:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2136:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2135:9:11"
									},
									"scope": 2260,
									"src": "2096:49:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2261,
							"src": "130:2207:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "38:2299:11"
				},
				"id": 11
			}
		}
	}
}