{
	"id": "bbb65962ab7c526650503d7560e5c1cc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"IERC6551Account.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.21;\n/// @dev the ERC-165 identifier for this interface is `0x400a0398`\ninterface IERC6551Account {\n    /// @dev Token bound accounts MUST implement a `receive` function.\n    ///\n    /// Token bound accounts MAY perform arbitrary logic to restrict conditions\n    /// under which Ether can be received.\n    receive() external payable;\n\n    /// @dev Executes `call` on address `to`, with value `value` and calldata\n    /// `data`.\n    ///\n    /// MUST revert and bubble up errors if call fails.\n    ///\n    /// By default, token bound accounts MUST allow the owner of the ERC-721 token\n    /// which owns the account to execute arbitrary calls using `executeCall`.\n    ///\n    /// Token bound accounts MAY implement additional authorization mechanisms\n    /// which limit the ability of the ERC-721 token holder to execute calls.\n    ///\n    /// Token bound accounts MAY implement additional execution functions which\n    /// grant execution permissions to other non-owner accounts.\n    ///\n    /// @return The result of the call\n    function executeCall(\n        address to,\n        uint256 value,\n        bytes calldata data\n    ) external payable returns (bytes memory);\n\n    /// @dev Returns identifier of the ERC-721 token which owns the\n    /// account\n    ///\n    /// The return value of this function MUST be constant - it MUST NOT change\n    /// over time.\n    ///\n    /// @return chainId The EIP-155 ID of the chain the ERC-721 token exists on\n    /// @return tokenContract The contract address of the ERC-721 token\n    /// @return tokenId The ID of the ERC-721 token\n    function token()\n        external\n        view\n        returns (\n            uint256 chainId,\n            address tokenContract,\n            uint256 tokenId\n        );\n\n    /// @dev Returns the owner of the ERC-721 token which controls the account\n    /// if the token exists.\n    ///\n    /// This is value is obtained by calling `ownerOf` on the ERC-721 contract.\n    ///\n    /// @return Address of the owner of the ERC-721 token which owns the account\n    function owner() external view returns (address);\n\n    /// @dev Returns a nonce value that is updated on every successful transaction\n    ///\n    /// @return The current account nonce\n  //  function nonce() external view returns (uint256);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"IERC6551Account.sol": {
				"IERC6551Account": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "executeCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "the ERC-165 identifier for this interface is `0x400a0398`",
						"kind": "dev",
						"methods": {
							"executeCall(address,uint256,bytes)": {
								"details": "Executes `call` on address `to`, with value `value` and calldata `data`. MUST revert and bubble up errors if call fails. By default, token bound accounts MUST allow the owner of the ERC-721 token which owns the account to execute arbitrary calls using `executeCall`. Token bound accounts MAY implement additional authorization mechanisms which limit the ability of the ERC-721 token holder to execute calls. Token bound accounts MAY implement additional execution functions which grant execution permissions to other non-owner accounts.",
								"returns": {
									"_0": "The result of the call"
								}
							},
							"owner()": {
								"details": "Returns the owner of the ERC-721 token which controls the account if the token exists. This is value is obtained by calling `ownerOf` on the ERC-721 contract.",
								"returns": {
									"_0": "Address of the owner of the ERC-721 token which owns the account"
								}
							},
							"token()": {
								"details": "Returns identifier of the ERC-721 token which owns the account The return value of this function MUST be constant - it MUST NOT change over time.",
								"returns": {
									"chainId": "The EIP-155 ID of the chain the ERC-721 token exists on",
									"tokenContract": "The contract address of the ERC-721 token",
									"tokenId": "The ID of the ERC-721 token"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"executeCall(address,uint256,bytes)": "9e5d4c49",
							"owner()": "8da5cb5b",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"the ERC-165 identifier for this interface is `0x400a0398`\",\"kind\":\"dev\",\"methods\":{\"executeCall(address,uint256,bytes)\":{\"details\":\"Executes `call` on address `to`, with value `value` and calldata `data`. MUST revert and bubble up errors if call fails. By default, token bound accounts MUST allow the owner of the ERC-721 token which owns the account to execute arbitrary calls using `executeCall`. Token bound accounts MAY implement additional authorization mechanisms which limit the ability of the ERC-721 token holder to execute calls. Token bound accounts MAY implement additional execution functions which grant execution permissions to other non-owner accounts.\",\"returns\":{\"_0\":\"The result of the call\"}},\"owner()\":{\"details\":\"Returns the owner of the ERC-721 token which controls the account if the token exists. This is value is obtained by calling `ownerOf` on the ERC-721 contract.\",\"returns\":{\"_0\":\"Address of the owner of the ERC-721 token which owns the account\"}},\"token()\":{\"details\":\"Returns identifier of the ERC-721 token which owns the account The return value of this function MUST be constant - it MUST NOT change over time.\",\"returns\":{\"chainId\":\"The EIP-155 ID of the chain the ERC-721 token exists on\",\"tokenContract\":\"The contract address of the ERC-721 token\",\"tokenId\":\"The ID of the ERC-721 token\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC6551Account.sol\":\"IERC6551Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC6551Account.sol\":{\"keccak256\":\"0x883166a9ae010963ea8194310ca4ed0f6c99dc7d2f43e9f3686af298b4d5965a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2adcd8793133c904644960c4ba07690e5b74b57c27d3df8c55a331be281e7b1e\",\"dweb:/ipfs/Qmbojmu8f4DuwtKsP4tmGmXFhi2TSqHngxzCDMcRDNoXYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"IERC6551Account.sol": {
				"ast": {
					"absolutePath": "IERC6551Account.sol",
					"exportedSymbols": {
						"IERC6551Account": [
							35
						]
					},
					"id": 36,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC6551Account",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "63:67:0",
								"text": "@dev the ERC-165 identifier for this interface is `0x400a0398`"
							},
							"fullyImplemented": false,
							"id": 35,
							"linearizedBaseContracts": [
								35
							],
							"name": "IERC6551Account",
							"nameLocation": "140:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "162:197:0",
										"text": "@dev Token bound accounts MUST implement a `receive` function.\n Token bound accounts MAY perform arbitrary logic to restrict conditions\n under which Ether can be received."
									},
									"id": 6,
									"implemented": false,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:0:0"
									},
									"scope": 35,
									"src": "364:27:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "397:688:0",
										"text": "@dev Executes `call` on address `to`, with value `value` and calldata\n `data`.\n MUST revert and bubble up errors if call fails.\n By default, token bound accounts MUST allow the owner of the ERC-721 token\n which owns the account to execute arbitrary calls using `executeCall`.\n Token bound accounts MAY implement additional authorization mechanisms\n which limit the ability of the ERC-721 token holder to execute calls.\n Token bound accounts MAY implement additional execution functions which\n grant execution permissions to other non-owner accounts.\n @return The result of the call"
									},
									"functionSelector": "9e5d4c49",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeCall",
									"nameLocation": "1099:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1128:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1120:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1148:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1140:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1140:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1178:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1163:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1163:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1110:78:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1215:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 15,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1215:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1214:14:0"
									},
									"scope": 35,
									"src": "1090:139:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1235:398:0",
										"text": "@dev Returns identifier of the ERC-721 token which owns the\n account\n The return value of this function MUST be constant - it MUST NOT change\n over time.\n @return chainId The EIP-155 ID of the chain the ERC-721 token exists on\n @return tokenContract The contract address of the ERC-721 token\n @return tokenId The ID of the ERC-721 token"
									},
									"functionSelector": "fc0c546a",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "1723:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1715:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "tokenContract",
												"nameLocation": "1752:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1744:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1787:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1779:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1701:103:0"
									},
									"scope": 35,
									"src": "1638:167:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1811:280:0",
										"text": "@dev Returns the owner of the ERC-721 token which controls the account\n if the token exists.\n This is value is obtained by calling `ownerOf` on the ERC-721 contract.\n @return Address of the owner of the ERC-721 token which owns the account"
									},
									"functionSelector": "8da5cb5b",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2105:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2110:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "2136:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2135:9:0"
									},
									"scope": 35,
									"src": "2096:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 36,
							"src": "130:2207:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "38:2299:0"
				},
				"id": 0
			}
		}
	}
}